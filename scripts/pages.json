[{"name":"abstract fun arcadeDrive(power: Double, rotation: Double = 0.0)","description":"frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.arcadeDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-differential-drivetrain/arcade-drive.html","searchKeys":["arcadeDrive","abstract fun arcadeDrive(power: Double, rotation: Double = 0.0)","frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.arcadeDrive"]},{"name":"abstract fun calculate(target: DimensionedQuantity<I>, error: DimensionedQuantity<I>): DimensionedQuantity<O>","description":"frc.chargers.utils.pid.UnitFeedForward.calculate","location":"-charger-lib/frc.chargers.utils.pid/-unit-feed-forward/calculate.html","searchKeys":["calculate","abstract fun calculate(target: DimensionedQuantity<I>, error: DimensionedQuantity<I>): DimensionedQuantity<O>","frc.chargers.utils.pid.UnitFeedForward.calculate"]},{"name":"abstract fun calculate(target: Double, error: Double): Double","description":"frc.chargers.utils.pid.FeedForward.calculate","location":"-charger-lib/frc.chargers.utils.pid/-feed-forward/calculate.html","searchKeys":["calculate","abstract fun calculate(target: Double, error: Double): Double","frc.chargers.utils.pid.FeedForward.calculate"]},{"name":"abstract fun configure(configuration: C)","description":"frc.chargers.hardware.motorcontrol.MotorConfigurable.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-motor-configurable/configure.html","searchKeys":["configure","abstract fun configure(configuration: C)","frc.chargers.hardware.motorcontrol.MotorConfigurable.configure"]},{"name":"abstract fun curvatureDrive(power: Double, steering: Double)","description":"frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.curvatureDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-differential-drivetrain/curvature-drive.html","searchKeys":["curvatureDrive","abstract fun curvatureDrive(power: Double, steering: Double)","frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.curvatureDrive"]},{"name":"abstract fun stop()","description":"frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.stop","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-differential-drivetrain/stop.html","searchKeys":["stop","abstract fun stop()","frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.stop"]},{"name":"abstract fun tankDrive(leftPower: Double, rightPower: Double)","description":"frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.tankDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-differential-drivetrain/tank-drive.html","searchKeys":["tankDrive","abstract fun tankDrive(leftPower: Double, rightPower: Double)","frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain.tankDrive"]},{"name":"abstract val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.Encoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-encoder/angular-position.html","searchKeys":["angularPosition","abstract val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.Encoder.angularPosition"]},{"name":"abstract val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.Encoder.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-encoder/angular-velocity.html","searchKeys":["angularVelocity","abstract val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.Encoder.angularVelocity"]},{"name":"abstract val controlFramePeriods: MutableMap<ControlFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.controlFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/control-frame-periods.html","searchKeys":["controlFramePeriods","abstract val controlFramePeriods: MutableMap<ControlFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.controlFramePeriods"]},{"name":"abstract val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.customParameters","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/custom-parameters.html","searchKeys":["customParameters","abstract val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.customParameters"]},{"name":"abstract val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.EncoderMotorController.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller/encoder.html","searchKeys":["encoder","abstract val encoder: Encoder","frc.chargers.hardware.motorcontrol.EncoderMotorController.encoder"]},{"name":"abstract val heading: Angle","description":"frc.chargers.hardware.sensors.HeadingProvider.heading","location":"-charger-lib/frc.chargers.hardware.sensors/-heading-provider/heading.html","searchKeys":["heading","abstract val heading: Angle","frc.chargers.hardware.sensors.HeadingProvider.heading"]},{"name":"abstract val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.motionMagicConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/motion-magic-configuration.html","searchKeys":["motionMagicConfiguration","abstract val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.motionMagicConfiguration"]},{"name":"abstract val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.pidConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/pid-configuration.html","searchKeys":["pidConfiguration","abstract val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.pidConfiguration"]},{"name":"abstract val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.selectedFeedbackCoefficients","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/selected-feedback-coefficients.html","searchKeys":["selectedFeedbackCoefficients","abstract val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.selectedFeedbackCoefficients"]},{"name":"abstract val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.selectedFeedbackSensors","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/selected-feedback-sensors.html","searchKeys":["selectedFeedbackSensors","abstract val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.selectedFeedbackSensors"]},{"name":"abstract val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.sensorTermFeedbackDevices","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/sensor-term-feedback-devices.html","searchKeys":["sensorTermFeedbackDevices","abstract val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.sensorTermFeedbackDevices"]},{"name":"abstract val statusFramePeriods: MutableMap<StatusFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.statusFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/status-frame-periods.html","searchKeys":["statusFramePeriods","abstract val statusFramePeriods: MutableMap<StatusFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.statusFramePeriods"]},{"name":"abstract val turnPIDConstants: PIDConstants","description":"frc.chargers.constants.TurnPIDConstants.turnPIDConstants","location":"-charger-lib/frc.chargers.constants/-turn-p-i-d-constants/turn-p-i-d-constants.html","searchKeys":["turnPIDConstants","abstract val turnPIDConstants: PIDConstants","frc.chargers.constants.TurnPIDConstants.turnPIDConstants"]},{"name":"abstract var closedLoopRampSecondsFromNeutralToFull: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.closedLoopRampSecondsFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/closed-loop-ramp-seconds-from-neutral-to-full.html","searchKeys":["closedLoopRampSecondsFromNeutralToFull","abstract var closedLoopRampSecondsFromNeutralToFull: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.closedLoopRampSecondsFromNeutralToFull"]},{"name":"abstract var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.forwardLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/forward-limit-switch-source.html","searchKeys":["forwardLimitSwitchSource","abstract var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.forwardLimitSwitchSource"]},{"name":"abstract var forwardSoftLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.forwardSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/forward-soft-limit-enable.html","searchKeys":["forwardSoftLimitEnable","abstract var forwardSoftLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.forwardSoftLimitEnable"]},{"name":"abstract var forwardSoftLimitThreshold: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.forwardSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/forward-soft-limit-threshold.html","searchKeys":["forwardSoftLimitThreshold","abstract var forwardSoftLimitThreshold: Angle?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.forwardSoftLimitThreshold"]},{"name":"abstract var invertSensorPhase: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.invertSensorPhase","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/invert-sensor-phase.html","searchKeys":["invertSensorPhase","abstract var invertSensorPhase: Boolean?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.invertSensorPhase"]},{"name":"abstract var neutralDeadbandPercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.neutralDeadbandPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/neutral-deadband-percent.html","searchKeys":["neutralDeadbandPercent","abstract var neutralDeadbandPercent: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.neutralDeadbandPercent"]},{"name":"abstract var nominalOutputForwardPercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.nominalOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/nominal-output-forward-percent.html","searchKeys":["nominalOutputForwardPercent","abstract var nominalOutputForwardPercent: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.nominalOutputForwardPercent"]},{"name":"abstract var nominalOutputReversePercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.nominalOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/nominal-output-reverse-percent.html","searchKeys":["nominalOutputReversePercent","abstract var nominalOutputReversePercent: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.nominalOutputReversePercent"]},{"name":"abstract var openLoopRampSecondsFromNeutralToFull: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.openLoopRampSecondsFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/open-loop-ramp-seconds-from-neutral-to-full.html","searchKeys":["openLoopRampSecondsFromNeutralToFull","abstract var openLoopRampSecondsFromNeutralToFull: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.openLoopRampSecondsFromNeutralToFull"]},{"name":"abstract var peakOutputForwardPercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.peakOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/peak-output-forward-percent.html","searchKeys":["peakOutputForwardPercent","abstract var peakOutputForwardPercent: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.peakOutputForwardPercent"]},{"name":"abstract var peakOutputReversePercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.peakOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/peak-output-reverse-percent.html","searchKeys":["peakOutputReversePercent","abstract var peakOutputReversePercent: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.peakOutputReversePercent"]},{"name":"abstract var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.remoteFeedbackFilter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/remote-feedback-filter.html","searchKeys":["remoteFeedbackFilter","abstract var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.remoteFeedbackFilter"]},{"name":"abstract var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.reverseLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/reverse-limit-switch-source.html","searchKeys":["reverseLimitSwitchSource","abstract var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.reverseLimitSwitchSource"]},{"name":"abstract var reverseSoftLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.reverseSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/reverse-soft-limit-enable.html","searchKeys":["reverseSoftLimitEnable","abstract var reverseSoftLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.reverseSoftLimitEnable"]},{"name":"abstract var reverseSoftLimitThreshold: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.reverseSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/reverse-soft-limit-threshold.html","searchKeys":["reverseSoftLimitThreshold","abstract var reverseSoftLimitThreshold: Angle?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.reverseSoftLimitThreshold"]},{"name":"abstract var voltageCompensationEnabled: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.voltageCompensationEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/voltage-compensation-enabled.html","searchKeys":["voltageCompensationEnabled","abstract var voltageCompensationEnabled: Boolean?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.voltageCompensationEnabled"]},{"name":"abstract var voltageCompensationSaturationVoltage: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.voltageCompensationSaturationVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/voltage-compensation-saturation-voltage.html","searchKeys":["voltageCompensationSaturationVoltage","abstract var voltageCompensationSaturationVoltage: Double?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.voltageCompensationSaturationVoltage"]},{"name":"abstract var voltageMeasurementFilterSamples: Int?","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.voltageMeasurementFilterSamples","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/voltage-measurement-filter-samples.html","searchKeys":["voltageMeasurementFilterSamples","abstract var voltageMeasurementFilterSamples: Int?","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.voltageMeasurementFilterSamples"]},{"name":"annotation class CommandBuilderMarker","description":"frc.chargers.commands.CommandBuilderMarker","location":"-charger-lib/frc.chargers.commands/-command-builder-marker/index.html","searchKeys":["CommandBuilderMarker","annotation class CommandBuilderMarker","frc.chargers.commands.CommandBuilderMarker"]},{"name":"class AverageEncoder(encoders: Encoder) : Encoder","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/index.html","searchKeys":["AverageEncoder","class AverageEncoder(encoders: Encoder) : Encoder","frc.chargers.hardware.sensors.encoders.AverageEncoder"]},{"name":"class CTREMotorControllerEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle) : Encoder","description":"frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-c-t-r-e-motor-controller-encoder-adapter/index.html","searchKeys":["CTREMotorControllerEncoderAdapter","class CTREMotorControllerEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle) : Encoder","frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter"]},{"name":"class ChargerSpark(channel: Int) : Spark, MotorConfigurable<SparkConfiguration> ","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSpark","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark/index.html","searchKeys":["ChargerSpark","class ChargerSpark(channel: Int) : Spark, MotorConfigurable<SparkConfiguration> ","frc.chargers.hardware.motorcontrol.rev.ChargerSpark"]},{"name":"class CommandBuilder","description":"frc.chargers.commands.CommandBuilder","location":"-charger-lib/frc.chargers.commands/-command-builder/index.html","searchKeys":["CommandBuilder","class CommandBuilder","frc.chargers.commands.CommandBuilder"]},{"name":"class NavX : HeadingProvider","description":"frc.chargers.hardware.sensors.NavX","location":"-charger-lib/frc.chargers.hardware.sensors/-nav-x/index.html","searchKeys":["NavX","class NavX : HeadingProvider","frc.chargers.hardware.sensors.NavX"]},{"name":"class RevEncoderAdapter(revEncoder: RelativeEncoder) : Encoder","description":"frc.chargers.hardware.sensors.encoders.RevEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-rev-encoder-adapter/index.html","searchKeys":["RevEncoderAdapter","class RevEncoderAdapter(revEncoder: RelativeEncoder) : Encoder","frc.chargers.hardware.sensors.encoders.RevEncoderAdapter"]},{"name":"class SuperPIDController(pidConstants: PIDConstants, getInput: () -> Double, val outputRange: ClosedRange<Double> = Double.NEGATIVE_INFINITY..Double.POSITIVE_INFINITY, target: Double, var feedForward: FeedForward = FeedForward { _, _ -> 0.0 })","description":"frc.chargers.utils.pid.SuperPIDController","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/index.html","searchKeys":["SuperPIDController","class SuperPIDController(pidConstants: PIDConstants, getInput: () -> Double, val outputRange: ClosedRange<Double> = Double.NEGATIVE_INFINITY..Double.POSITIVE_INFINITY, target: Double, var feedForward: FeedForward = FeedForward { _, _ -> 0.0 })","frc.chargers.utils.pid.SuperPIDController"]},{"name":"class UnitSuperPIDController<I : Dimension, O : Dimension>(pidConstants: PIDConstants, getInput: () -> DimensionedQuantity<I>, val outputRange: ClosedRange<DimensionedQuantity<O>> = DimensionedQuantity<O>(Double.NEGATIVE_INFINITY)..DimensionedQuantity<O>(Double.POSITIVE_INFINITY), target: DimensionedQuantity<I>, var feedForward: UnitFeedForward<I, O> = UnitFeedForward { _, _ -> DimensionedQuantity(0.0) })","description":"frc.chargers.utils.pid.UnitSuperPIDController","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/index.html","searchKeys":["UnitSuperPIDController","class UnitSuperPIDController<I : Dimension, O : Dimension>(pidConstants: PIDConstants, getInput: () -> DimensionedQuantity<I>, val outputRange: ClosedRange<DimensionedQuantity<O>> = DimensionedQuantity<O>(Double.NEGATIVE_INFINITY)..DimensionedQuantity<O>(Double.POSITIVE_INFINITY), target: DimensionedQuantity<I>, var feedForward: UnitFeedForward<I, O> = UnitFeedForward { _, _ -> DimensionedQuantity(0.0) })","frc.chargers.utils.pid.UnitSuperPIDController"]},{"name":"class WPILibEncoderAdapter(wpiLibEncoder: Encoder, anglePerPulse: Angle) : Encoder","description":"frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-w-p-i-lib-encoder-adapter/index.html","searchKeys":["WPILibEncoderAdapter","class WPILibEncoderAdapter(wpiLibEncoder: Encoder, anglePerPulse: Angle) : Encoder","frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter"]},{"name":"class Within<D : Dimension>(val allowableError: ClosedRange<DimensionedQuantity<D>>) : Precision<D> ","description":"frc.chargers.utils.Precision.Within","location":"-charger-lib/frc.chargers.utils/-precision/-within/index.html","searchKeys":["Within","class Within<D : Dimension>(val allowableError: ClosedRange<DimensionedQuantity<D>>) : Precision<D> ","frc.chargers.utils.Precision.Within"]},{"name":"data class BaseTalonRemoteFeedbackFilterDevice(val talon: BaseTalon, val remoteOrdinal: Int) : CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-base-talon-remote-feedback-filter-device/index.html","searchKeys":["BaseTalonRemoteFeedbackFilterDevice","data class BaseTalonRemoteFeedbackFilterDevice(val talon: BaseTalon, val remoteOrdinal: Int) : CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice"]},{"name":"data class CANCoderRemoteFeedbackFilterDevice(val canCoder: CANCoder, val remoteOrdinal: Int) : CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-c-a-n-coder-remote-feedback-filter-device/index.html","searchKeys":["CANCoderRemoteFeedbackFilterDevice","data class CANCoderRemoteFeedbackFilterDevice(val canCoder: CANCoder, val remoteOrdinal: Int) : CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice"]},{"name":"data class LimitSwitchConfig(val type: RemoteLimitSwitchSource, val normalOpenOrClose: LimitSwitchNormal, val deviceId: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-limit-switch-config/index.html","searchKeys":["LimitSwitchConfig","data class LimitSwitchConfig(val type: RemoteLimitSwitchSource, val normalOpenOrClose: LimitSwitchNormal, val deviceId: Int)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig"]},{"name":"data class MotionMagicConfiguration(var cruiseVelocity: AngularVelocity? = null, var acceleration: AngularAcceleration? = null, var sCurveStrength: Int? = null, var baseTrajectoryPeriod: Time? = null)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-motion-magic-configuration/index.html","searchKeys":["MotionMagicConfiguration","data class MotionMagicConfiguration(var cruiseVelocity: AngularVelocity? = null, var acceleration: AngularAcceleration? = null, var sCurveStrength: Int? = null, var baseTrajectoryPeriod: Time? = null)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration"]},{"name":"data class OtherRemoteFeedbackFilterDevice(val deviceId: Int, val remoteSensorSource: RemoteSensorSource, val remoteOrdinal: Int) : CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-other-remote-feedback-filter-device/index.html","searchKeys":["OtherRemoteFeedbackFilterDevice","data class OtherRemoteFeedbackFilterDevice(val deviceId: Int, val remoteSensorSource: RemoteSensorSource, val remoteOrdinal: Int) : CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice"]},{"name":"data class PIDConfiguration(val pidConstants: MutableMap<PIDIndex, PIDConstants> = mutableMapOf(), val feedForwards: MutableMap<PIDIndex, Double> = mutableMapOf(), val integralZones: MutableMap<PIDIndex, Double> = mutableMapOf(), val allowableClosedLoopErrors: MutableMap<PIDIndex, Double> = mutableMapOf(), val maxIntegralAccumulators: MutableMap<PIDIndex, Double> = mutableMapOf(), val closedLoopPeakOutputPercents: MutableMap<PIDIndex, Double> = mutableMapOf(), val closedLoopPeriods: MutableMap<PIDIndex, Time> = mutableMapOf(), var invertAuxPID: Boolean? = null, val profileSlots: MutableMap<SlotIndex, PIDIndex>? = null)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/index.html","searchKeys":["PIDConfiguration","data class PIDConfiguration(val pidConstants: MutableMap<PIDIndex, PIDConstants> = mutableMapOf(), val feedForwards: MutableMap<PIDIndex, Double> = mutableMapOf(), val integralZones: MutableMap<PIDIndex, Double> = mutableMapOf(), val allowableClosedLoopErrors: MutableMap<PIDIndex, Double> = mutableMapOf(), val maxIntegralAccumulators: MutableMap<PIDIndex, Double> = mutableMapOf(), val closedLoopPeakOutputPercents: MutableMap<PIDIndex, Double> = mutableMapOf(), val closedLoopPeriods: MutableMap<PIDIndex, Time> = mutableMapOf(), var invertAuxPID: Boolean? = null, val profileSlots: MutableMap<SlotIndex, PIDIndex>? = null)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration"]},{"name":"data class PIDConstants(var kP: Double, var kI: Double, var kD: Double)","description":"frc.chargers.utils.pid.PIDConstants","location":"-charger-lib/frc.chargers.utils.pid/-p-i-d-constants/index.html","searchKeys":["PIDConstants","data class PIDConstants(var kP: Double, var kI: Double, var kD: Double)","frc.chargers.utils.pid.PIDConstants"]},{"name":"data class SecondaryCurrentLimit(val limit: Double, val chopCycles: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-secondary-current-limit/index.html","searchKeys":["SecondaryCurrentLimit","data class SecondaryCurrentLimit(val limit: Double, val chopCycles: Int? = null)","frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit"]},{"name":"data class SmartCurrentLimit(val stallLimit: Int, val freeLimit: Int? = null, val limitRPM: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-smart-current-limit/index.html","searchKeys":["SmartCurrentLimit","data class SmartCurrentLimit(val stallLimit: Int, val freeLimit: Int? = null, val limitRPM: Int? = null)","frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit"]},{"name":"data class SparkConfiguration(var inverted: Boolean? = null) : MotorConfiguration","description":"frc.chargers.hardware.motorcontrol.rev.SparkConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-configuration/index.html","searchKeys":["SparkConfiguration","data class SparkConfiguration(var inverted: Boolean? = null) : MotorConfiguration","frc.chargers.hardware.motorcontrol.rev.SparkConfiguration"]},{"name":"data class SparkMaxConfiguration(var idleMode: CANSparkMax.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Double? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, val periodicFramePeriods: MutableMap<CANSparkMaxLowLevel.PeriodicFrame, Time> = mutableMapOf(), var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, val softLimits: MutableMap<CANSparkMax.SoftLimitDirection, Float> = mutableMapOf()) : MotorConfiguration","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/index.html","searchKeys":["SparkMaxConfiguration","data class SparkMaxConfiguration(var idleMode: CANSparkMax.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Double? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, val periodicFramePeriods: MutableMap<CANSparkMaxLowLevel.PeriodicFrame, Time> = mutableMapOf(), var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, val softLimits: MutableMap<CANSparkMax.SoftLimitDirection, Float> = mutableMapOf()) : MotorConfiguration","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration"]},{"name":"data class TalonFXConfiguration(var neutralMode: NeutralMode? = null, var inverted: Boolean? = null, var invertSensorPhase: Boolean? = null, var expiration: Time? = null, var safetyEnabled: Boolean? = null, var supplyCurrentLimit: SupplyCurrentLimitConfiguration? = null, var statorCurrentLimit: StatorCurrentLimitConfiguration? = null, var motorCommutation: MotorCommutation? = null, var absoluteSensorRange: AbsoluteSensorRange? = null, var integratedSensorOffset: Angle? = null, var sensorInitializationStrategy: SensorInitializationStrategy? = null, var openLoopRampSecondsFromNeutralToFull: Double? = null, var closedLoopRampSecondsFromNeutralToFull: Double? = null, var peakOutputForwardPercent: Double? = null, var peakOutputReversePercent: Double? = null, var nominalOutputForwardPercent: Double? = null, var nominalOutputReversePercent: Double? = null, var neutralDeadbandPercent: Double? = null, var voltageCompensationSaturationVoltage: Double? = null, var voltageMeasurementFilterSamples: Int? = null, var voltageCompensationEnabled: Boolean? = null, val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), val controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), val statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf()) : CTREMotorControllerConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/index.html","searchKeys":["TalonFXConfiguration","data class TalonFXConfiguration(var neutralMode: NeutralMode? = null, var inverted: Boolean? = null, var invertSensorPhase: Boolean? = null, var expiration: Time? = null, var safetyEnabled: Boolean? = null, var supplyCurrentLimit: SupplyCurrentLimitConfiguration? = null, var statorCurrentLimit: StatorCurrentLimitConfiguration? = null, var motorCommutation: MotorCommutation? = null, var absoluteSensorRange: AbsoluteSensorRange? = null, var integratedSensorOffset: Angle? = null, var sensorInitializationStrategy: SensorInitializationStrategy? = null, var openLoopRampSecondsFromNeutralToFull: Double? = null, var closedLoopRampSecondsFromNeutralToFull: Double? = null, var peakOutputForwardPercent: Double? = null, var peakOutputReversePercent: Double? = null, var nominalOutputForwardPercent: Double? = null, var nominalOutputReversePercent: Double? = null, var neutralDeadbandPercent: Double? = null, var voltageCompensationSaturationVoltage: Double? = null, var voltageMeasurementFilterSamples: Int? = null, var voltageCompensationEnabled: Boolean? = null, val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), val controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), val statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf()) : CTREMotorControllerConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration"]},{"name":"data class TalonSRXConfiguration(var inverted: Boolean? = null, var invertSensorPhase: Boolean? = null, var expiration: Time? = null, var safetyEnabled: Boolean? = null, var openLoopRampSecondsFromNeutralToFull: Double? = null, var closedLoopRampSecondsFromNeutralToFull: Double? = null, var peakOutputForwardPercent: Double? = null, var peakOutputReversePercent: Double? = null, var nominalOutputForwardPercent: Double? = null, var nominalOutputReversePercent: Double? = null, var neutralDeadbandPercent: Double? = null, var voltageCompensationSaturationVoltage: Double? = null, var voltageMeasurementFilterSamples: Int? = null, var voltageCompensationEnabled: Boolean? = null, val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), val controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), val statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf()) : CTREMotorControllerConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/index.html","searchKeys":["TalonSRXConfiguration","data class TalonSRXConfiguration(var inverted: Boolean? = null, var invertSensorPhase: Boolean? = null, var expiration: Time? = null, var safetyEnabled: Boolean? = null, var openLoopRampSecondsFromNeutralToFull: Double? = null, var closedLoopRampSecondsFromNeutralToFull: Double? = null, var peakOutputForwardPercent: Double? = null, var peakOutputReversePercent: Double? = null, var nominalOutputForwardPercent: Double? = null, var nominalOutputReversePercent: Double? = null, var neutralDeadbandPercent: Double? = null, var voltageCompensationSaturationVoltage: Double? = null, var voltageMeasurementFilterSamples: Int? = null, var voltageCompensationEnabled: Boolean? = null, val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), val controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), val statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf()) : CTREMotorControllerConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration"]},{"name":"fun <C : Command> runUntilFinish(command: C): C","description":"frc.chargers.commands.CommandBuilder.runUntilFinish","location":"-charger-lib/frc.chargers.commands/-command-builder/run-until-finish.html","searchKeys":["runUntilFinish","fun <C : Command> runUntilFinish(command: C): C","frc.chargers.commands.CommandBuilder.runUntilFinish"]},{"name":"fun <C : MotorConfiguration, M : MotorControllerGroup, MotorConfigurable<C>> BasicDifferentialDrivetrain(leftMotors: M, rightMotors: M, invertMotors: Boolean = false, configuration: C): BasicDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain.html","searchKeys":["BasicDifferentialDrivetrain","fun <C : MotorConfiguration, M : MotorControllerGroup, MotorConfigurable<C>> BasicDifferentialDrivetrain(leftMotors: M, rightMotors: M, invertMotors: Boolean = false, configuration: C): BasicDifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain"]},{"name":"fun <C : MotorConfiguration> EncoderDifferentialDrivetrain(leftMotors: EncoderMotorControllerGroup<C>, rightMotors: EncoderMotorControllerGroup<C>, invertMotors: Boolean = false, gearRatio: Double, wheelDiameter: Length, width: Distance, configuration: C): EncoderDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-encoder-differential-drivetrain.html","searchKeys":["EncoderDifferentialDrivetrain","fun <C : MotorConfiguration> EncoderDifferentialDrivetrain(leftMotors: EncoderMotorControllerGroup<C>, rightMotors: EncoderMotorControllerGroup<C>, invertMotors: Boolean = false, gearRatio: Double, wheelDiameter: Length, width: Distance, configuration: C): EncoderDifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain"]},{"name":"fun <D : Dimension> Within(allowableError: ClosedRange<DimensionedQuantity<D>>)","description":"frc.chargers.utils.Precision.Within.Within","location":"-charger-lib/frc.chargers.utils/-precision/-within/-within.html","searchKeys":["Within","fun <D : Dimension> Within(allowableError: ClosedRange<DimensionedQuantity<D>>)","frc.chargers.utils.Precision.Within.Within"]},{"name":"fun <D : Dimension> Within(margin: DimensionedQuantity<D>)","description":"frc.chargers.utils.Precision.Within.Within","location":"-charger-lib/frc.chargers.utils/-precision/-within/-within.html","searchKeys":["Within","fun <D : Dimension> Within(margin: DimensionedQuantity<D>)","frc.chargers.utils.Precision.Within.Within"]},{"name":"fun <I : Dimension, O : Dimension> UnitSuperPIDController(pidConstants: PIDConstants, getInput: () -> DimensionedQuantity<I>, outputRange: ClosedRange<DimensionedQuantity<O>> = DimensionedQuantity<O>(Double.NEGATIVE_INFINITY)..DimensionedQuantity<O>(Double.POSITIVE_INFINITY), target: DimensionedQuantity<I>, feedForward: UnitFeedForward<I, O> = UnitFeedForward { _, _ -> DimensionedQuantity(0.0) })","description":"frc.chargers.utils.pid.UnitSuperPIDController.UnitSuperPIDController","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/-unit-super-p-i-d-controller.html","searchKeys":["UnitSuperPIDController","fun <I : Dimension, O : Dimension> UnitSuperPIDController(pidConstants: PIDConstants, getInput: () -> DimensionedQuantity<I>, outputRange: ClosedRange<DimensionedQuantity<O>> = DimensionedQuantity<O>(Double.NEGATIVE_INFINITY)..DimensionedQuantity<O>(Double.POSITIVE_INFINITY), target: DimensionedQuantity<I>, feedForward: UnitFeedForward<I, O> = UnitFeedForward { _, _ -> DimensionedQuantity(0.0) })","frc.chargers.utils.pid.UnitSuperPIDController.UnitSuperPIDController"]},{"name":"fun <M : MotorController> MotorControllerGroup(motorController: M, vararg motorControllers: M, configure: (M) -> Unit): MotorControllerGroup","description":"frc.chargers.hardware.motorcontrol.MotorControllerGroup","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-motor-controller-group.html","searchKeys":["MotorControllerGroup","fun <M : MotorController> MotorControllerGroup(motorController: M, vararg motorControllers: M, configure: (M) -> Unit): MotorControllerGroup","frc.chargers.hardware.motorcontrol.MotorControllerGroup"]},{"name":"fun <M : MotorController> MotorControllerGroup(motorControllers: Array<M>, configure: (M) -> Unit): MotorControllerGroup","description":"frc.chargers.hardware.motorcontrol.MotorControllerGroup","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-motor-controller-group.html","searchKeys":["MotorControllerGroup","fun <M : MotorController> MotorControllerGroup(motorControllers: Array<M>, configure: (M) -> Unit): MotorControllerGroup","frc.chargers.hardware.motorcontrol.MotorControllerGroup"]},{"name":"fun <T : Any> getOnceDuringRun(get: CodeBlockContext.() -> T): ReadOnlyProperty<Any?, T>","description":"frc.chargers.commands.CommandBuilder.getOnceDuringRun","location":"-charger-lib/frc.chargers.commands/-command-builder/get-once-during-run.html","searchKeys":["getOnceDuringRun","fun <T : Any> getOnceDuringRun(get: CodeBlockContext.() -> T): ReadOnlyProperty<Any?, T>","frc.chargers.commands.CommandBuilder.getOnceDuringRun"]},{"name":"fun AverageEncoder(vararg encoders: Encoder)","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/-average-encoder.html","searchKeys":["AverageEncoder","fun AverageEncoder(vararg encoders: Encoder)","frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder"]},{"name":"fun AverageEncoder(vararg motorControllers: EncoderMotorController)","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/-average-encoder.html","searchKeys":["AverageEncoder","fun AverageEncoder(vararg motorControllers: EncoderMotorController)","frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder"]},{"name":"fun BaseTalonRemoteFeedbackFilterDevice(talon: BaseTalon, remoteOrdinal: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice.BaseTalonRemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-base-talon-remote-feedback-filter-device/-base-talon-remote-feedback-filter-device.html","searchKeys":["BaseTalonRemoteFeedbackFilterDevice","fun BaseTalonRemoteFeedbackFilterDevice(talon: BaseTalon, remoteOrdinal: Int)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice.BaseTalonRemoteFeedbackFilterDevice"]},{"name":"fun BasicDifferentialDrivetrain(leftMotors: MotorControllerGroup, rightMotors: MotorControllerGroup, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0)","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.BasicDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain/-basic-differential-drivetrain.html","searchKeys":["BasicDifferentialDrivetrain","fun BasicDifferentialDrivetrain(leftMotors: MotorControllerGroup, rightMotors: MotorControllerGroup, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0)","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.BasicDifferentialDrivetrain"]},{"name":"fun CANCoderRemoteFeedbackFilterDevice(canCoder: CANCoder, remoteOrdinal: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice.CANCoderRemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-c-a-n-coder-remote-feedback-filter-device/-c-a-n-coder-remote-feedback-filter-device.html","searchKeys":["CANCoderRemoteFeedbackFilterDevice","fun CANCoderRemoteFeedbackFilterDevice(canCoder: CANCoder, remoteOrdinal: Int)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice.CANCoderRemoteFeedbackFilterDevice"]},{"name":"fun CTREMotorControllerEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle)","description":"frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.CTREMotorControllerEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-c-t-r-e-motor-controller-encoder-adapter/-c-t-r-e-motor-controller-encoder-adapter.html","searchKeys":["CTREMotorControllerEncoderAdapter","fun CTREMotorControllerEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle)","frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.CTREMotorControllerEncoderAdapter"]},{"name":"fun CTREMotorControllerEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, pulsesPerRotation: Int)","description":"frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.CTREMotorControllerEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-c-t-r-e-motor-controller-encoder-adapter/-c-t-r-e-motor-controller-encoder-adapter.html","searchKeys":["CTREMotorControllerEncoderAdapter","fun CTREMotorControllerEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, pulsesPerRotation: Int)","frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.CTREMotorControllerEncoderAdapter"]},{"name":"fun ChargerCANSparkMax(deviceId: Int, type: CANSparkMaxLowLevel.MotorType)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax.ChargerCANSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-c-a-n-spark-max/-charger-c-a-n-spark-max.html","searchKeys":["ChargerCANSparkMax","fun ChargerCANSparkMax(deviceId: Int, type: CANSparkMaxLowLevel.MotorType)","frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax.ChargerCANSparkMax"]},{"name":"fun ChargerSpark(channel: Int)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSpark.ChargerSpark","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark/-charger-spark.html","searchKeys":["ChargerSpark","fun ChargerSpark(channel: Int)","frc.chargers.hardware.motorcontrol.rev.ChargerSpark.ChargerSpark"]},{"name":"fun ChargerTalonFX(deviceNumber: Int, canBus: String = \"rio\")","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.ChargerTalonFX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/-charger-talon-f-x.html","searchKeys":["ChargerTalonFX","fun ChargerTalonFX(deviceNumber: Int, canBus: String = \"rio\")","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.ChargerTalonFX"]},{"name":"fun ChargerTalonSRX(deviceNumber: Int, encoderTicksPerRotation: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.ChargerTalonSRX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/-charger-talon-s-r-x.html","searchKeys":["ChargerTalonSRX","fun ChargerTalonSRX(deviceNumber: Int, encoderTicksPerRotation: Int)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.ChargerTalonSRX"]},{"name":"fun CommandBuilder()","description":"frc.chargers.commands.CommandBuilder.CommandBuilder","location":"-charger-lib/frc.chargers.commands/-command-builder/-command-builder.html","searchKeys":["CommandBuilder","fun CommandBuilder()","frc.chargers.commands.CommandBuilder.CommandBuilder"]},{"name":"fun CommandBuilderMarker()","description":"frc.chargers.commands.CommandBuilderMarker.CommandBuilderMarker","location":"-charger-lib/frc.chargers.commands/-command-builder-marker/-command-builder-marker.html","searchKeys":["CommandBuilderMarker","fun CommandBuilderMarker()","frc.chargers.commands.CommandBuilderMarker.CommandBuilderMarker"]},{"name":"fun DifferentialDrivetrain.turn(angle: Angle, precision: Precision<AngleDimension> = Precision.AllowOvershoot): Command","description":"frc.chargers.commands.drivetrainCommands.turn","location":"-charger-lib/frc.chargers.commands.drivetrainCommands/turn.html","searchKeys":["turn","fun DifferentialDrivetrain.turn(angle: Angle, precision: Precision<AngleDimension> = Precision.AllowOvershoot): Command","frc.chargers.commands.drivetrainCommands.turn"]},{"name":"fun DifferentialDrivetrain.turn(angle: Angle, precision: Precision<AngleDimension> = Precision.AllowOvershoot, pidConstants: PIDConstants): Command","description":"frc.chargers.commands.drivetrainCommands.turn","location":"-charger-lib/frc.chargers.commands.drivetrainCommands/turn.html","searchKeys":["turn","fun DifferentialDrivetrain.turn(angle: Angle, precision: Precision<AngleDimension> = Precision.AllowOvershoot, pidConstants: PIDConstants): Command","frc.chargers.commands.drivetrainCommands.turn"]},{"name":"fun DifferentialDrivetrain.turn(angle: Angle, rotationPower: Double): Command","description":"frc.chargers.commands.drivetrainCommands.turn","location":"-charger-lib/frc.chargers.commands.drivetrainCommands/turn.html","searchKeys":["turn","fun DifferentialDrivetrain.turn(angle: Angle, rotationPower: Double): Command","frc.chargers.commands.drivetrainCommands.turn"]},{"name":"fun EncoderDifferentialDrivetrain(leftMotors: NonConfigurableEncoderMotorControllerGroup, rightMotors: NonConfigurableEncoderMotorControllerGroup, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance)","description":"frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.EncoderDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-encoder-differential-drivetrain/-encoder-differential-drivetrain.html","searchKeys":["EncoderDifferentialDrivetrain","fun EncoderDifferentialDrivetrain(leftMotors: NonConfigurableEncoderMotorControllerGroup, rightMotors: NonConfigurableEncoderMotorControllerGroup, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance)","frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.EncoderDifferentialDrivetrain"]},{"name":"fun EncoderDifferentialDrivetrain.driveStraight(distance: Distance, power: Double, maxSteeringPower: Double = DEFAULT_MAX_STEERING_POWER): Command","description":"frc.chargers.commands.drivetrainCommands.driveStraight","location":"-charger-lib/frc.chargers.commands.drivetrainCommands/drive-straight.html","searchKeys":["driveStraight","fun EncoderDifferentialDrivetrain.driveStraight(distance: Distance, power: Double, maxSteeringPower: Double = DEFAULT_MAX_STEERING_POWER): Command","frc.chargers.commands.drivetrainCommands.driveStraight"]},{"name":"fun EncoderDifferentialDrivetrain.driveStraight(distance: Distance, power: Double, steeringPIDConstants: PIDConstants, maxSteeringPower: Double = DEFAULT_MAX_STEERING_POWER): Command","description":"frc.chargers.commands.drivetrainCommands.driveStraight","location":"-charger-lib/frc.chargers.commands.drivetrainCommands/drive-straight.html","searchKeys":["driveStraight","fun EncoderDifferentialDrivetrain.driveStraight(distance: Distance, power: Double, steeringPIDConstants: PIDConstants, maxSteeringPower: Double = DEFAULT_MAX_STEERING_POWER): Command","frc.chargers.commands.drivetrainCommands.driveStraight"]},{"name":"fun EncoderDifferentialDrivetrain.driveStraight(time: Time, power: Double, steeringPIDConstants: PIDConstants, maxSteeringPower: Double = DEFAULT_MAX_STEERING_POWER): Command","description":"frc.chargers.commands.drivetrainCommands.driveStraight","location":"-charger-lib/frc.chargers.commands.drivetrainCommands/drive-straight.html","searchKeys":["driveStraight","fun EncoderDifferentialDrivetrain.driveStraight(time: Time, power: Double, steeringPIDConstants: PIDConstants, maxSteeringPower: Double = DEFAULT_MAX_STEERING_POWER): Command","frc.chargers.commands.drivetrainCommands.driveStraight"]},{"name":"fun InstantCommand(vararg subsystems: Subsystem, toRun: () -> Unit): InstantCommand","description":"frc.chargers.commands.InstantCommand","location":"-charger-lib/frc.chargers.commands/-instant-command.html","searchKeys":["InstantCommand","fun InstantCommand(vararg subsystems: Subsystem, toRun: () -> Unit): InstantCommand","frc.chargers.commands.InstantCommand"]},{"name":"fun LimitSwitchConfig(type: RemoteLimitSwitchSource, normalOpenOrClose: LimitSwitchNormal, deviceId: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.LimitSwitchConfig","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-limit-switch-config/-limit-switch-config.html","searchKeys":["LimitSwitchConfig","fun LimitSwitchConfig(type: RemoteLimitSwitchSource, normalOpenOrClose: LimitSwitchNormal, deviceId: Int)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.LimitSwitchConfig"]},{"name":"fun MotionMagicConfiguration(cruiseVelocity: AngularVelocity? = null, acceleration: AngularAcceleration? = null, sCurveStrength: Int? = null, baseTrajectoryPeriod: Time? = null)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.MotionMagicConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-motion-magic-configuration/-motion-magic-configuration.html","searchKeys":["MotionMagicConfiguration","fun MotionMagicConfiguration(cruiseVelocity: AngularVelocity? = null, acceleration: AngularAcceleration? = null, sCurveStrength: Int? = null, baseTrajectoryPeriod: Time? = null)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.MotionMagicConfiguration"]},{"name":"fun NavX()","description":"frc.chargers.hardware.sensors.NavX.NavX","location":"-charger-lib/frc.chargers.hardware.sensors/-nav-x/-nav-x.html","searchKeys":["NavX","fun NavX()","frc.chargers.hardware.sensors.NavX.NavX"]},{"name":"fun NonConfigurableEncoderMotorControllerGroup(vararg encoderMotorControllers: EncoderMotorController)","description":"frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.NonConfigurableEncoderMotorControllerGroup","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-non-configurable-encoder-motor-controller-group/-non-configurable-encoder-motor-controller-group.html","searchKeys":["NonConfigurableEncoderMotorControllerGroup","fun NonConfigurableEncoderMotorControllerGroup(vararg encoderMotorControllers: EncoderMotorController)","frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.NonConfigurableEncoderMotorControllerGroup"]},{"name":"fun NonConfigurableEncoderMotorControllerGroup(vararg motorControllers: MotorController, encoder: Encoder)","description":"frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.NonConfigurableEncoderMotorControllerGroup","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-non-configurable-encoder-motor-controller-group/-non-configurable-encoder-motor-controller-group.html","searchKeys":["NonConfigurableEncoderMotorControllerGroup","fun NonConfigurableEncoderMotorControllerGroup(vararg motorControllers: MotorController, encoder: Encoder)","frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.NonConfigurableEncoderMotorControllerGroup"]},{"name":"fun OtherRemoteFeedbackFilterDevice(deviceId: Int, remoteSensorSource: RemoteSensorSource, remoteOrdinal: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.OtherRemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-other-remote-feedback-filter-device/-other-remote-feedback-filter-device.html","searchKeys":["OtherRemoteFeedbackFilterDevice","fun OtherRemoteFeedbackFilterDevice(deviceId: Int, remoteSensorSource: RemoteSensorSource, remoteOrdinal: Int)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.OtherRemoteFeedbackFilterDevice"]},{"name":"fun PIDConfiguration(pidConstants: MutableMap<PIDIndex, PIDConstants> = mutableMapOf(), feedForwards: MutableMap<PIDIndex, Double> = mutableMapOf(), integralZones: MutableMap<PIDIndex, Double> = mutableMapOf(), allowableClosedLoopErrors: MutableMap<PIDIndex, Double> = mutableMapOf(), maxIntegralAccumulators: MutableMap<PIDIndex, Double> = mutableMapOf(), closedLoopPeakOutputPercents: MutableMap<PIDIndex, Double> = mutableMapOf(), closedLoopPeriods: MutableMap<PIDIndex, Time> = mutableMapOf(), invertAuxPID: Boolean? = null, profileSlots: MutableMap<SlotIndex, PIDIndex>? = null)","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.PIDConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/-p-i-d-configuration.html","searchKeys":["PIDConfiguration","fun PIDConfiguration(pidConstants: MutableMap<PIDIndex, PIDConstants> = mutableMapOf(), feedForwards: MutableMap<PIDIndex, Double> = mutableMapOf(), integralZones: MutableMap<PIDIndex, Double> = mutableMapOf(), allowableClosedLoopErrors: MutableMap<PIDIndex, Double> = mutableMapOf(), maxIntegralAccumulators: MutableMap<PIDIndex, Double> = mutableMapOf(), closedLoopPeakOutputPercents: MutableMap<PIDIndex, Double> = mutableMapOf(), closedLoopPeriods: MutableMap<PIDIndex, Time> = mutableMapOf(), invertAuxPID: Boolean? = null, profileSlots: MutableMap<SlotIndex, PIDIndex>? = null)","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.PIDConfiguration"]},{"name":"fun PIDConstants(kP: Double, kI: Double, kD: Double)","description":"frc.chargers.utils.pid.PIDConstants.PIDConstants","location":"-charger-lib/frc.chargers.utils.pid/-p-i-d-constants/-p-i-d-constants.html","searchKeys":["PIDConstants","fun PIDConstants(kP: Double, kI: Double, kD: Double)","frc.chargers.utils.pid.PIDConstants.PIDConstants"]},{"name":"fun RevEncoderAdapter(revEncoder: RelativeEncoder)","description":"frc.chargers.hardware.sensors.encoders.RevEncoderAdapter.RevEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-rev-encoder-adapter/-rev-encoder-adapter.html","searchKeys":["RevEncoderAdapter","fun RevEncoderAdapter(revEncoder: RelativeEncoder)","frc.chargers.hardware.sensors.encoders.RevEncoderAdapter.RevEncoderAdapter"]},{"name":"fun RunCommand(vararg subsystems: Subsystem, toRun: () -> Unit): RunCommand","description":"frc.chargers.commands.RunCommand","location":"-charger-lib/frc.chargers.commands/-run-command.html","searchKeys":["RunCommand","fun RunCommand(vararg subsystems: Subsystem, toRun: () -> Unit): RunCommand","frc.chargers.commands.RunCommand"]},{"name":"fun SecondaryCurrentLimit(limit: Double, chopCycles: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit.SecondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-secondary-current-limit/-secondary-current-limit.html","searchKeys":["SecondaryCurrentLimit","fun SecondaryCurrentLimit(limit: Double, chopCycles: Int? = null)","frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit.SecondaryCurrentLimit"]},{"name":"fun SmartCurrentLimit(stallLimit: Int, freeLimit: Int? = null, limitRPM: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.SmartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-smart-current-limit/-smart-current-limit.html","searchKeys":["SmartCurrentLimit","fun SmartCurrentLimit(stallLimit: Int, freeLimit: Int? = null, limitRPM: Int? = null)","frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.SmartCurrentLimit"]},{"name":"fun SparkConfiguration(inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkConfiguration.SparkConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-configuration/-spark-configuration.html","searchKeys":["SparkConfiguration","fun SparkConfiguration(inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkConfiguration.SparkConfiguration"]},{"name":"fun SparkMaxConfiguration(idleMode: CANSparkMax.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Double? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFramePeriods: MutableMap<CANSparkMaxLowLevel.PeriodicFrame, Time> = mutableMapOf(), smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkMax.SoftLimitDirection, Float> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.SparkMaxConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/-spark-max-configuration.html","searchKeys":["SparkMaxConfiguration","fun SparkMaxConfiguration(idleMode: CANSparkMax.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Double? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFramePeriods: MutableMap<CANSparkMaxLowLevel.PeriodicFrame, Time> = mutableMapOf(), smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkMax.SoftLimitDirection, Float> = mutableMapOf())","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.SparkMaxConfiguration"]},{"name":"fun SuperPIDController(pidConstants: PIDConstants, getInput: () -> Double, outputRange: ClosedRange<Double> = Double.NEGATIVE_INFINITY..Double.POSITIVE_INFINITY, target: Double, feedForward: FeedForward = FeedForward { _, _ -> 0.0 })","description":"frc.chargers.utils.pid.SuperPIDController.SuperPIDController","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/-super-p-i-d-controller.html","searchKeys":["SuperPIDController","fun SuperPIDController(pidConstants: PIDConstants, getInput: () -> Double, outputRange: ClosedRange<Double> = Double.NEGATIVE_INFINITY..Double.POSITIVE_INFINITY, target: Double, feedForward: FeedForward = FeedForward { _, _ -> 0.0 })","frc.chargers.utils.pid.SuperPIDController.SuperPIDController"]},{"name":"fun TalonFXConfiguration(neutralMode: NeutralMode? = null, inverted: Boolean? = null, invertSensorPhase: Boolean? = null, expiration: Time? = null, safetyEnabled: Boolean? = null, supplyCurrentLimit: SupplyCurrentLimitConfiguration? = null, statorCurrentLimit: StatorCurrentLimitConfiguration? = null, motorCommutation: MotorCommutation? = null, absoluteSensorRange: AbsoluteSensorRange? = null, integratedSensorOffset: Angle? = null, sensorInitializationStrategy: SensorInitializationStrategy? = null, openLoopRampSecondsFromNeutralToFull: Double? = null, closedLoopRampSecondsFromNeutralToFull: Double? = null, peakOutputForwardPercent: Double? = null, peakOutputReversePercent: Double? = null, nominalOutputForwardPercent: Double? = null, nominalOutputReversePercent: Double? = null, neutralDeadbandPercent: Double? = null, voltageCompensationSaturationVoltage: Double? = null, voltageMeasurementFilterSamples: Int? = null, voltageCompensationEnabled: Boolean? = null, selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.TalonFXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/-talon-f-x-configuration.html","searchKeys":["TalonFXConfiguration","fun TalonFXConfiguration(neutralMode: NeutralMode? = null, inverted: Boolean? = null, invertSensorPhase: Boolean? = null, expiration: Time? = null, safetyEnabled: Boolean? = null, supplyCurrentLimit: SupplyCurrentLimitConfiguration? = null, statorCurrentLimit: StatorCurrentLimitConfiguration? = null, motorCommutation: MotorCommutation? = null, absoluteSensorRange: AbsoluteSensorRange? = null, integratedSensorOffset: Angle? = null, sensorInitializationStrategy: SensorInitializationStrategy? = null, openLoopRampSecondsFromNeutralToFull: Double? = null, closedLoopRampSecondsFromNeutralToFull: Double? = null, peakOutputForwardPercent: Double? = null, peakOutputReversePercent: Double? = null, nominalOutputForwardPercent: Double? = null, nominalOutputReversePercent: Double? = null, neutralDeadbandPercent: Double? = null, voltageCompensationSaturationVoltage: Double? = null, voltageMeasurementFilterSamples: Int? = null, voltageCompensationEnabled: Boolean? = null, selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf())","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.TalonFXConfiguration"]},{"name":"fun TalonSRXConfiguration(inverted: Boolean? = null, invertSensorPhase: Boolean? = null, expiration: Time? = null, safetyEnabled: Boolean? = null, openLoopRampSecondsFromNeutralToFull: Double? = null, closedLoopRampSecondsFromNeutralToFull: Double? = null, peakOutputForwardPercent: Double? = null, peakOutputReversePercent: Double? = null, nominalOutputForwardPercent: Double? = null, nominalOutputReversePercent: Double? = null, neutralDeadbandPercent: Double? = null, voltageCompensationSaturationVoltage: Double? = null, voltageMeasurementFilterSamples: Int? = null, voltageCompensationEnabled: Boolean? = null, selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.TalonSRXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/-talon-s-r-x-configuration.html","searchKeys":["TalonSRXConfiguration","fun TalonSRXConfiguration(inverted: Boolean? = null, invertSensorPhase: Boolean? = null, expiration: Time? = null, safetyEnabled: Boolean? = null, openLoopRampSecondsFromNeutralToFull: Double? = null, closedLoopRampSecondsFromNeutralToFull: Double? = null, peakOutputForwardPercent: Double? = null, peakOutputReversePercent: Double? = null, nominalOutputForwardPercent: Double? = null, nominalOutputReversePercent: Double? = null, neutralDeadbandPercent: Double? = null, voltageCompensationSaturationVoltage: Double? = null, voltageMeasurementFilterSamples: Int? = null, voltageCompensationEnabled: Boolean? = null, selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null, sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration = PIDConfiguration(), motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration = MotionMagicConfiguration(), customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf())","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.TalonSRXConfiguration"]},{"name":"fun WPILibEncoderAdapter(wpiLibEncoder: Encoder, anglePerPulse: Angle)","description":"frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.WPILibEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-w-p-i-lib-encoder-adapter/-w-p-i-lib-encoder-adapter.html","searchKeys":["WPILibEncoderAdapter","fun WPILibEncoderAdapter(wpiLibEncoder: Encoder, anglePerPulse: Angle)","frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.WPILibEncoderAdapter"]},{"name":"fun WPILibEncoderAdapter(wpiLibEncoder: Encoder, pulsesPerRotation: Int)","description":"frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.WPILibEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-w-p-i-lib-encoder-adapter/-w-p-i-lib-encoder-adapter.html","searchKeys":["WPILibEncoderAdapter","fun WPILibEncoderAdapter(wpiLibEncoder: Encoder, pulsesPerRotation: Int)","frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.WPILibEncoderAdapter"]},{"name":"fun calculateOutput(): DimensionedQuantity<O>","description":"frc.chargers.utils.pid.UnitSuperPIDController.calculateOutput","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/calculate-output.html","searchKeys":["calculateOutput","fun calculateOutput(): DimensionedQuantity<O>","frc.chargers.utils.pid.UnitSuperPIDController.calculateOutput"]},{"name":"fun calculateOutput(): Double","description":"frc.chargers.utils.pid.SuperPIDController.calculateOutput","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/calculate-output.html","searchKeys":["calculateOutput","fun calculateOutput(): Double","frc.chargers.utils.pid.SuperPIDController.calculateOutput"]},{"name":"fun falcon(canId: Int, canBus: String? = null, configure: TalonFXConfiguration.() -> Unit = {}): ChargerTalonFX","description":"frc.chargers.hardware.motorcontrol.ctre.falcon","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/falcon.html","searchKeys":["falcon","fun falcon(canId: Int, canBus: String? = null, configure: TalonFXConfiguration.() -> Unit = {}): ChargerTalonFX","frc.chargers.hardware.motorcontrol.ctre.falcon"]},{"name":"fun interface FeedForward","description":"frc.chargers.utils.pid.FeedForward","location":"-charger-lib/frc.chargers.utils.pid/-feed-forward/index.html","searchKeys":["FeedForward","fun interface FeedForward","frc.chargers.utils.pid.FeedForward"]},{"name":"fun interface UnitFeedForward<I : Dimension, O : Dimension>","description":"frc.chargers.utils.pid.UnitFeedForward","location":"-charger-lib/frc.chargers.utils.pid/-unit-feed-forward/index.html","searchKeys":["UnitFeedForward","fun interface UnitFeedForward<I : Dimension, O : Dimension>","frc.chargers.utils.pid.UnitFeedForward"]},{"name":"fun printToConsole(message: () -> Any?): Command","description":"frc.chargers.commands.CommandBuilder.printToConsole","location":"-charger-lib/frc.chargers.commands/-command-builder/print-to-console.html","searchKeys":["printToConsole","fun printToConsole(message: () -> Any?): Command","frc.chargers.commands.CommandBuilder.printToConsole"]},{"name":"fun reset()","description":"frc.chargers.hardware.sensors.NavX.reset","location":"-charger-lib/frc.chargers.hardware.sensors/-nav-x/reset.html","searchKeys":["reset","fun reset()","frc.chargers.hardware.sensors.NavX.reset"]},{"name":"fun runFor(timeInterval: Time, command: Command): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.runFor","location":"-charger-lib/frc.chargers.commands/-command-builder/run-for.html","searchKeys":["runFor","fun runFor(timeInterval: Time, command: Command): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.runFor"]},{"name":"fun runForever(vararg requirements: Subsystem, block: CodeBlockContext.() -> Unit): RunCommand","description":"frc.chargers.commands.CommandBuilder.runForever","location":"-charger-lib/frc.chargers.commands/-command-builder/run-forever.html","searchKeys":["runForever","fun runForever(vararg requirements: Subsystem, block: CodeBlockContext.() -> Unit): RunCommand","frc.chargers.commands.CommandBuilder.runForever"]},{"name":"fun runOnce(command: InstantCommand): InstantCommand","description":"frc.chargers.commands.CommandBuilder.runOnce","location":"-charger-lib/frc.chargers.commands/-command-builder/run-once.html","searchKeys":["runOnce","fun runOnce(command: InstantCommand): InstantCommand","frc.chargers.commands.CommandBuilder.runOnce"]},{"name":"fun runOnce(vararg requirements: Subsystem, execute: CodeBlockContext.() -> Unit): InstantCommand","description":"frc.chargers.commands.CommandBuilder.runOnce","location":"-charger-lib/frc.chargers.commands/-command-builder/run-once.html","searchKeys":["runOnce","fun runOnce(vararg requirements: Subsystem, execute: CodeBlockContext.() -> Unit): InstantCommand","frc.chargers.commands.CommandBuilder.runOnce"]},{"name":"fun runParallelUntilAllFinish(vararg commands: Command, block: CommandBuilder.() -> Unit): ParallelCommandGroup","description":"frc.chargers.commands.CommandBuilder.runParallelUntilAllFinish","location":"-charger-lib/frc.chargers.commands/-command-builder/run-parallel-until-all-finish.html","searchKeys":["runParallelUntilAllFinish","fun runParallelUntilAllFinish(vararg commands: Command, block: CommandBuilder.() -> Unit): ParallelCommandGroup","frc.chargers.commands.CommandBuilder.runParallelUntilAllFinish"]},{"name":"fun runParallelUntilOneFinishes(vararg commands: Command, block: CommandBuilder.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.runParallelUntilOneFinishes","location":"-charger-lib/frc.chargers.commands/-command-builder/run-parallel-until-one-finishes.html","searchKeys":["runParallelUntilOneFinishes","fun runParallelUntilOneFinishes(vararg commands: Command, block: CommandBuilder.() -> Unit): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.runParallelUntilOneFinishes"]},{"name":"fun runSequentially(block: CommandBuilder.() -> Unit): SequentialCommandGroup","description":"frc.chargers.commands.CommandBuilder.runSequentially","location":"-charger-lib/frc.chargers.commands/-command-builder/run-sequentially.html","searchKeys":["runSequentially","fun runSequentially(block: CommandBuilder.() -> Unit): SequentialCommandGroup","frc.chargers.commands.CommandBuilder.runSequentially"]},{"name":"fun runUntil(condition: CodeBlockContext.() -> Boolean, command: Command): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.runUntil","location":"-charger-lib/frc.chargers.commands/-command-builder/run-until.html","searchKeys":["runUntil","fun runUntil(condition: CodeBlockContext.() -> Boolean, command: Command): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.runUntil"]},{"name":"fun toCTRETalonFXConfiguration(): TalonFXConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.toCTRETalonFXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/to-c-t-r-e-talon-f-x-configuration.html","searchKeys":["toCTRETalonFXConfiguration","fun toCTRETalonFXConfiguration(): TalonFXConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.toCTRETalonFXConfiguration"]},{"name":"fun waitFor(timeInterval: Time): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.waitFor","location":"-charger-lib/frc.chargers.commands/-command-builder/wait-for.html","searchKeys":["waitFor","fun waitFor(timeInterval: Time): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.waitFor"]},{"name":"fun waitUntil(condition: CodeBlockContext.() -> Boolean): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.waitUntil","location":"-charger-lib/frc.chargers.commands/-command-builder/wait-until.html","searchKeys":["waitUntil","fun waitUntil(condition: CodeBlockContext.() -> Boolean): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.waitUntil"]},{"name":"inline fun brushedSparkMax(canBusId: Int, configure: SparkMaxConfiguration.() -> Unit = {}): ChargerCANSparkMax","description":"frc.chargers.hardware.motorcontrol.rev.brushedSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/brushed-spark-max.html","searchKeys":["brushedSparkMax","inline fun brushedSparkMax(canBusId: Int, configure: SparkMaxConfiguration.() -> Unit = {}): ChargerCANSparkMax","frc.chargers.hardware.motorcontrol.rev.brushedSparkMax"]},{"name":"inline fun buildCommand(block: CommandBuilder.() -> Unit): Command","description":"frc.chargers.commands.buildCommand","location":"-charger-lib/frc.chargers.commands/build-command.html","searchKeys":["buildCommand","inline fun buildCommand(block: CommandBuilder.() -> Unit): Command","frc.chargers.commands.buildCommand"]},{"name":"inline fun neoSparkMax(canBusId: Int, configure: SparkMaxConfiguration.() -> Unit = {}): ChargerCANSparkMax","description":"frc.chargers.hardware.motorcontrol.rev.neoSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/neo-spark-max.html","searchKeys":["neoSparkMax","inline fun neoSparkMax(canBusId: Int, configure: SparkMaxConfiguration.() -> Unit = {}): ChargerCANSparkMax","frc.chargers.hardware.motorcontrol.rev.neoSparkMax"]},{"name":"inline fun runFor(timeInterval: Time, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.runFor","location":"-charger-lib/frc.chargers.commands/-command-builder/run-for.html","searchKeys":["runFor","inline fun runFor(timeInterval: Time, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.runFor"]},{"name":"inline fun runUntil(noinline condition: CodeBlockContext.() -> Boolean, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.runUntil","location":"-charger-lib/frc.chargers.commands/-command-builder/run-until.html","searchKeys":["runUntil","inline fun runUntil(noinline condition: CodeBlockContext.() -> Boolean, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.runUntil"]},{"name":"inline fun runWhile(crossinline condition: CodeBlockContext.() -> Boolean, vararg requirements: Subsystem, noinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.CommandBuilder.runWhile","location":"-charger-lib/frc.chargers.commands/-command-builder/run-while.html","searchKeys":["runWhile","inline fun runWhile(crossinline condition: CodeBlockContext.() -> Boolean, vararg requirements: Subsystem, noinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","frc.chargers.commands.CommandBuilder.runWhile"]},{"name":"inline fun sparkDrivetrain(leftMotors: EncoderMotorControllerGroup<SparkConfiguration>, rightMotors: EncoderMotorControllerGroup<SparkConfiguration>, invertMotors: Boolean = false, configure: SparkConfiguration.() -> Unit = {}): BasicDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.sparkDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/spark-drivetrain.html","searchKeys":["sparkDrivetrain","inline fun sparkDrivetrain(leftMotors: EncoderMotorControllerGroup<SparkConfiguration>, rightMotors: EncoderMotorControllerGroup<SparkConfiguration>, invertMotors: Boolean = false, configure: SparkConfiguration.() -> Unit = {}): BasicDifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.sparkDrivetrain"]},{"name":"inline fun sparkMaxDrivetrain(leftMotors: EncoderMotorControllerGroup<SparkMaxConfiguration>, rightMotors: EncoderMotorControllerGroup<SparkMaxConfiguration>, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance, configure: SparkMaxConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.sparkMaxDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/spark-max-drivetrain.html","searchKeys":["sparkMaxDrivetrain","inline fun sparkMaxDrivetrain(leftMotors: EncoderMotorControllerGroup<SparkMaxConfiguration>, rightMotors: EncoderMotorControllerGroup<SparkMaxConfiguration>, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance, configure: SparkMaxConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.sparkMaxDrivetrain"]},{"name":"inline fun talonFXDrivetrain(leftMotors: EncoderMotorControllerGroup<TalonFXConfiguration>, rightMotors: EncoderMotorControllerGroup<TalonFXConfiguration>, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance, configure: TalonFXConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.talonFXDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/talon-f-x-drivetrain.html","searchKeys":["talonFXDrivetrain","inline fun talonFXDrivetrain(leftMotors: EncoderMotorControllerGroup<TalonFXConfiguration>, rightMotors: EncoderMotorControllerGroup<TalonFXConfiguration>, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance, configure: TalonFXConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.talonFXDrivetrain"]},{"name":"inline fun talonSRXDrivetrain(leftMotors: EncoderMotorControllerGroup<TalonSRXConfiguration>, rightMotors: EncoderMotorControllerGroup<TalonSRXConfiguration>, invertMotors: Boolean = false, configure: TalonSRXConfiguration.() -> Unit = {}): BasicDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.talonSRXDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/talon-s-r-x-drivetrain.html","searchKeys":["talonSRXDrivetrain","inline fun talonSRXDrivetrain(leftMotors: EncoderMotorControllerGroup<TalonSRXConfiguration>, rightMotors: EncoderMotorControllerGroup<TalonSRXConfiguration>, invertMotors: Boolean = false, configure: TalonSRXConfiguration.() -> Unit = {}): BasicDifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.talonSRXDrivetrain"]},{"name":"interface CTREMotorControllerConfiguration : MotorConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/index.html","searchKeys":["CTREMotorControllerConfiguration","interface CTREMotorControllerConfiguration : MotorConfiguration","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration"]},{"name":"interface DifferentialDrivetrain : Subsystem","description":"frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-differential-drivetrain/index.html","searchKeys":["DifferentialDrivetrain","interface DifferentialDrivetrain : Subsystem","frc.chargers.hardware.subsystems.drivetrain.DifferentialDrivetrain"]},{"name":"interface Encoder","description":"frc.chargers.hardware.sensors.encoders.Encoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-encoder/index.html","searchKeys":["Encoder","interface Encoder","frc.chargers.hardware.sensors.encoders.Encoder"]},{"name":"interface EncoderMotorController : MotorController","description":"frc.chargers.hardware.motorcontrol.EncoderMotorController","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller/index.html","searchKeys":["EncoderMotorController","interface EncoderMotorController : MotorController","frc.chargers.hardware.motorcontrol.EncoderMotorController"]},{"name":"interface HeadingProvider","description":"frc.chargers.hardware.sensors.HeadingProvider","location":"-charger-lib/frc.chargers.hardware.sensors/-heading-provider/index.html","searchKeys":["HeadingProvider","interface HeadingProvider","frc.chargers.hardware.sensors.HeadingProvider"]},{"name":"interface MotorConfigurable<C : MotorConfiguration>","description":"frc.chargers.hardware.motorcontrol.MotorConfigurable","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-motor-configurable/index.html","searchKeys":["MotorConfigurable","interface MotorConfigurable<C : MotorConfiguration>","frc.chargers.hardware.motorcontrol.MotorConfigurable"]},{"name":"interface MotorConfiguration","description":"frc.chargers.hardware.motorcontrol.MotorConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-motor-configuration/index.html","searchKeys":["MotorConfiguration","interface MotorConfiguration","frc.chargers.hardware.motorcontrol.MotorConfiguration"]},{"name":"interface RemoteFeedbackFilterDevice","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-remote-feedback-filter-device/index.html","searchKeys":["RemoteFeedbackFilterDevice","interface RemoteFeedbackFilterDevice","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice"]},{"name":"interface TimeContext","description":"frc.chargers.commands.TimeContext","location":"-charger-lib/frc.chargers.commands/-time-context/index.html","searchKeys":["TimeContext","interface TimeContext","frc.chargers.commands.TimeContext"]},{"name":"interface TurnPIDConstants","description":"frc.chargers.constants.TurnPIDConstants","location":"-charger-lib/frc.chargers.constants/-turn-p-i-d-constants/index.html","searchKeys":["TurnPIDConstants","interface TurnPIDConstants","frc.chargers.constants.TurnPIDConstants"]},{"name":"object AllowOvershoot : Precision<Nothing> ","description":"frc.chargers.utils.Precision.AllowOvershoot","location":"-charger-lib/frc.chargers.utils/-precision/-allow-overshoot/index.html","searchKeys":["AllowOvershoot","object AllowOvershoot : Precision<Nothing> ","frc.chargers.utils.Precision.AllowOvershoot"]},{"name":"object CodeBlockContext : TimeContext","description":"frc.chargers.commands.CodeBlockContext","location":"-charger-lib/frc.chargers.commands/-code-block-context/index.html","searchKeys":["CodeBlockContext","object CodeBlockContext : TimeContext","frc.chargers.commands.CodeBlockContext"]},{"name":"object Companion","description":"frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.Companion","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller-group/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.Companion"]},{"name":"object Companion : TimeContext","description":"frc.chargers.commands.TimeContext.Companion","location":"-charger-lib/frc.chargers.commands/-time-context/-companion/index.html","searchKeys":["Companion","object Companion : TimeContext","frc.chargers.commands.TimeContext.Companion"]},{"name":"open class BasicDifferentialDrivetrain(leftMotors: MotorControllerGroup, rightMotors: MotorControllerGroup, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0) : SubsystemBase, DifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain/index.html","searchKeys":["BasicDifferentialDrivetrain","open class BasicDifferentialDrivetrain(leftMotors: MotorControllerGroup, rightMotors: MotorControllerGroup, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0) : SubsystemBase, DifferentialDrivetrain","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain"]},{"name":"open class ChargerCANSparkMax(deviceId: Int, type: CANSparkMaxLowLevel.MotorType) : CANSparkMax, EncoderMotorController, MotorConfigurable<SparkMaxConfiguration> ","description":"frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-c-a-n-spark-max/index.html","searchKeys":["ChargerCANSparkMax","open class ChargerCANSparkMax(deviceId: Int, type: CANSparkMaxLowLevel.MotorType) : CANSparkMax, EncoderMotorController, MotorConfigurable<SparkMaxConfiguration> ","frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax"]},{"name":"open class ChargerTalonFX(deviceNumber: Int, canBus: String = \"rio\") : WPI_TalonFX, EncoderMotorController, MotorConfigurable<TalonFXConfiguration> ","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/index.html","searchKeys":["ChargerTalonFX","open class ChargerTalonFX(deviceNumber: Int, canBus: String = \"rio\") : WPI_TalonFX, EncoderMotorController, MotorConfigurable<TalonFXConfiguration> ","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX"]},{"name":"open class ChargerTalonSRX(deviceNumber: Int, encoderTicksPerRotation: Int) : WPI_TalonSRX, EncoderMotorController, MotorConfigurable<TalonSRXConfiguration> ","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/index.html","searchKeys":["ChargerTalonSRX","open class ChargerTalonSRX(deviceNumber: Int, encoderTicksPerRotation: Int) : WPI_TalonSRX, EncoderMotorController, MotorConfigurable<TalonSRXConfiguration> ","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX"]},{"name":"open class EncoderDifferentialDrivetrain(leftMotors: NonConfigurableEncoderMotorControllerGroup, rightMotors: NonConfigurableEncoderMotorControllerGroup, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance) : BasicDifferentialDrivetrain, HeadingProvider","description":"frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-encoder-differential-drivetrain/index.html","searchKeys":["EncoderDifferentialDrivetrain","open class EncoderDifferentialDrivetrain(leftMotors: NonConfigurableEncoderMotorControllerGroup, rightMotors: NonConfigurableEncoderMotorControllerGroup, invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance) : BasicDifferentialDrivetrain, HeadingProvider","frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain"]},{"name":"open class EncoderMotorControllerGroup<C : MotorConfiguration> : NonConfigurableEncoderMotorControllerGroup, MotorConfigurable<C> ","description":"frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller-group/index.html","searchKeys":["EncoderMotorControllerGroup","open class EncoderMotorControllerGroup<C : MotorConfiguration> : NonConfigurableEncoderMotorControllerGroup, MotorConfigurable<C> ","frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup"]},{"name":"open class NonConfigurableEncoderMotorControllerGroup(motorControllers: MotorController, val encoder: Encoder) : MotorControllerGroup, EncoderMotorController","description":"frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-non-configurable-encoder-motor-controller-group/index.html","searchKeys":["NonConfigurableEncoderMotorControllerGroup","open class NonConfigurableEncoderMotorControllerGroup(motorControllers: MotorController, val encoder: Encoder) : MotorControllerGroup, EncoderMotorController","frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup"]},{"name":"open fun delay(time: Time)","description":"frc.chargers.commands.TimeContext.delay","location":"-charger-lib/frc.chargers.commands/-time-context/delay.html","searchKeys":["delay","open fun delay(time: Time)","frc.chargers.commands.TimeContext.delay"]},{"name":"open override fun arcadeDrive(power: Double, rotation: Double)","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.arcadeDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain/arcade-drive.html","searchKeys":["arcadeDrive","open override fun arcadeDrive(power: Double, rotation: Double)","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.arcadeDrive"]},{"name":"open override fun configure(configuration: C)","description":"frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller-group/configure.html","searchKeys":["configure","open override fun configure(configuration: C)","frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.configure"]},{"name":"open override fun configure(configuration: SparkConfiguration)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSpark.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark/configure.html","searchKeys":["configure","open override fun configure(configuration: SparkConfiguration)","frc.chargers.hardware.motorcontrol.rev.ChargerSpark.configure"]},{"name":"open override fun configure(configuration: SparkMaxConfiguration)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-c-a-n-spark-max/configure.html","searchKeys":["configure","open override fun configure(configuration: SparkMaxConfiguration)","frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax.configure"]},{"name":"open override fun configure(configuration: TalonFXConfiguration)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/configure.html","searchKeys":["configure","open override fun configure(configuration: TalonFXConfiguration)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.configure"]},{"name":"open override fun curvatureDrive(power: Double, steering: Double)","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.curvatureDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain/curvature-drive.html","searchKeys":["curvatureDrive","open override fun curvatureDrive(power: Double, steering: Double)","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.curvatureDrive"]},{"name":"open override fun getInverted(): Boolean","description":"frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.getInverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-non-configurable-encoder-motor-controller-group/get-inverted.html","searchKeys":["getInverted","open override fun getInverted(): Boolean","frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.getInverted"]},{"name":"open override fun setInverted(isInverted: Boolean)","description":"frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.setInverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-non-configurable-encoder-motor-controller-group/set-inverted.html","searchKeys":["setInverted","open override fun setInverted(isInverted: Boolean)","frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.setInverted"]},{"name":"open override fun stop()","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.stop","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain/stop.html","searchKeys":["stop","open override fun stop()","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.stop"]},{"name":"open override fun tankDrive(leftPower: Double, rightPower: Double)","description":"frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.tankDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-basic-differential-drivetrain/tank-drive.html","searchKeys":["tankDrive","open override fun tankDrive(leftPower: Double, rightPower: Double)","frc.chargers.hardware.subsystems.drivetrain.BasicDifferentialDrivetrain.tankDrive"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.AverageEncoder.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-c-t-r-e-motor-controller-encoder-adapter/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.RevEncoderAdapter.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-rev-encoder-adapter/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.RevEncoderAdapter.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-w-p-i-lib-encoder-adapter/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.angularPosition"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.AverageEncoder.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-c-t-r-e-motor-controller-encoder-adapter/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.CTREMotorControllerEncoderAdapter.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.RevEncoderAdapter.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-rev-encoder-adapter/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.RevEncoderAdapter.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-w-p-i-lib-encoder-adapter/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.WPILibEncoderAdapter.angularVelocity"]},{"name":"open override val controlFramePeriods: MutableMap<ControlFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.controlFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/control-frame-periods.html","searchKeys":["controlFramePeriods","open override val controlFramePeriods: MutableMap<ControlFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.controlFramePeriods"]},{"name":"open override val controlFramePeriods: MutableMap<ControlFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.controlFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/control-frame-periods.html","searchKeys":["controlFramePeriods","open override val controlFramePeriods: MutableMap<ControlFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.controlFramePeriods"]},{"name":"open override val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.customParameters","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/custom-parameters.html","searchKeys":["customParameters","open override val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.customParameters"]},{"name":"open override val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.customParameters","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/custom-parameters.html","searchKeys":["customParameters","open override val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.customParameters"]},{"name":"open override val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-non-configurable-encoder-motor-controller-group/encoder.html","searchKeys":["encoder","open override val encoder: Encoder","frc.chargers.hardware.motorcontrol.NonConfigurableEncoderMotorControllerGroup.encoder"]},{"name":"open override val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-c-a-n-spark-max/encoder.html","searchKeys":["encoder","open override val encoder: Encoder","frc.chargers.hardware.motorcontrol.rev.ChargerCANSparkMax.encoder"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.sensors.NavX.heading","location":"-charger-lib/frc.chargers.hardware.sensors/-nav-x/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.sensors.NavX.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.heading","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-encoder-differential-drivetrain/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.heading"]},{"name":"open override val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.motionMagicConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/motion-magic-configuration.html","searchKeys":["motionMagicConfiguration","open override val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.motionMagicConfiguration"]},{"name":"open override val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.motionMagicConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/motion-magic-configuration.html","searchKeys":["motionMagicConfiguration","open override val motionMagicConfiguration: CTREMotorControllerConfiguration.MotionMagicConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.motionMagicConfiguration"]},{"name":"open override val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.pidConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/pid-configuration.html","searchKeys":["pidConfiguration","open override val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.pidConfiguration"]},{"name":"open override val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.pidConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/pid-configuration.html","searchKeys":["pidConfiguration","open override val pidConfiguration: CTREMotorControllerConfiguration.PIDConfiguration","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.pidConfiguration"]},{"name":"open override val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.selectedFeedbackCoefficients","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/selected-feedback-coefficients.html","searchKeys":["selectedFeedbackCoefficients","open override val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.selectedFeedbackCoefficients"]},{"name":"open override val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.selectedFeedbackCoefficients","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/selected-feedback-coefficients.html","searchKeys":["selectedFeedbackCoefficients","open override val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.selectedFeedbackCoefficients"]},{"name":"open override val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.selectedFeedbackSensors","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/selected-feedback-sensors.html","searchKeys":["selectedFeedbackSensors","open override val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.selectedFeedbackSensors"]},{"name":"open override val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.selectedFeedbackSensors","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/selected-feedback-sensors.html","searchKeys":["selectedFeedbackSensors","open override val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.selectedFeedbackSensors"]},{"name":"open override val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.sensorTermFeedbackDevices","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/sensor-term-feedback-devices.html","searchKeys":["sensorTermFeedbackDevices","open override val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.sensorTermFeedbackDevices"]},{"name":"open override val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.sensorTermFeedbackDevices","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/sensor-term-feedback-devices.html","searchKeys":["sensorTermFeedbackDevices","open override val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.sensorTermFeedbackDevices"]},{"name":"open override val statusFramePeriods: MutableMap<StatusFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.statusFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/status-frame-periods.html","searchKeys":["statusFramePeriods","open override val statusFramePeriods: MutableMap<StatusFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.statusFramePeriods"]},{"name":"open override val statusFramePeriods: MutableMap<StatusFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.statusFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/status-frame-periods.html","searchKeys":["statusFramePeriods","open override val statusFramePeriods: MutableMap<StatusFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.statusFramePeriods"]},{"name":"open override var closedLoopRampSecondsFromNeutralToFull: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.closedLoopRampSecondsFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/closed-loop-ramp-seconds-from-neutral-to-full.html","searchKeys":["closedLoopRampSecondsFromNeutralToFull","open override var closedLoopRampSecondsFromNeutralToFull: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.closedLoopRampSecondsFromNeutralToFull"]},{"name":"open override var closedLoopRampSecondsFromNeutralToFull: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.closedLoopRampSecondsFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/closed-loop-ramp-seconds-from-neutral-to-full.html","searchKeys":["closedLoopRampSecondsFromNeutralToFull","open override var closedLoopRampSecondsFromNeutralToFull: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.closedLoopRampSecondsFromNeutralToFull"]},{"name":"open override var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.forwardLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/forward-limit-switch-source.html","searchKeys":["forwardLimitSwitchSource","open override var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.forwardLimitSwitchSource"]},{"name":"open override var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.forwardLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/forward-limit-switch-source.html","searchKeys":["forwardLimitSwitchSource","open override var forwardLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.forwardLimitSwitchSource"]},{"name":"open override var forwardSoftLimitEnable: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.forwardSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/forward-soft-limit-enable.html","searchKeys":["forwardSoftLimitEnable","open override var forwardSoftLimitEnable: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.forwardSoftLimitEnable"]},{"name":"open override var forwardSoftLimitEnable: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.forwardSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/forward-soft-limit-enable.html","searchKeys":["forwardSoftLimitEnable","open override var forwardSoftLimitEnable: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.forwardSoftLimitEnable"]},{"name":"open override var forwardSoftLimitThreshold: Angle? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.forwardSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/forward-soft-limit-threshold.html","searchKeys":["forwardSoftLimitThreshold","open override var forwardSoftLimitThreshold: Angle? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.forwardSoftLimitThreshold"]},{"name":"open override var forwardSoftLimitThreshold: Angle? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.forwardSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/forward-soft-limit-threshold.html","searchKeys":["forwardSoftLimitThreshold","open override var forwardSoftLimitThreshold: Angle? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.forwardSoftLimitThreshold"]},{"name":"open override var invertSensorPhase: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.invertSensorPhase","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/invert-sensor-phase.html","searchKeys":["invertSensorPhase","open override var invertSensorPhase: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.invertSensorPhase"]},{"name":"open override var invertSensorPhase: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.invertSensorPhase","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/invert-sensor-phase.html","searchKeys":["invertSensorPhase","open override var invertSensorPhase: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.invertSensorPhase"]},{"name":"open override var neutralDeadbandPercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.neutralDeadbandPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/neutral-deadband-percent.html","searchKeys":["neutralDeadbandPercent","open override var neutralDeadbandPercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.neutralDeadbandPercent"]},{"name":"open override var neutralDeadbandPercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.neutralDeadbandPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/neutral-deadband-percent.html","searchKeys":["neutralDeadbandPercent","open override var neutralDeadbandPercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.neutralDeadbandPercent"]},{"name":"open override var nominalOutputForwardPercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.nominalOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/nominal-output-forward-percent.html","searchKeys":["nominalOutputForwardPercent","open override var nominalOutputForwardPercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.nominalOutputForwardPercent"]},{"name":"open override var nominalOutputForwardPercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.nominalOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/nominal-output-forward-percent.html","searchKeys":["nominalOutputForwardPercent","open override var nominalOutputForwardPercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.nominalOutputForwardPercent"]},{"name":"open override var nominalOutputReversePercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.nominalOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/nominal-output-reverse-percent.html","searchKeys":["nominalOutputReversePercent","open override var nominalOutputReversePercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.nominalOutputReversePercent"]},{"name":"open override var nominalOutputReversePercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.nominalOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/nominal-output-reverse-percent.html","searchKeys":["nominalOutputReversePercent","open override var nominalOutputReversePercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.nominalOutputReversePercent"]},{"name":"open override var openLoopRampSecondsFromNeutralToFull: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.openLoopRampSecondsFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/open-loop-ramp-seconds-from-neutral-to-full.html","searchKeys":["openLoopRampSecondsFromNeutralToFull","open override var openLoopRampSecondsFromNeutralToFull: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.openLoopRampSecondsFromNeutralToFull"]},{"name":"open override var openLoopRampSecondsFromNeutralToFull: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.openLoopRampSecondsFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/open-loop-ramp-seconds-from-neutral-to-full.html","searchKeys":["openLoopRampSecondsFromNeutralToFull","open override var openLoopRampSecondsFromNeutralToFull: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.openLoopRampSecondsFromNeutralToFull"]},{"name":"open override var peakOutputForwardPercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.peakOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/peak-output-forward-percent.html","searchKeys":["peakOutputForwardPercent","open override var peakOutputForwardPercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.peakOutputForwardPercent"]},{"name":"open override var peakOutputForwardPercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.peakOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/peak-output-forward-percent.html","searchKeys":["peakOutputForwardPercent","open override var peakOutputForwardPercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.peakOutputForwardPercent"]},{"name":"open override var peakOutputReversePercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.peakOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/peak-output-reverse-percent.html","searchKeys":["peakOutputReversePercent","open override var peakOutputReversePercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.peakOutputReversePercent"]},{"name":"open override var peakOutputReversePercent: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.peakOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/peak-output-reverse-percent.html","searchKeys":["peakOutputReversePercent","open override var peakOutputReversePercent: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.peakOutputReversePercent"]},{"name":"open override var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.remoteFeedbackFilter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/remote-feedback-filter.html","searchKeys":["remoteFeedbackFilter","open override var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.remoteFeedbackFilter"]},{"name":"open override var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.remoteFeedbackFilter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/remote-feedback-filter.html","searchKeys":["remoteFeedbackFilter","open override var remoteFeedbackFilter: CTREMotorControllerConfiguration.RemoteFeedbackFilterDevice? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.remoteFeedbackFilter"]},{"name":"open override var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.reverseLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/reverse-limit-switch-source.html","searchKeys":["reverseLimitSwitchSource","open override var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.reverseLimitSwitchSource"]},{"name":"open override var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.reverseLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/reverse-limit-switch-source.html","searchKeys":["reverseLimitSwitchSource","open override var reverseLimitSwitchSource: CTREMotorControllerConfiguration.LimitSwitchConfig? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.reverseLimitSwitchSource"]},{"name":"open override var reverseSoftLimitEnable: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.reverseSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/reverse-soft-limit-enable.html","searchKeys":["reverseSoftLimitEnable","open override var reverseSoftLimitEnable: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.reverseSoftLimitEnable"]},{"name":"open override var reverseSoftLimitEnable: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.reverseSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/reverse-soft-limit-enable.html","searchKeys":["reverseSoftLimitEnable","open override var reverseSoftLimitEnable: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.reverseSoftLimitEnable"]},{"name":"open override var reverseSoftLimitThreshold: Angle? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.reverseSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/reverse-soft-limit-threshold.html","searchKeys":["reverseSoftLimitThreshold","open override var reverseSoftLimitThreshold: Angle? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.reverseSoftLimitThreshold"]},{"name":"open override var reverseSoftLimitThreshold: Angle? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.reverseSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/reverse-soft-limit-threshold.html","searchKeys":["reverseSoftLimitThreshold","open override var reverseSoftLimitThreshold: Angle? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.reverseSoftLimitThreshold"]},{"name":"open override var voltageCompensationEnabled: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.voltageCompensationEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/voltage-compensation-enabled.html","searchKeys":["voltageCompensationEnabled","open override var voltageCompensationEnabled: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.voltageCompensationEnabled"]},{"name":"open override var voltageCompensationEnabled: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.voltageCompensationEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/voltage-compensation-enabled.html","searchKeys":["voltageCompensationEnabled","open override var voltageCompensationEnabled: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.voltageCompensationEnabled"]},{"name":"open override var voltageCompensationSaturationVoltage: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.voltageCompensationSaturationVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/voltage-compensation-saturation-voltage.html","searchKeys":["voltageCompensationSaturationVoltage","open override var voltageCompensationSaturationVoltage: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.voltageCompensationSaturationVoltage"]},{"name":"open override var voltageCompensationSaturationVoltage: Double? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.voltageCompensationSaturationVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/voltage-compensation-saturation-voltage.html","searchKeys":["voltageCompensationSaturationVoltage","open override var voltageCompensationSaturationVoltage: Double? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.voltageCompensationSaturationVoltage"]},{"name":"open override var voltageMeasurementFilterSamples: Int? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.voltageMeasurementFilterSamples","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/voltage-measurement-filter-samples.html","searchKeys":["voltageMeasurementFilterSamples","open override var voltageMeasurementFilterSamples: Int? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.voltageMeasurementFilterSamples"]},{"name":"open override var voltageMeasurementFilterSamples: Int? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.voltageMeasurementFilterSamples","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/voltage-measurement-filter-samples.html","searchKeys":["voltageMeasurementFilterSamples","open override var voltageMeasurementFilterSamples: Int? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.voltageMeasurementFilterSamples"]},{"name":"open val approximateTimeSinceMatchStart: Time","description":"frc.chargers.commands.TimeContext.approximateTimeSinceMatchStart","location":"-charger-lib/frc.chargers.commands/-time-context/approximate-time-since-match-start.html","searchKeys":["approximateTimeSinceMatchStart","open val approximateTimeSinceMatchStart: Time","frc.chargers.commands.TimeContext.approximateTimeSinceMatchStart"]},{"name":"open val time: Time","description":"frc.chargers.commands.TimeContext.time","location":"-charger-lib/frc.chargers.commands/-time-context/time.html","searchKeys":["time","open val time: Time","frc.chargers.commands.TimeContext.time"]},{"name":"operator fun <M : EncoderMotorController, MotorConfigurable<C>, C : MotorConfiguration> invoke(vararg encoderMotorControllers: M, configuration: C? = null): EncoderMotorControllerGroup<C>","description":"frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.Companion.invoke","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller-group/-companion/invoke.html","searchKeys":["invoke","operator fun <M : EncoderMotorController, MotorConfigurable<C>, C : MotorConfiguration> invoke(vararg encoderMotorControllers: M, configuration: C? = null): EncoderMotorControllerGroup<C>","frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.Companion.invoke"]},{"name":"operator fun <M : MotorController, MotorConfigurable<C>, C : MotorConfiguration> invoke(vararg motorControllers: M, encoder: Encoder, configuration: C? = null): EncoderMotorControllerGroup<C>","description":"frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.Companion.invoke","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller-group/-companion/invoke.html","searchKeys":["invoke","operator fun <M : MotorController, MotorConfigurable<C>, C : MotorConfiguration> invoke(vararg motorControllers: M, encoder: Encoder, configuration: C? = null): EncoderMotorControllerGroup<C>","frc.chargers.hardware.motorcontrol.EncoderMotorControllerGroup.Companion.invoke"]},{"name":"override fun configure(configuration: TalonSRXConfiguration)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/configure.html","searchKeys":["configure","override fun configure(configuration: TalonSRXConfiguration)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.configure"]},{"name":"override fun getSelectedSensorPosition(pidIdx: Int): Double","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.getSelectedSensorPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/get-selected-sensor-position.html","searchKeys":["getSelectedSensorPosition","override fun getSelectedSensorPosition(pidIdx: Int): Double","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.getSelectedSensorPosition"]},{"name":"override fun getSelectedSensorVelocity(pidIdx: Int): Double","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.getSelectedSensorVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/get-selected-sensor-velocity.html","searchKeys":["getSelectedSensorVelocity","override fun getSelectedSensorVelocity(pidIdx: Int): Double","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.getSelectedSensorVelocity"]},{"name":"override val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/encoder.html","searchKeys":["encoder","override val encoder: Encoder","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.encoder"]},{"name":"override val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/encoder.html","searchKeys":["encoder","override val encoder: Encoder","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.encoder"]},{"name":"sealed class Precision<out D : Dimension>","description":"frc.chargers.utils.Precision","location":"-charger-lib/frc.chargers.utils/-precision/index.html","searchKeys":["Precision","sealed class Precision<out D : Dimension>","frc.chargers.utils.Precision"]},{"name":"val allowableClosedLoopErrors: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.allowableClosedLoopErrors","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/allowable-closed-loop-errors.html","searchKeys":["allowableClosedLoopErrors","val allowableClosedLoopErrors: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.allowableClosedLoopErrors"]},{"name":"val allowableError: ClosedRange<DimensionedQuantity<D>>","description":"frc.chargers.utils.Precision.Within.allowableError","location":"-charger-lib/frc.chargers.utils/-precision/-within/allowable-error.html","searchKeys":["allowableError","val allowableError: ClosedRange<DimensionedQuantity<D>>","frc.chargers.utils.Precision.Within.allowableError"]},{"name":"val canCoder: CANCoder","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice.canCoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-c-a-n-coder-remote-feedback-filter-device/can-coder.html","searchKeys":["canCoder","val canCoder: CANCoder","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice.canCoder"]},{"name":"val chopCycles: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit.chopCycles","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-secondary-current-limit/chop-cycles.html","searchKeys":["chopCycles","val chopCycles: Int? = null","frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit.chopCycles"]},{"name":"val closedLoopPeakOutputPercents: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.closedLoopPeakOutputPercents","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/closed-loop-peak-output-percents.html","searchKeys":["closedLoopPeakOutputPercents","val closedLoopPeakOutputPercents: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.closedLoopPeakOutputPercents"]},{"name":"val closedLoopPeriods: MutableMap<PIDIndex, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.closedLoopPeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/closed-loop-periods.html","searchKeys":["closedLoopPeriods","val closedLoopPeriods: MutableMap<PIDIndex, Time>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.closedLoopPeriods"]},{"name":"val deviceId: Int","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.deviceId","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-limit-switch-config/device-id.html","searchKeys":["deviceId","val deviceId: Int","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.deviceId"]},{"name":"val deviceId: Int","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.deviceId","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-other-remote-feedback-filter-device/device-id.html","searchKeys":["deviceId","val deviceId: Int","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.deviceId"]},{"name":"val distanceTraveled: Distance","description":"frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.distanceTraveled","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-encoder-differential-drivetrain/distance-traveled.html","searchKeys":["distanceTraveled","val distanceTraveled: Distance","frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.distanceTraveled"]},{"name":"val error: DimensionedQuantity<I>","description":"frc.chargers.utils.pid.UnitSuperPIDController.error","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/error.html","searchKeys":["error","val error: DimensionedQuantity<I>","frc.chargers.utils.pid.UnitSuperPIDController.error"]},{"name":"val error: Double","description":"frc.chargers.utils.pid.SuperPIDController.error","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/error.html","searchKeys":["error","val error: Double","frc.chargers.utils.pid.SuperPIDController.error"]},{"name":"val feedForwards: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.feedForwards","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/feed-forwards.html","searchKeys":["feedForwards","val feedForwards: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.feedForwards"]},{"name":"val freeLimit: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.freeLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-smart-current-limit/free-limit.html","searchKeys":["freeLimit","val freeLimit: Int? = null","frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.freeLimit"]},{"name":"val integralZones: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.integralZones","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/integral-zones.html","searchKeys":["integralZones","val integralZones: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.integralZones"]},{"name":"val isConnected: Boolean","description":"frc.chargers.hardware.sensors.NavX.isConnected","location":"-charger-lib/frc.chargers.hardware.sensors/-nav-x/is-connected.html","searchKeys":["isConnected","val isConnected: Boolean","frc.chargers.hardware.sensors.NavX.isConnected"]},{"name":"val limit: Double","description":"frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit.limit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-secondary-current-limit/limit.html","searchKeys":["limit","val limit: Double","frc.chargers.hardware.motorcontrol.rev.SecondaryCurrentLimit.limit"]},{"name":"val limitRPM: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.limitRPM","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-smart-current-limit/limit-r-p-m.html","searchKeys":["limitRPM","val limitRPM: Int? = null","frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.limitRPM"]},{"name":"val maxIntegralAccumulators: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.maxIntegralAccumulators","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/max-integral-accumulators.html","searchKeys":["maxIntegralAccumulators","val maxIntegralAccumulators: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.maxIntegralAccumulators"]},{"name":"val normalOpenOrClose: LimitSwitchNormal","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.normalOpenOrClose","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-limit-switch-config/normal-open-or-close.html","searchKeys":["normalOpenOrClose","val normalOpenOrClose: LimitSwitchNormal","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.normalOpenOrClose"]},{"name":"val outputRange: ClosedRange<DimensionedQuantity<O>>","description":"frc.chargers.utils.pid.UnitSuperPIDController.outputRange","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/output-range.html","searchKeys":["outputRange","val outputRange: ClosedRange<DimensionedQuantity<O>>","frc.chargers.utils.pid.UnitSuperPIDController.outputRange"]},{"name":"val outputRange: ClosedRange<Double>","description":"frc.chargers.utils.pid.SuperPIDController.outputRange","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/output-range.html","searchKeys":["outputRange","val outputRange: ClosedRange<Double>","frc.chargers.utils.pid.SuperPIDController.outputRange"]},{"name":"val periodicFramePeriods: MutableMap<CANSparkMaxLowLevel.PeriodicFrame, Time>","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.periodicFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/periodic-frame-periods.html","searchKeys":["periodicFramePeriods","val periodicFramePeriods: MutableMap<CANSparkMaxLowLevel.PeriodicFrame, Time>","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.periodicFramePeriods"]},{"name":"val pidConstants: MutableMap<PIDIndex, PIDConstants>","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.pidConstants","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/pid-constants.html","searchKeys":["pidConstants","val pidConstants: MutableMap<PIDIndex, PIDConstants>","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.pidConstants"]},{"name":"val profileSlots: MutableMap<SlotIndex, PIDIndex>? = null","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.profileSlots","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/profile-slots.html","searchKeys":["profileSlots","val profileSlots: MutableMap<SlotIndex, PIDIndex>? = null","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.profileSlots"]},{"name":"val remoteOrdinal: Int","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice.remoteOrdinal","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-base-talon-remote-feedback-filter-device/remote-ordinal.html","searchKeys":["remoteOrdinal","val remoteOrdinal: Int","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice.remoteOrdinal"]},{"name":"val remoteOrdinal: Int","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice.remoteOrdinal","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-c-a-n-coder-remote-feedback-filter-device/remote-ordinal.html","searchKeys":["remoteOrdinal","val remoteOrdinal: Int","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.CANCoderRemoteFeedbackFilterDevice.remoteOrdinal"]},{"name":"val remoteOrdinal: Int","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.remoteOrdinal","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-other-remote-feedback-filter-device/remote-ordinal.html","searchKeys":["remoteOrdinal","val remoteOrdinal: Int","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.remoteOrdinal"]},{"name":"val remoteSensorSource: RemoteSensorSource","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.remoteSensorSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-other-remote-feedback-filter-device/remote-sensor-source.html","searchKeys":["remoteSensorSource","val remoteSensorSource: RemoteSensorSource","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.OtherRemoteFeedbackFilterDevice.remoteSensorSource"]},{"name":"val softLimits: MutableMap<CANSparkMax.SoftLimitDirection, Float>","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.softLimits","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/soft-limits.html","searchKeys":["softLimits","val softLimits: MutableMap<CANSparkMax.SoftLimitDirection, Float>","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.softLimits"]},{"name":"val stallLimit: Int","description":"frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.stallLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-smart-current-limit/stall-limit.html","searchKeys":["stallLimit","val stallLimit: Int","frc.chargers.hardware.motorcontrol.rev.SmartCurrentLimit.stallLimit"]},{"name":"val talon: BaseTalon","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice.talon","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-base-talon-remote-feedback-filter-device/talon.html","searchKeys":["talon","val talon: BaseTalon","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.BaseTalonRemoteFeedbackFilterDevice.talon"]},{"name":"val type: RemoteLimitSwitchSource","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.type","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-limit-switch-config/type.html","searchKeys":["type","val type: RemoteLimitSwitchSource","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.LimitSwitchConfig.type"]},{"name":"val velocity: Velocity","description":"frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.velocity","location":"-charger-lib/frc.chargers.hardware.subsystems.drivetrain/-encoder-differential-drivetrain/velocity.html","searchKeys":["velocity","val velocity: Velocity","frc.chargers.hardware.subsystems.drivetrain.EncoderDifferentialDrivetrain.velocity"]},{"name":"var CTREMotorControllerConfiguration.selectedFeedbackSensor: FeedbackDevice?","description":"frc.chargers.hardware.motorcontrol.ctre.selectedFeedbackSensor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/selected-feedback-sensor.html","searchKeys":["selectedFeedbackSensor","var CTREMotorControllerConfiguration.selectedFeedbackSensor: FeedbackDevice?","frc.chargers.hardware.motorcontrol.ctre.selectedFeedbackSensor"]},{"name":"var PIDController.constants: PIDConstants","description":"frc.chargers.utils.pid.constants","location":"-charger-lib/frc.chargers.utils.pid/constants.html","searchKeys":["constants","var PIDController.constants: PIDConstants","frc.chargers.utils.pid.constants"]},{"name":"var absoluteSensorRange: AbsoluteSensorRange? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.absoluteSensorRange","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/absolute-sensor-range.html","searchKeys":["absoluteSensorRange","var absoluteSensorRange: AbsoluteSensorRange? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.absoluteSensorRange"]},{"name":"var acceleration: AngularAcceleration? = null","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.acceleration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-motion-magic-configuration/acceleration.html","searchKeys":["acceleration","var acceleration: AngularAcceleration? = null","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.acceleration"]},{"name":"var baseTrajectoryPeriod: Time? = null","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.baseTrajectoryPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-motion-magic-configuration/base-trajectory-period.html","searchKeys":["baseTrajectoryPeriod","var baseTrajectoryPeriod: Time? = null","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.baseTrajectoryPeriod"]},{"name":"var canTimeout: Time? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.canTimeout","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/can-timeout.html","searchKeys":["canTimeout","var canTimeout: Time? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.canTimeout"]},{"name":"var closedLoopRampRate: Double? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.closedLoopRampRate","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/closed-loop-ramp-rate.html","searchKeys":["closedLoopRampRate","var closedLoopRampRate: Double? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.closedLoopRampRate"]},{"name":"var constants: PIDConstants","description":"frc.chargers.utils.pid.SuperPIDController.constants","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/constants.html","searchKeys":["constants","var constants: PIDConstants","frc.chargers.utils.pid.SuperPIDController.constants"]},{"name":"var constants: PIDConstants","description":"frc.chargers.utils.pid.UnitSuperPIDController.constants","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/constants.html","searchKeys":["constants","var constants: PIDConstants","frc.chargers.utils.pid.UnitSuperPIDController.constants"]},{"name":"var controlFramePeriod: Time? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.controlFramePeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/control-frame-period.html","searchKeys":["controlFramePeriod","var controlFramePeriod: Time? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.controlFramePeriod"]},{"name":"var cruiseVelocity: AngularVelocity? = null","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.cruiseVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-motion-magic-configuration/cruise-velocity.html","searchKeys":["cruiseVelocity","var cruiseVelocity: AngularVelocity? = null","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.cruiseVelocity"]},{"name":"var expiration: Time? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.expiration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/expiration.html","searchKeys":["expiration","var expiration: Time? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.expiration"]},{"name":"var expiration: Time? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.expiration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/expiration.html","searchKeys":["expiration","var expiration: Time? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.expiration"]},{"name":"var feedForward: FeedForward","description":"frc.chargers.utils.pid.SuperPIDController.feedForward","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/feed-forward.html","searchKeys":["feedForward","var feedForward: FeedForward","frc.chargers.utils.pid.SuperPIDController.feedForward"]},{"name":"var feedForward: UnitFeedForward<I, O>","description":"frc.chargers.utils.pid.UnitSuperPIDController.feedForward","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/feed-forward.html","searchKeys":["feedForward","var feedForward: UnitFeedForward<I, O>","frc.chargers.utils.pid.UnitSuperPIDController.feedForward"]},{"name":"var idleMode: CANSparkMax.IdleMode? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.idleMode","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/idle-mode.html","searchKeys":["idleMode","var idleMode: CANSparkMax.IdleMode? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.idleMode"]},{"name":"var integratedSensorOffset: Angle? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.integratedSensorOffset","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/integrated-sensor-offset.html","searchKeys":["integratedSensorOffset","var integratedSensorOffset: Angle? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.integratedSensorOffset"]},{"name":"var invertAuxPID: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.invertAuxPID","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-p-i-d-configuration/invert-aux-p-i-d.html","searchKeys":["invertAuxPID","var invertAuxPID: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.PIDConfiguration.invertAuxPID"]},{"name":"var inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/inverted.html","searchKeys":["inverted","var inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.inverted"]},{"name":"var inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/inverted.html","searchKeys":["inverted","var inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.inverted"]},{"name":"var inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkConfiguration.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-configuration/inverted.html","searchKeys":["inverted","var inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkConfiguration.inverted"]},{"name":"var inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/inverted.html","searchKeys":["inverted","var inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.inverted"]},{"name":"var kD: Double","description":"frc.chargers.utils.pid.PIDConstants.kD","location":"-charger-lib/frc.chargers.utils.pid/-p-i-d-constants/k-d.html","searchKeys":["kD","var kD: Double","frc.chargers.utils.pid.PIDConstants.kD"]},{"name":"var kI: Double","description":"frc.chargers.utils.pid.PIDConstants.kI","location":"-charger-lib/frc.chargers.utils.pid/-p-i-d-constants/k-i.html","searchKeys":["kI","var kI: Double","frc.chargers.utils.pid.PIDConstants.kI"]},{"name":"var kP: Double","description":"frc.chargers.utils.pid.PIDConstants.kP","location":"-charger-lib/frc.chargers.utils.pid/-p-i-d-constants/k-p.html","searchKeys":["kP","var kP: Double","frc.chargers.utils.pid.PIDConstants.kP"]},{"name":"var motorCommutation: MotorCommutation? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.motorCommutation","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/motor-commutation.html","searchKeys":["motorCommutation","var motorCommutation: MotorCommutation? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.motorCommutation"]},{"name":"var neutralMode: NeutralMode? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.neutralMode","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/neutral-mode.html","searchKeys":["neutralMode","var neutralMode: NeutralMode? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.neutralMode"]},{"name":"var openLoopRampRate: Double? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.openLoopRampRate","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/open-loop-ramp-rate.html","searchKeys":["openLoopRampRate","var openLoopRampRate: Double? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.openLoopRampRate"]},{"name":"var sCurveStrength: Int? = null","description":"frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.sCurveStrength","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-c-t-r-e-motor-controller-configuration/-motion-magic-configuration/s-curve-strength.html","searchKeys":["sCurveStrength","var sCurveStrength: Int? = null","frc.chargers.hardware.motorcontrol.ctre.CTREMotorControllerConfiguration.MotionMagicConfiguration.sCurveStrength"]},{"name":"var safetyEnabled: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.safetyEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/safety-enabled.html","searchKeys":["safetyEnabled","var safetyEnabled: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.safetyEnabled"]},{"name":"var safetyEnabled: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.safetyEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-configuration/safety-enabled.html","searchKeys":["safetyEnabled","var safetyEnabled: Boolean? = null","frc.chargers.hardware.motorcontrol.ctre.TalonSRXConfiguration.safetyEnabled"]},{"name":"var secondaryCurrentLimit: SecondaryCurrentLimit? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.secondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/secondary-current-limit.html","searchKeys":["secondaryCurrentLimit","var secondaryCurrentLimit: SecondaryCurrentLimit? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.secondaryCurrentLimit"]},{"name":"var sensorInitializationStrategy: SensorInitializationStrategy? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.sensorInitializationStrategy","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/sensor-initialization-strategy.html","searchKeys":["sensorInitializationStrategy","var sensorInitializationStrategy: SensorInitializationStrategy? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.sensorInitializationStrategy"]},{"name":"var smartCurrentLimit: SmartCurrentLimit? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.smartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/smart-current-limit.html","searchKeys":["smartCurrentLimit","var smartCurrentLimit: SmartCurrentLimit? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.smartCurrentLimit"]},{"name":"var statorCurrentLimit: StatorCurrentLimitConfiguration? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.statorCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/stator-current-limit.html","searchKeys":["statorCurrentLimit","var statorCurrentLimit: StatorCurrentLimitConfiguration? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.statorCurrentLimit"]},{"name":"var supplyCurrentLimit: SupplyCurrentLimitConfiguration? = null","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.supplyCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-configuration/supply-current-limit.html","searchKeys":["supplyCurrentLimit","var supplyCurrentLimit: SupplyCurrentLimitConfiguration? = null","frc.chargers.hardware.motorcontrol.ctre.TalonFXConfiguration.supplyCurrentLimit"]},{"name":"var target: DimensionedQuantity<I>","description":"frc.chargers.utils.pid.UnitSuperPIDController.target","location":"-charger-lib/frc.chargers.utils.pid/-unit-super-p-i-d-controller/target.html","searchKeys":["target","var target: DimensionedQuantity<I>","frc.chargers.utils.pid.UnitSuperPIDController.target"]},{"name":"var target: Double","description":"frc.chargers.utils.pid.SuperPIDController.target","location":"-charger-lib/frc.chargers.utils.pid/-super-p-i-d-controller/target.html","searchKeys":["target","var target: Double","frc.chargers.utils.pid.SuperPIDController.target"]},{"name":"var voltageCompensationNominalVoltage: Double? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.voltageCompensationNominalVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-configuration/voltage-compensation-nominal-voltage.html","searchKeys":["voltageCompensationNominalVoltage","var voltageCompensationNominalVoltage: Double? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxConfiguration.voltageCompensationNominalVoltage"]}]
