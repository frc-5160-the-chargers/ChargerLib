[{"name":"ERROR","description":"frc.chargers.wpilibextensions.Alert.AlertType.ERROR","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert-type/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","frc.chargers.wpilibextensions.Alert.AlertType.ERROR"]},{"name":"INFO","description":"frc.chargers.wpilibextensions.Alert.AlertType.INFO","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert-type/-i-n-f-o/index.html","searchKeys":["INFO","INFO","frc.chargers.wpilibextensions.Alert.AlertType.INFO"]},{"name":"LTV","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.LTV","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-path-algorithm/-l-t-v/index.html","searchKeys":["LTV","LTV","frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.LTV"]},{"name":"POSITION","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData.POSITION","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/-p-o-s-i-t-i-o-n/index.html","searchKeys":["POSITION","POSITION","frc.chargers.hardware.motorcontrol.rev.util.MotorData.POSITION"]},{"name":"RAMSETE","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.RAMSETE","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-path-algorithm/-r-a-m-s-e-t-e/index.html","searchKeys":["RAMSETE","RAMSETE","frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.RAMSETE"]},{"name":"TEMPERATURE","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData.TEMPERATURE","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/-t-e-m-p-e-r-a-t-u-r-e/index.html","searchKeys":["TEMPERATURE","TEMPERATURE","frc.chargers.hardware.motorcontrol.rev.util.MotorData.TEMPERATURE"]},{"name":"VELOCITY","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData.VELOCITY","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/-v-e-l-o-c-i-t-y/index.html","searchKeys":["VELOCITY","VELOCITY","frc.chargers.hardware.motorcontrol.rev.util.MotorData.VELOCITY"]},{"name":"VOLTAGE","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData.VOLTAGE","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/-v-o-l-t-a-g-e/index.html","searchKeys":["VOLTAGE","VOLTAGE","frc.chargers.hardware.motorcontrol.rev.util.MotorData.VOLTAGE"]},{"name":"WARNING","description":"frc.chargers.wpilibextensions.Alert.AlertType.WARNING","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert-type/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING","frc.chargers.wpilibextensions.Alert.AlertType.WARNING"]},{"name":"abstract class ChargerRobotContainer","description":"frc.chargers.framework.ChargerRobotContainer","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/index.html","searchKeys":["ChargerRobotContainer","abstract class ChargerRobotContainer","frc.chargers.framework.ChargerRobotContainer"]},{"name":"abstract class SparkConfigurationBase(var idleMode: CANSparkBase.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Voltage? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, var periodicFrameConfig: PeriodicFrameConfig? = null, var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf()) : HardwareConfiguration","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/index.html","searchKeys":["SparkConfigurationBase","abstract class SparkConfigurationBase(var idleMode: CANSparkBase.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Voltage? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, var periodicFrameConfig: PeriodicFrameConfig? = null, var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf()) : HardwareConfiguration","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase"]},{"name":"abstract fun addPoseSuppliers(vararg visionSystems: VisionPoseSupplier)","description":"frc.chargers.hardware.sensors.RobotPoseMonitor.addPoseSuppliers","location":"-charger-lib/frc.chargers.hardware.sensors/-robot-pose-monitor/add-pose-suppliers.html","searchKeys":["addPoseSuppliers","abstract fun addPoseSuppliers(vararg visionSystems: VisionPoseSupplier)","frc.chargers.hardware.sensors.RobotPoseMonitor.addPoseSuppliers"]},{"name":"abstract fun calculate(value: Quantity<I>): Quantity<O>","description":"frc.chargers.controls.feedforward.Feedforward.calculate","location":"-charger-lib/frc.chargers.controls.feedforward/-feedforward/calculate.html","searchKeys":["calculate","abstract fun calculate(value: Quantity<I>): Quantity<O>","frc.chargers.controls.feedforward.Feedforward.calculate"]},{"name":"abstract fun calculateOutput(): T","description":"frc.chargers.controls.Controller.calculateOutput","location":"-charger-lib/frc.chargers.controls/-controller/calculate-output.html","searchKeys":["calculateOutput","abstract fun calculateOutput(): T","frc.chargers.controls.Controller.calculateOutput"]},{"name":"abstract fun calculateSetpoint(target: Quantity<S>): Setpoint<S, O>","description":"frc.chargers.controls.SetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls/-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","abstract fun calculateSetpoint(target: Quantity<S>): Setpoint<S, O>","frc.chargers.controls.SetpointSupplier.calculateSetpoint"]},{"name":"abstract fun configure(configuration: C)","description":"frc.chargers.hardware.configuration.HardwareConfigurable.configure","location":"-charger-lib/frc.chargers.hardware.configuration/-hardware-configurable/configure.html","searchKeys":["configure","abstract fun configure(configuration: C)","frc.chargers.hardware.configuration.HardwareConfigurable.configure"]},{"name":"abstract fun getFromLog(table: LogTable, category: String): T","description":"frc.chargers.advantagekitextensions.AdvantageKitLoggable.getFromLog","location":"-charger-lib/frc.chargers.advantagekitextensions/-advantage-kit-loggable/get-from-log.html","searchKeys":["getFromLog","abstract fun getFromLog(table: LogTable, category: String): T","frc.chargers.advantagekitextensions.AdvantageKitLoggable.getFromLog"]},{"name":"abstract fun getModulePosition(wheelRadius: Length): SwerveModulePosition","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.getModulePosition","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/get-module-position.html","searchKeys":["getModulePosition","abstract fun getModulePosition(wheelRadius: Length): SwerveModulePosition","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.getModulePosition"]},{"name":"abstract fun getModuleState(wheelRadius: Length): SwerveModuleState","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.getModuleState","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/get-module-state.html","searchKeys":["getModuleState","abstract fun getModuleState(wheelRadius: Length): SwerveModuleState","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.getModuleState"]},{"name":"abstract fun modifyAxis(input: TriggerValue): TriggerValue","description":"frc.chargers.hardware.inputdevices.AxisModifier.modifyAxis","location":"-charger-lib/frc.chargers.hardware.inputdevices/-axis-modifier/modify-axis.html","searchKeys":["modifyAxis","abstract fun modifyAxis(input: TriggerValue): TriggerValue","frc.chargers.hardware.inputdevices.AxisModifier.modifyAxis"]},{"name":"abstract fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.advantagekitextensions.AdvantageKitLoggable.pushToLog","location":"-charger-lib/frc.chargers.advantagekitextensions/-advantage-kit-loggable/push-to-log.html","searchKeys":["pushToLog","abstract fun pushToLog(table: LogTable, category: String)","frc.chargers.advantagekitextensions.AdvantageKitLoggable.pushToLog"]},{"name":"abstract fun removeRequirement()","description":"frc.chargers.hardware.sensors.vision.Classifier.removeRequirement","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-classifier/remove-requirement.html","searchKeys":["removeRequirement","abstract fun removeRequirement()","frc.chargers.hardware.sensors.vision.Classifier.removeRequirement"]},{"name":"abstract fun removeRequirement()","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.removeRequirement","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/remove-requirement.html","searchKeys":["removeRequirement","abstract fun removeRequirement()","frc.chargers.hardware.sensors.vision.VisionPipeline.removeRequirement"]},{"name":"abstract fun require()","description":"frc.chargers.hardware.sensors.vision.Classifier.require","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-classifier/require.html","searchKeys":["require","abstract fun require()","frc.chargers.hardware.sensors.vision.Classifier.require"]},{"name":"abstract fun require()","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.require","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/require.html","searchKeys":["require","abstract fun require()","frc.chargers.hardware.sensors.vision.VisionPipeline.require"]},{"name":"abstract fun reset()","description":"frc.chargers.hardware.sensors.vision.Classifier.reset","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-classifier/reset.html","searchKeys":["reset","abstract fun reset()","frc.chargers.hardware.sensors.vision.Classifier.reset"]},{"name":"abstract fun reset()","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.reset","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/reset.html","searchKeys":["reset","abstract fun reset()","frc.chargers.hardware.sensors.vision.VisionPipeline.reset"]},{"name":"abstract fun resetPose(pose: UnitPose2d)","description":"frc.chargers.hardware.sensors.RobotPoseMonitor.resetPose","location":"-charger-lib/frc.chargers.hardware.sensors/-robot-pose-monitor/reset-pose.html","searchKeys":["resetPose","abstract fun resetPose(pose: UnitPose2d)","frc.chargers.hardware.sensors.RobotPoseMonitor.resetPose"]},{"name":"abstract fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean = false, extraVoltage: Voltage = Voltage(0.0))","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.setAngularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/set-angular-position.html","searchKeys":["setAngularPosition","abstract fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean = false, extraVoltage: Voltage = Voltage(0.0))","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.setAngularPosition"]},{"name":"abstract fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.setAngularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/set-angular-velocity.html","searchKeys":["setAngularVelocity","abstract fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.setAngularVelocity"]},{"name":"abstract fun setDirection(direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.setDirection","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/set-direction.html","searchKeys":["setDirection","abstract fun setDirection(direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.setDirection"]},{"name":"abstract fun setDirectionalPower(power: Double, direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.setDirectionalPower","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/set-directional-power.html","searchKeys":["setDirectionalPower","abstract fun setDirectionalPower(power: Double, direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.setDirectionalPower"]},{"name":"abstract fun setDirectionalVelocity(angularVelocity: AngularVelocity, direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.setDirectionalVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/set-directional-velocity.html","searchKeys":["setDirectionalVelocity","abstract fun setDirectionalVelocity(angularVelocity: AngularVelocity, direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.setDirectionalVelocity"]},{"name":"abstract fun setVoltages(left: Voltage, right: Voltage)","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.setVoltages","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/set-voltages.html","searchKeys":["setVoltages","abstract fun setVoltages(left: Voltage, right: Voltage)","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.setVoltages"]},{"name":"abstract fun setZero(newZero: Angle)","description":"frc.chargers.hardware.sensors.encoders.ResettableEncoder.setZero","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-resettable-encoder/set-zero.html","searchKeys":["setZero","abstract fun setZero(newZero: Angle)","frc.chargers.hardware.sensors.encoders.ResettableEncoder.setZero"]},{"name":"abstract fun tankDrive(leftPower: Double, rightPower: Double)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.tankDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/tank-drive.html","searchKeys":["tankDrive","abstract fun tankDrive(leftPower: Double, rightPower: Double)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.tankDrive"]},{"name":"abstract fun zeroHeading()","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ZeroableHeadingProvider.zeroHeading","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-zeroable-heading-provider/zero-heading.html","searchKeys":["zeroHeading","abstract fun zeroHeading()","frc.chargers.hardware.sensors.imu.gyroscopes.ZeroableHeadingProvider.zeroHeading"]},{"name":"abstract val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.PositionEncoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-position-encoder/angular-position.html","searchKeys":["angularPosition","abstract val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.PositionEncoder.angularPosition"]},{"name":"abstract val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.VelocityEncoder.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-velocity-encoder/angular-velocity.html","searchKeys":["angularVelocity","abstract val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.VelocityEncoder.angularVelocity"]},{"name":"abstract val appliedCurrent: Current","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.appliedCurrent","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/applied-current.html","searchKeys":["appliedCurrent","abstract val appliedCurrent: Current","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.appliedCurrent"]},{"name":"abstract val appliedVoltage: Voltage","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.appliedVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/applied-voltage.html","searchKeys":["appliedVoltage","abstract val appliedVoltage: Voltage","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.appliedVoltage"]},{"name":"abstract val areaPercent: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.areaPercent","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/area-percent.html","searchKeys":["areaPercent","abstract val areaPercent: Double","frc.chargers.hardware.sensors.vision.VisionTarget.areaPercent"]},{"name":"abstract val autonomousCommand: Command","description":"frc.chargers.framework.ChargerRobotContainer.autonomousCommand","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/autonomous-command.html","searchKeys":["autonomousCommand","abstract val autonomousCommand: Command","frc.chargers.framework.ChargerRobotContainer.autonomousCommand"]},{"name":"abstract val cameraYaw: Angle","description":"frc.chargers.hardware.sensors.VisionPoseSupplier.cameraYaw","location":"-charger-lib/frc.chargers.hardware.sensors/-vision-pose-supplier/camera-yaw.html","searchKeys":["cameraYaw","abstract val cameraYaw: Angle","frc.chargers.hardware.sensors.VisionPoseSupplier.cameraYaw"]},{"name":"abstract val direction: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.direction","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/direction.html","searchKeys":["direction","abstract val direction: Angle","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.direction"]},{"name":"abstract val driveCurrent: Current","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.driveCurrent","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/drive-current.html","searchKeys":["driveCurrent","abstract val driveCurrent: Current","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.driveCurrent"]},{"name":"abstract val driveTempCelsius: Double","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.driveTempCelsius","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/drive-temp-celsius.html","searchKeys":["driveTempCelsius","abstract val driveTempCelsius: Double","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.driveTempCelsius"]},{"name":"abstract val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.EncoderMotorController.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller/encoder.html","searchKeys":["encoder","abstract val encoder: Encoder","frc.chargers.hardware.motorcontrol.EncoderMotorController.encoder"]},{"name":"abstract val error: I","description":"frc.chargers.controls.FeedbackController.error","location":"-charger-lib/frc.chargers.controls/-feedback-controller/error.html","searchKeys":["error","abstract val error: I","frc.chargers.controls.FeedbackController.error"]},{"name":"abstract val heading: Angle","description":"frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider.heading","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-heading-provider/heading.html","searchKeys":["heading","abstract val heading: Angle","frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider.heading"]},{"name":"abstract val index: Int","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.index","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/--index--.html","searchKeys":["index","abstract val index: Int","frc.chargers.hardware.sensors.vision.VisionPipeline.index"]},{"name":"abstract val itemType: T","description":"frc.chargers.hardware.sensors.vision.Classifier.itemType","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-classifier/item-type.html","searchKeys":["itemType","abstract val itemType: T","frc.chargers.hardware.sensors.vision.Classifier.itemType"]},{"name":"abstract val leftVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.leftVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/left-velocity.html","searchKeys":["leftVelocity","abstract val leftVelocity: AngularVelocity","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.leftVelocity"]},{"name":"abstract val leftVoltage: Voltage","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.leftVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/left-voltage.html","searchKeys":["leftVoltage","abstract val leftVoltage: Voltage","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.leftVoltage"]},{"name":"abstract val leftWheelTravel: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.leftWheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/left-wheel-travel.html","searchKeys":["leftWheelTravel","abstract val leftWheelTravel: Angle","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.leftWheelTravel"]},{"name":"abstract val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/lens-height.html","searchKeys":["lensHeight","abstract val lensHeight: Distance","frc.chargers.hardware.sensors.vision.VisionPipeline.lensHeight"]},{"name":"abstract val logTab: String","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.logTab","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/log-tab.html","searchKeys":["logTab","abstract val logTab: String","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.logTab"]},{"name":"abstract val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/mount-angle.html","searchKeys":["mountAngle","abstract val mountAngle: Angle","frc.chargers.hardware.sensors.vision.VisionPipeline.mountAngle"]},{"name":"abstract val pitch: Angle","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.pitch","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/pitch.html","searchKeys":["pitch","abstract val pitch: Angle","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.pitch"]},{"name":"abstract val rightVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.rightVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/right-velocity.html","searchKeys":["rightVelocity","abstract val rightVelocity: AngularVelocity","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.rightVelocity"]},{"name":"abstract val rightVoltage: Voltage","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.rightVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/right-voltage.html","searchKeys":["rightVoltage","abstract val rightVoltage: Voltage","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.rightVoltage"]},{"name":"abstract val rightWheelTravel: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.rightWheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/right-wheel-travel.html","searchKeys":["rightWheelTravel","abstract val rightWheelTravel: Angle","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.rightWheelTravel"]},{"name":"abstract val robotPose: UnitPose2d","description":"frc.chargers.hardware.sensors.RobotPoseMonitor.robotPose","location":"-charger-lib/frc.chargers.hardware.sensors/-robot-pose-monitor/robot-pose.html","searchKeys":["robotPose","abstract val robotPose: UnitPose2d","frc.chargers.hardware.sensors.RobotPoseMonitor.robotPose"]},{"name":"abstract val robotPoseEstimate: BasicMeasurement<UnitPose2d>?","description":"frc.chargers.hardware.sensors.VisionPoseSupplier.robotPoseEstimate","location":"-charger-lib/frc.chargers.hardware.sensors/-vision-pose-supplier/robot-pose-estimate.html","searchKeys":["robotPoseEstimate","abstract val robotPoseEstimate: BasicMeasurement<UnitPose2d>?","frc.chargers.hardware.sensors.VisionPoseSupplier.robotPoseEstimate"]},{"name":"abstract val roll: Angle","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.roll","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/roll.html","searchKeys":["roll","abstract val roll: Angle","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.roll"]},{"name":"abstract val speed: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.speed","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/speed.html","searchKeys":["speed","abstract val speed: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.speed"]},{"name":"abstract val tempCelsius: Double","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.tempCelsius","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/temp-celsius.html","searchKeys":["tempCelsius","abstract val tempCelsius: Double","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.tempCelsius"]},{"name":"abstract val turnCurrent: Current","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnCurrent","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/turn-current.html","searchKeys":["turnCurrent","abstract val turnCurrent: Current","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnCurrent"]},{"name":"abstract val turnSpeed: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnSpeed","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/turn-speed.html","searchKeys":["turnSpeed","abstract val turnSpeed: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnSpeed"]},{"name":"abstract val turnTempCelsius: Double","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnTempCelsius","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/turn-temp-celsius.html","searchKeys":["turnTempCelsius","abstract val turnTempCelsius: Double","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnTempCelsius"]},{"name":"abstract val tx: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.tx","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/tx.html","searchKeys":["tx","abstract val tx: Double","frc.chargers.hardware.sensors.vision.VisionTarget.tx"]},{"name":"abstract val ty: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ty","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/ty.html","searchKeys":["ty","abstract val ty: Double","frc.chargers.hardware.sensors.vision.VisionTarget.ty"]},{"name":"abstract val visionData: NonLoggableVisionData<R>?","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.visionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/vision-data.html","searchKeys":["visionData","abstract val visionData: NonLoggableVisionData<R>?","frc.chargers.hardware.sensors.vision.VisionPipeline.visionData"]},{"name":"abstract val wheelTravel: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.wheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/wheel-travel.html","searchKeys":["wheelTravel","abstract val wheelTravel: Angle","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.wheelTravel"]},{"name":"abstract val xAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.xAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-accelerometer/x-acceleration.html","searchKeys":["xAcceleration","abstract val xAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.xAcceleration"]},{"name":"abstract val xVelocity: Velocity","description":"frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.xVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-speedometer/x-velocity.html","searchKeys":["xVelocity","abstract val xVelocity: Velocity","frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.xVelocity"]},{"name":"abstract val yAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.yAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-accelerometer/y-acceleration.html","searchKeys":["yAcceleration","abstract val yAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.yAcceleration"]},{"name":"abstract val yVelocity: Velocity","description":"frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.yVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-speedometer/y-velocity.html","searchKeys":["yVelocity","abstract val yVelocity: Velocity","frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.yVelocity"]},{"name":"abstract val yaw: Angle","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.yaw","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/yaw.html","searchKeys":["yaw","abstract val yaw: Angle","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.yaw"]},{"name":"abstract val zAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.zAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-accelerometer/z-acceleration.html","searchKeys":["zAcceleration","abstract val zAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.zAcceleration"]},{"name":"abstract val zVelocity: Velocity","description":"frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.zVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-speedometer/z-velocity.html","searchKeys":["zVelocity","abstract val zVelocity: Velocity","frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.zVelocity"]},{"name":"abstract var driveVoltage: Voltage","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.driveVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/drive-voltage.html","searchKeys":["driveVoltage","abstract var driveVoltage: Voltage","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.driveVoltage"]},{"name":"abstract var inverted: Boolean","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.inverted","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/inverted.html","searchKeys":["inverted","abstract var inverted: Boolean","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO.inverted"]},{"name":"abstract var target: I","description":"frc.chargers.controls.FeedbackController.target","location":"-charger-lib/frc.chargers.controls/-feedback-controller/target.html","searchKeys":["target","abstract var target: I","frc.chargers.controls.FeedbackController.target"]},{"name":"abstract var turnVoltage: Voltage","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/turn-voltage.html","searchKeys":["turnVoltage","abstract var turnVoltage: Voltage","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO.turnVoltage"]},{"name":"annotation class CommandBuilderMarker","description":"frc.chargers.commands.commandbuilder.CommandBuilderMarker","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder-marker/index.html","searchKeys":["CommandBuilderMarker","annotation class CommandBuilderMarker","frc.chargers.commands.commandbuilder.CommandBuilderMarker"]},{"name":"class Alert(group: String = \"Alerts\", text: String, type: Alert.AlertType)","description":"frc.chargers.wpilibextensions.Alert","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/index.html","searchKeys":["Alert","class Alert(group: String = \"Alerts\", text: String, type: Alert.AlertType)","frc.chargers.wpilibextensions.Alert"]},{"name":"class AnalogPotentiometerEncoder(input: AnalogInput, fullRange: Angle, offset: Angle = 0.degrees) : AnalogPotentiometer, PositionEncoder","description":"frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-analog-potentiometer-encoder/index.html","searchKeys":["AnalogPotentiometerEncoder","class AnalogPotentiometerEncoder(input: AnalogInput, fullRange: Angle, offset: Angle = 0.degrees) : AnalogPotentiometer, PositionEncoder","frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder"]},{"name":"class AngularExponentialSetpointSupplier(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0)) : ExponentialProfile, SetpointSupplier<AngleDimension, VoltageDimension> ","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/index.html","searchKeys":["AngularExponentialSetpointSupplier","class AngularExponentialSetpointSupplier(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0)) : ExponentialProfile, SetpointSupplier<AngleDimension, VoltageDimension> ","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier"]},{"name":"class AngularTrapezoidalSetpointSupplier(profileConstraints: AngularMotionConstraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State()) : TrapezoidProfile, SetpointSupplier<AngleDimension, VoltageDimension> ","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/index.html","searchKeys":["AngularTrapezoidalSetpointSupplier","class AngularTrapezoidalSetpointSupplier(profileConstraints: AngularMotionConstraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State()) : TrapezoidProfile, SetpointSupplier<AngleDimension, VoltageDimension> ","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier"]},{"name":"class AprilTag(val tx: Double, val ty: Double, val areaPercent: Double, val id: Int, val targetTransformFromCam: UnitTransform3d) : VisionTarget, AdvantageKitLoggable<VisionTarget.AprilTag> ","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/index.html","searchKeys":["AprilTag","class AprilTag(val tx: Double, val ty: Double, val areaPercent: Double, val id: Int, val targetTransformFromCam: UnitTransform3d) : VisionTarget, AdvantageKitLoggable<VisionTarget.AprilTag> ","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag"]},{"name":"class AverageEncoder(encoders: Encoder) : Encoder","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/index.html","searchKeys":["AverageEncoder","class AverageEncoder(encoders: Encoder) : Encoder","frc.chargers.hardware.sensors.encoders.AverageEncoder"]},{"name":"class ChargerCANcoder(deviceId: Int, canBus: String = \"\", factoryDefault: Boolean = true) : CANcoder, ResettableEncoder, HardwareConfigurable<CANcoderConfiguration> ","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/index.html","searchKeys":["ChargerCANcoder","class ChargerCANcoder(deviceId: Int, canBus: String = \"\", factoryDefault: Boolean = true) : CANcoder, ResettableEncoder, HardwareConfigurable<CANcoderConfiguration> ","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder"]},{"name":"class ChargerDutyCycleEncoder : DutyCycleEncoder, PositionEncoder, HardwareConfigurable<DutyCycleEncoderConfiguration> ","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder/index.html","searchKeys":["ChargerDutyCycleEncoder","class ChargerDutyCycleEncoder : DutyCycleEncoder, PositionEncoder, HardwareConfigurable<DutyCycleEncoderConfiguration> ","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder"]},{"name":"class ChargerLibBuildConstants","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/index.html","searchKeys":["ChargerLibBuildConstants","class ChargerLibBuildConstants","frc.chargerlibexternal.builddata.ChargerLibBuildConstants"]},{"name":"class ChargerLimelight(val name: String = \"limelight\", useJsonDump: Boolean = false, val lensHeight: Distance, val mountAngle: Angle, val defaultDriverStationIfUnavailable: DriverStation.Alliance = DriverStation.Alliance.Blue)","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/index.html","searchKeys":["ChargerLimelight","class ChargerLimelight(val name: String = \"limelight\", useJsonDump: Boolean = false, val lensHeight: Distance, val mountAngle: Angle, val defaultDriverStationIfUnavailable: DriverStation.Alliance = DriverStation.Alliance.Blue)","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight"]},{"name":"class ChargerNavX(useFusedHeading: Boolean = true, val ahrs: AHRS = AHRS()) : ZeroableHeadingProvider","description":"frc.chargers.hardware.sensors.imu.ChargerNavX","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/index.html","searchKeys":["ChargerNavX","class ChargerNavX(useFusedHeading: Boolean = true, val ahrs: AHRS = AHRS()) : ZeroableHeadingProvider","frc.chargers.hardware.sensors.imu.ChargerNavX"]},{"name":"class ChargerPhotonCam(name: String, val lensHeight: Distance, val mountAngle: Angle) : PhotonCamera","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/index.html","searchKeys":["ChargerPhotonCam","class ChargerPhotonCam(name: String, val lensHeight: Distance, val mountAngle: Angle) : PhotonCamera","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam"]},{"name":"class ChargerPigeon2(canId: Int, canBus: String = \"rio\") : Pigeon2, ZeroableHeadingProvider, HardwareConfigurable<Pigeon2Configuration> ","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/index.html","searchKeys":["ChargerPigeon2","class ChargerPigeon2(canId: Int, canBus: String = \"rio\") : Pigeon2, ZeroableHeadingProvider, HardwareConfigurable<Pigeon2Configuration> ","frc.chargers.hardware.sensors.imu.ChargerPigeon2"]},{"name":"class ChargerQuadEncoder : Encoder, Encoder, HardwareConfigurable<QuadEncoderConfiguration> ","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/index.html","searchKeys":["ChargerQuadEncoder","class ChargerQuadEncoder : Encoder, Encoder, HardwareConfigurable<QuadEncoderConfiguration> ","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder"]},{"name":"class ChargerSparkFlex(deviceId: Int) : CANSparkFlex, SmartEncoderMotorController, HardwareConfigurable<ChargerSparkFlexConfiguration> ","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/index.html","searchKeys":["ChargerSparkFlex","class ChargerSparkFlex(deviceId: Int) : CANSparkFlex, SmartEncoderMotorController, HardwareConfigurable<ChargerSparkFlexConfiguration> ","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex"]},{"name":"class ChargerSparkFlexConfiguration(var encoderType: SparkFlexEncoderType? = null, var idleMode: CANSparkBase.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Voltage? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, var periodicFrameConfig: PeriodicFrameConfig? = null, var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf()) : SparkConfigurationBase","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlexConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex-configuration/index.html","searchKeys":["ChargerSparkFlexConfiguration","class ChargerSparkFlexConfiguration(var encoderType: SparkFlexEncoderType? = null, var idleMode: CANSparkBase.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Voltage? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, var periodicFrameConfig: PeriodicFrameConfig? = null, var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf()) : SparkConfigurationBase","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlexConfiguration"]},{"name":"class ChargerSparkMax(deviceId: Int, type: CANSparkLowLevel.MotorType) : CANSparkMax, SmartEncoderMotorController, HardwareConfigurable<ChargerSparkMaxConfiguration> ","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/index.html","searchKeys":["ChargerSparkMax","class ChargerSparkMax(deviceId: Int, type: CANSparkLowLevel.MotorType) : CANSparkMax, SmartEncoderMotorController, HardwareConfigurable<ChargerSparkMaxConfiguration> ","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax"]},{"name":"class ChargerSparkMaxConfiguration(var encoderType: SparkMaxEncoderType? = null, var idleMode: CANSparkBase.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Voltage? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, var periodicFrameConfig: PeriodicFrameConfig? = null, var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf()) : SparkConfigurationBase","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMaxConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max-configuration/index.html","searchKeys":["ChargerSparkMaxConfiguration","class ChargerSparkMaxConfiguration(var encoderType: SparkMaxEncoderType? = null, var idleMode: CANSparkBase.IdleMode? = null, var inverted: Boolean? = null, var voltageCompensationNominalVoltage: Voltage? = null, var canTimeout: Time? = null, var closedLoopRampRate: Double? = null, var openLoopRampRate: Double? = null, var controlFramePeriod: Time? = null, var periodicFrameConfig: PeriodicFrameConfig? = null, var smartCurrentLimit: SmartCurrentLimit? = null, var secondaryCurrentLimit: SecondaryCurrentLimit? = null, var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf()) : SparkConfigurationBase","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMaxConfiguration"]},{"name":"class CommandBuilder","description":"frc.chargers.commands.commandbuilder.CommandBuilder","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/index.html","searchKeys":["CommandBuilder","class CommandBuilder","frc.chargers.commands.commandbuilder.CommandBuilder"]},{"name":"class Default<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(feedforward: Feedforward<I, O> = Feedforward{ Quantity(0.0) }) : SetpointSupplier<I, O> ","description":"frc.chargers.controls.SetpointSupplier.Default","location":"-charger-lib/frc.chargers.controls/-setpoint-supplier/-default/index.html","searchKeys":["Default","class Default<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(feedforward: Feedforward<I, O> = Feedforward{ Quantity(0.0) }) : SetpointSupplier<I, O> ","frc.chargers.controls.SetpointSupplier.Default"]},{"name":"class DiffDriveIOReal(logInputs: LoggableInputsProvider, topLeft: EncoderMotorController, topRight: EncoderMotorController, bottomLeft: EncoderMotorController, bottomRight: EncoderMotorController) : DiffDriveIO","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/index.html","searchKeys":["DiffDriveIOReal","class DiffDriveIOReal(logInputs: LoggableInputsProvider, topLeft: EncoderMotorController, topRight: EncoderMotorController, bottomLeft: EncoderMotorController, bottomRight: EncoderMotorController) : DiffDriveIO","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal"]},{"name":"class DiffDriveIOSim(logInputs: LoggableInputsProvider, motors: DifferentialDrivetrainSim.KitbotMotor) : DiffDriveIO","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/index.html","searchKeys":["DiffDriveIOSim","class DiffDriveIOSim(logInputs: LoggableInputsProvider, motors: DifferentialDrivetrainSim.KitbotMotor) : DiffDriveIO","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim"]},{"name":"class DifferentialPoseMonitor(drivetrain: EncoderDifferentialDrivetrain, poseSuppliers: MutableList<VisionPoseSupplier> = mutableListOf(), startingPose: UnitPose2d = UnitPose2d()) : SubsystemBase, RobotPoseMonitor","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/index.html","searchKeys":["DifferentialPoseMonitor","class DifferentialPoseMonitor(drivetrain: EncoderDifferentialDrivetrain, poseSuppliers: MutableList<VisionPoseSupplier> = mutableListOf(), startingPose: UnitPose2d = UnitPose2d()) : SubsystemBase, RobotPoseMonitor","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor"]},{"name":"class DriverCameraView(totalDriverCams: Int = 1, defaultResWidth: Int, defaultResHeight: Int)","description":"frc.chargers.hardware.sensors.vision.DriverCameraView","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-driver-camera-view/index.html","searchKeys":["DriverCameraView","class DriverCameraView(totalDriverCams: Int = 1, defaultResWidth: Int, defaultResHeight: Int)","frc.chargers.hardware.sensors.vision.DriverCameraView"]},{"name":"class EncoderDifferentialDrivetrain(lowLevel: DiffDriveIO, val hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), val controlData: DiffDriveControlData = DiffDriveControlData.None, val gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), poseSuppliers: VisionPoseSupplier) : SubsystemBase, DifferentialDrivetrain, HeadingProvider, DiffDriveIO","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/index.html","searchKeys":["EncoderDifferentialDrivetrain","class EncoderDifferentialDrivetrain(lowLevel: DiffDriveIO, val hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), val controlData: DiffDriveControlData = DiffDriveControlData.None, val gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), poseSuppliers: VisionPoseSupplier) : SubsystemBase, DifferentialDrivetrain, HeadingProvider, DiffDriveIO","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain"]},{"name":"class EncoderHolonomicDrivetrain(val topLeft: SwerveModule, val topRight: SwerveModule, val bottomLeft: SwerveModule, val bottomRight: SwerveModule, val hardwareData: SwerveHardwareData, val controlData: SwerveControlData, val gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), poseSuppliers: VisionPoseSupplier) : SubsystemBase, HeadingProvider, DifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/index.html","searchKeys":["EncoderHolonomicDrivetrain","class EncoderHolonomicDrivetrain(val topLeft: SwerveModule, val topRight: SwerveModule, val bottomLeft: SwerveModule, val bottomRight: SwerveModule, val hardwareData: SwerveHardwareData, val controlData: SwerveControlData, val gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), poseSuppliers: VisionPoseSupplier) : SubsystemBase, HeadingProvider, DifferentialDrivetrain","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain"]},{"name":"class Generic(val tx: Double, val ty: Double, val areaPercent: Double) : VisionTarget, AdvantageKitLoggable<VisionTarget.Generic> ","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/index.html","searchKeys":["Generic","class Generic(val tx: Double, val ty: Double, val areaPercent: Double) : VisionTarget, AdvantageKitLoggable<VisionTarget.Generic> ","frc.chargers.hardware.sensors.vision.VisionTarget.Generic"]},{"name":"class InputAxis(get: () -> TriggerValue) : Function0<TriggerValue> ","description":"frc.chargers.hardware.inputdevices.InputAxis","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/index.html","searchKeys":["InputAxis","class InputAxis(get: () -> TriggerValue) : Function0<TriggerValue> ","frc.chargers.hardware.inputdevices.InputAxis"]},{"name":"class LinearExponentialSetpointSupplier(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0)) : ExponentialProfile, SetpointSupplier<DistanceDimension, VoltageDimension> ","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/index.html","searchKeys":["LinearExponentialSetpointSupplier","class LinearExponentialSetpointSupplier(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0)) : ExponentialProfile, SetpointSupplier<DistanceDimension, VoltageDimension> ","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier"]},{"name":"class LinearTrapezoidalSetpointSupplier(profileConstraints: LinearMotionConstraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State()) : TrapezoidProfile, SetpointSupplier<DistanceDimension, VoltageDimension> ","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/index.html","searchKeys":["LinearTrapezoidalSetpointSupplier","class LinearTrapezoidalSetpointSupplier(profileConstraints: LinearMotionConstraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State()) : TrapezoidProfile, SetpointSupplier<DistanceDimension, VoltageDimension> ","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier"]},{"name":"class LoggableInputsProvider(val namespace: String, updateInputs: Boolean = true, runBeforeInputUpdate: () -> Unit? = null, runAfterInputUpdate: () -> Unit? = null)","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/index.html","searchKeys":["LoggableInputsProvider","class LoggableInputsProvider(val namespace: String, updateInputs: Boolean = true, runBeforeInputUpdate: () -> Unit? = null, runAfterInputUpdate: () -> Unit? = null)","frc.chargers.advantagekitextensions.LoggableInputsProvider"]},{"name":"class ML(val tx: Double, val ty: Double, val areaPercent: Double, val id: Int) : VisionTarget, AdvantageKitLoggable<VisionTarget.ML> ","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/index.html","searchKeys":["ML","class ML(val tx: Double, val ty: Double, val areaPercent: Double, val id: Int) : VisionTarget, AdvantageKitLoggable<VisionTarget.ML> ","frc.chargers.hardware.sensors.vision.VisionTarget.ML"]},{"name":"class MappableContext<K, V>","description":"frc.chargers.utils.MappableContext","location":"-charger-lib/frc.chargers.utils/-mappable-context/index.html","searchKeys":["MappableContext","class MappableContext<K, V>","frc.chargers.utils.MappableContext"]},{"name":"class ModuleIOReal(logInputs: LoggableInputsProvider, turnMotor: EncoderMotorController, turnEncoder: PositionEncoder, driveMotor: EncoderMotorController, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnGearRatio: Double = DEFAULT_GEAR_RATIO) : ModuleIO","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/index.html","searchKeys":["ModuleIOReal","class ModuleIOReal(logInputs: LoggableInputsProvider, turnMotor: EncoderMotorController, turnEncoder: PositionEncoder, driveMotor: EncoderMotorController, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnGearRatio: Double = DEFAULT_GEAR_RATIO) : ModuleIO","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal"]},{"name":"class ModuleIOSim(logInputs: LoggableInputsProvider, turnGearbox: DCMotor, driveGearbox: DCMotor, turnGearRatio: Double = DEFAULT_GEAR_RATIO, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA) : ModuleIO","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/index.html","searchKeys":["ModuleIOSim","class ModuleIOSim(logInputs: LoggableInputsProvider, turnGearbox: DCMotor, driveGearbox: DCMotor, turnGearRatio: Double = DEFAULT_GEAR_RATIO, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA) : ModuleIO","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim"]},{"name":"class OnboardPIDSwerveModule : ModuleIO, SwerveModule","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/index.html","searchKeys":["OnboardPIDSwerveModule","class OnboardPIDSwerveModule : ModuleIO, SwerveModule","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule"]},{"name":"class RioPIDSwerveModule(lowLevel: ModuleIO, controlData: SwerveControlData) : SwerveModule, ModuleIO","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/index.html","searchKeys":["RioPIDSwerveModule","class RioPIDSwerveModule(lowLevel: ModuleIO, controlData: SwerveControlData) : SwerveModule, ModuleIO","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule"]},{"name":"class SparkEncoderAdaptor(revEncoder: MotorFeedbackSensor) : ResettableEncoder","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-encoder-adaptor/index.html","searchKeys":["SparkEncoderAdaptor","class SparkEncoderAdaptor(revEncoder: MotorFeedbackSensor) : ResettableEncoder","frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor"]},{"name":"class SuperPIDController<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(pidConstants: PIDConstants, getInput: () -> Quantity<I>, var target: Quantity<I>, setpointSupplier: SetpointSupplier<I, O> = SetpointSupplier.Default(), continuousInputRange: ClosedRange<Quantity<I>>? = null, outputRange: ClosedRange<Quantity<O>> = Quantity<O>(Double.NEGATIVE_INFINITY)..Quantity(Double.POSITIVE_INFINITY), errorTolerance: Precision<I> = Precision.AllowOvershoot, selfSustain: Boolean = false) : FeedbackController<Quantity<I>, Quantity<O>> ","description":"frc.chargers.controls.pid.SuperPIDController","location":"-charger-lib/frc.chargers.controls.pid/-super-p-i-d-controller/index.html","searchKeys":["SuperPIDController","class SuperPIDController<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(pidConstants: PIDConstants, getInput: () -> Quantity<I>, var target: Quantity<I>, setpointSupplier: SetpointSupplier<I, O> = SetpointSupplier.Default(), continuousInputRange: ClosedRange<Quantity<I>>? = null, outputRange: ClosedRange<Quantity<O>> = Quantity<O>(Double.NEGATIVE_INFINITY)..Quantity(Double.POSITIVE_INFINITY), errorTolerance: Precision<I> = Precision.AllowOvershoot, selfSustain: Boolean = false) : FeedbackController<Quantity<I>, Quantity<O>> ","frc.chargers.controls.pid.SuperPIDController"]},{"name":"class SwervePoseMonitor(drivetrain: EncoderHolonomicDrivetrain, poseSuppliers: List<VisionPoseSupplier>, startingPose: UnitPose2d = UnitPose2d()) : SubsystemBase, RobotPoseMonitor","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/index.html","searchKeys":["SwervePoseMonitor","class SwervePoseMonitor(drivetrain: EncoderHolonomicDrivetrain, poseSuppliers: List<VisionPoseSupplier>, startingPose: UnitPose2d = UnitPose2d()) : SubsystemBase, RobotPoseMonitor","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor"]},{"name":"class TalonFXEncoderAdapter(motorController: TalonFX) : ResettableEncoder","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-encoder-adapter/index.html","searchKeys":["TalonFXEncoderAdapter","class TalonFXEncoderAdapter(motorController: TalonFX) : ResettableEncoder","frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter"]},{"name":"class TalonSRXEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle) : ResettableEncoder, IMotorController","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/index.html","searchKeys":["TalonSRXEncoderAdapter","class TalonSRXEncoderAdapter(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle) : ResettableEncoder, IMotorController","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter"]},{"name":"class TimestampedVisionUpdate : Record","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.TimestampedVisionUpdate","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/-timestamped-vision-update/index.html","searchKeys":["TimestampedVisionUpdate","class TimestampedVisionUpdate : Record","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.TimestampedVisionUpdate"]},{"name":"class VisionData<out R : VisionTarget, AdvantageKitLoggable<R>>(timestamp: Time, bestTarget: R, otherTargets: List<R>) : NonLoggableVisionData<R> , AdvantageKitLoggable<VisionData<R>> ","description":"frc.chargers.hardware.sensors.vision.VisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-data/index.html","searchKeys":["VisionData","class VisionData<out R : VisionTarget, AdvantageKitLoggable<R>>(timestamp: Time, bestTarget: R, otherTargets: List<R>) : NonLoggableVisionData<R> , AdvantageKitLoggable<VisionData<R>> ","frc.chargers.hardware.sensors.vision.VisionData"]},{"name":"class VisionUpdate : Record","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.VisionUpdate","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/-vision-update/index.html","searchKeys":["VisionUpdate","class VisionUpdate : Record","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.VisionUpdate"]},{"name":"class Within<D : Dimension<*, *, *, *>>(val allowableError: ClosedRange<Quantity<D>>) : Precision<D> ","description":"frc.chargers.utils.Precision.Within","location":"-charger-lib/frc.chargers.utils/-precision/-within/index.html","searchKeys":["Within","class Within<D : Dimension<*, *, *, *>>(val allowableError: ClosedRange<Quantity<D>>) : Precision<D> ","frc.chargers.utils.Precision.Within"]},{"name":"const val DISABLED_PERIODIC_FRAME_STRATEGY: Int = 65535","description":"frc.chargers.hardware.motorcontrol.rev.DISABLED_PERIODIC_FRAME_STRATEGY","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-d-i-s-a-b-l-e-d_-p-e-r-i-o-d-i-c_-f-r-a-m-e_-s-t-r-a-t-e-g-y.html","searchKeys":["DISABLED_PERIODIC_FRAME_STRATEGY","const val DISABLED_PERIODIC_FRAME_STRATEGY: Int = 65535","frc.chargers.hardware.motorcontrol.rev.DISABLED_PERIODIC_FRAME_STRATEGY"]},{"name":"const val FAST_PERIODIC_FRAME_STRATEGY: Int = 15","description":"frc.chargers.hardware.motorcontrol.rev.FAST_PERIODIC_FRAME_STRATEGY","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-f-a-s-t_-p-e-r-i-o-d-i-c_-f-r-a-m-e_-s-t-r-a-t-e-g-y.html","searchKeys":["FAST_PERIODIC_FRAME_STRATEGY","const val FAST_PERIODIC_FRAME_STRATEGY: Int = 15","frc.chargers.hardware.motorcontrol.rev.FAST_PERIODIC_FRAME_STRATEGY"]},{"name":"const val SLOW_PERIODIC_FRAME_STRATEGY: Int = 500","description":"frc.chargers.hardware.motorcontrol.rev.SLOW_PERIODIC_FRAME_STRATEGY","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-s-l-o-w_-p-e-r-i-o-d-i-c_-f-r-a-m-e_-s-t-r-a-t-e-g-y.html","searchKeys":["SLOW_PERIODIC_FRAME_STRATEGY","const val SLOW_PERIODIC_FRAME_STRATEGY: Int = 500","frc.chargers.hardware.motorcontrol.rev.SLOW_PERIODIC_FRAME_STRATEGY"]},{"name":"constructor()","description":"frc.chargerlibexternal.frc4481.HeadingCorrector.HeadingCorrector","location":"-charger-lib/frc.chargerlibexternal.frc4481/-heading-corrector/-heading-corrector.html","searchKeys":["HeadingCorrector","constructor()","frc.chargerlibexternal.frc4481.HeadingCorrector.HeadingCorrector"]},{"name":"constructor()","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.TimestampedVisionUpdate.TimestampedVisionUpdate","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/-timestamped-vision-update/-timestamped-vision-update.html","searchKeys":["TimestampedVisionUpdate","constructor()","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.TimestampedVisionUpdate.TimestampedVisionUpdate"]},{"name":"constructor()","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.VisionUpdate.VisionUpdate","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/-vision-update/-vision-update.html","searchKeys":["VisionUpdate","constructor()","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.VisionUpdate.VisionUpdate"]},{"name":"constructor()","description":"frc.chargerlibexternal.frc6995.NomadApriltagUtil.NomadApriltagUtil","location":"-charger-lib/frc.chargerlibexternal.frc6995/-nomad-apriltag-util/-nomad-apriltag-util.html","searchKeys":["NomadApriltagUtil","constructor()","frc.chargerlibexternal.frc6995.NomadApriltagUtil.NomadApriltagUtil"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightHelpers","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-helpers.html","searchKeys":["LimelightHelpers","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightHelpers"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightResults.LimelightResults","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-results/-limelight-results.html","searchKeys":["LimelightResults","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightResults.LimelightResults"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Barcode.LimelightTarget_Barcode","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-barcode/-limelight-target_-barcode.html","searchKeys":["LimelightTarget_Barcode","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Barcode.LimelightTarget_Barcode"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.LimelightTarget_Classifier","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/-limelight-target_-classifier.html","searchKeys":["LimelightTarget_Classifier","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.LimelightTarget_Classifier"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.LimelightTarget_Detector","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/-limelight-target_-detector.html","searchKeys":["LimelightTarget_Detector","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.LimelightTarget_Detector"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.LimelightTarget_Fiducial","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/-limelight-target_-fiducial.html","searchKeys":["LimelightTarget_Fiducial","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.LimelightTarget_Fiducial"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.LimelightTarget_Retro","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/-limelight-target_-retro.html","searchKeys":["LimelightTarget_Retro","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.LimelightTarget_Retro"]},{"name":"constructor()","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.Results","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/-results.html","searchKeys":["Results","constructor()","frc.chargerlibexternal.limelight.LimelightHelpers.Results.Results"]},{"name":"constructor()","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK.LocalADStarAK","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/-local-a-d-star-a-k.html","searchKeys":["LocalADStarAK","constructor()","frc.chargerlibexternal.pathplanner.LocalADStarAK.LocalADStarAK"]},{"name":"constructor()","description":"frc.chargers.commands.commandbuilder.CommandBuilder.CommandBuilder","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/-command-builder.html","searchKeys":["CommandBuilder","constructor()","frc.chargers.commands.commandbuilder.CommandBuilder.CommandBuilder"]},{"name":"constructor()","description":"frc.chargers.framework.ChargerRobotContainer.ChargerRobotContainer","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/-charger-robot-container.html","searchKeys":["ChargerRobotContainer","constructor()","frc.chargers.framework.ChargerRobotContainer.ChargerRobotContainer"]},{"name":"constructor()","description":"frc.chargers.utils.MappableContext.MappableContext","location":"-charger-lib/frc.chargers.utils/-mappable-context/-mappable-context.html","searchKeys":["MappableContext","constructor()","frc.chargers.utils.MappableContext.MappableContext"]},{"name":"constructor(allowableError: ClosedRange<Quantity<D>>)","description":"frc.chargers.utils.Precision.Within.Within","location":"-charger-lib/frc.chargers.utils/-precision/-within/-within.html","searchKeys":["Within","constructor(allowableError: ClosedRange<Quantity<D>>)","frc.chargers.utils.Precision.Within.Within"]},{"name":"constructor(anglePID: PIDConstants, angleSetpointSupplier: SetpointSupplier<AngleDimension, VoltageDimension> = SetpointSupplier.Default(), modulePrecision: Precision<AngleDimension> = Precision.AllowOvershoot, velocityPID: PIDConstants, velocityFF: AngularMotorFFConstants, openLoopDiscretizationRate: Double = 2.0, closedLoopDiscretizationRate: Double = 1.0, robotRotationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), robotTranslationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), pathReplanConfig: ReplanningConfig = ReplanningConfig())","description":"frc.chargers.constants.drivetrain.SwerveControlData.SwerveControlData","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/-swerve-control-data.html","searchKeys":["SwerveControlData","constructor(anglePID: PIDConstants, angleSetpointSupplier: SetpointSupplier<AngleDimension, VoltageDimension> = SetpointSupplier.Default(), modulePrecision: Precision<AngleDimension> = Precision.AllowOvershoot, velocityPID: PIDConstants, velocityFF: AngularMotorFFConstants, openLoopDiscretizationRate: Double = 2.0, closedLoopDiscretizationRate: Double = 1.0, robotRotationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), robotTranslationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), pathReplanConfig: ReplanningConfig = ReplanningConfig())","frc.chargers.constants.drivetrain.SwerveControlData.SwerveControlData"]},{"name":"constructor(anglePerPulse: Angle, channelA: Int, channelB: Int, indexChannel: Int, reverseDirection: Boolean = false, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(anglePerPulse: Angle, channelA: Int, channelB: Int, indexChannel: Int, reverseDirection: Boolean = false, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(anglePerPulse: Angle, channelA: Int, channelB: Int, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(anglePerPulse: Angle, channelA: Int, channelB: Int, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(anglePerPulse: Angle, sourceA: DigitalSource, sourceB: DigitalSource, indexSource: DigitalSource, reverseDirection: Boolean, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(anglePerPulse: Angle, sourceA: DigitalSource, sourceB: DigitalSource, indexSource: DigitalSource, reverseDirection: Boolean, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(anglePerPulse: Angle, sourceA: DigitalSource, sourceB: DigitalSource, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(anglePerPulse: Angle, sourceA: DigitalSource, sourceB: DigitalSource, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(averageDepth: Int? = null, inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular.Regular","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-regular/-regular.html","searchKeys":["Regular","constructor(averageDepth: Int? = null, inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular.Regular"]},{"name":"constructor(beepOnBoot: Boolean? = null, dutyCycleClosedLoopRampPeriod: Time? = null, torqueClosedLoopRampPeriod: Time? = null, voltageClosedLoopRampPeriod: Time? = null, dutyCycleOpenLoopRampPeriod: Time? = null, torqueOpenLoopRampPeriod: Time? = null, voltageOpenLoopRampPeriod: Time? = null, statorCurrentLimitEnable: Boolean? = null, supplyCurrentLimitEnable: Boolean? = null, statorCurrentLimit: Current? = null, supplyCurrentLimit: Current? = null, supplyCurrentThreshold: Current? = null, supplyTimeThreshold: Time? = null, feedbackRemoteSensorID: Int? = null, feedbackRotorOffset: Angle? = null, feedbackSensorSource: FeedbackSensorSourceValue? = null, rotorToSensorRatio: Double? = null, sensorToMechanismRatio: Double? = null, forwardLimitEnable: Boolean? = null, forwardLimitAutosetPositionEnable: Boolean? = null, forwardLimitAutosetPositionValue: Angle? = null, forwardLimitRemoteSensorID: Int? = null, forwardLimitSource: ForwardLimitSourceValue? = null, forwardLimitType: ForwardLimitTypeValue? = null, reverseLimitEnable: Boolean? = null, reverseLimitAutosetPositionEnable: Boolean? = null, reverseLimitAutosetPositionValue: Angle? = null, reverseLimitRemoteSensorID: Int? = null, reverseLimitSource: ReverseLimitSourceValue? = null, reverseLimitType: ReverseLimitTypeValue? = null, neutralMode: NeutralModeValue? = null, inverted: Boolean? = null, dutyCycleNeutralDeadband: Double? = null, peakForwardDutyCycle: Double? = null, peakReverseDutyCycle: Double? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, peakForwardTorqueCurrent: Current? = null, peakReverseTorqueCurrent: Current? = null, torqueNeutralDeadband: Current? = null, peakForwardVoltage: Voltage? = null, peakReverseVoltage: Voltage? = null, supplyVoltageTimeConstant: Time? = null, positionUpdateFrequency: Frequency? = null, velocityUpdateFrequency: Frequency? = null, motorOutputUpdateFrequency: Frequency? = null, currentUpdateFrequency: Frequency? = null)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.ChargerTalonFXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/-charger-talon-f-x-configuration.html","searchKeys":["ChargerTalonFXConfiguration","constructor(beepOnBoot: Boolean? = null, dutyCycleClosedLoopRampPeriod: Time? = null, torqueClosedLoopRampPeriod: Time? = null, voltageClosedLoopRampPeriod: Time? = null, dutyCycleOpenLoopRampPeriod: Time? = null, torqueOpenLoopRampPeriod: Time? = null, voltageOpenLoopRampPeriod: Time? = null, statorCurrentLimitEnable: Boolean? = null, supplyCurrentLimitEnable: Boolean? = null, statorCurrentLimit: Current? = null, supplyCurrentLimit: Current? = null, supplyCurrentThreshold: Current? = null, supplyTimeThreshold: Time? = null, feedbackRemoteSensorID: Int? = null, feedbackRotorOffset: Angle? = null, feedbackSensorSource: FeedbackSensorSourceValue? = null, rotorToSensorRatio: Double? = null, sensorToMechanismRatio: Double? = null, forwardLimitEnable: Boolean? = null, forwardLimitAutosetPositionEnable: Boolean? = null, forwardLimitAutosetPositionValue: Angle? = null, forwardLimitRemoteSensorID: Int? = null, forwardLimitSource: ForwardLimitSourceValue? = null, forwardLimitType: ForwardLimitTypeValue? = null, reverseLimitEnable: Boolean? = null, reverseLimitAutosetPositionEnable: Boolean? = null, reverseLimitAutosetPositionValue: Angle? = null, reverseLimitRemoteSensorID: Int? = null, reverseLimitSource: ReverseLimitSourceValue? = null, reverseLimitType: ReverseLimitTypeValue? = null, neutralMode: NeutralModeValue? = null, inverted: Boolean? = null, dutyCycleNeutralDeadband: Double? = null, peakForwardDutyCycle: Double? = null, peakReverseDutyCycle: Double? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, peakForwardTorqueCurrent: Current? = null, peakReverseTorqueCurrent: Current? = null, torqueNeutralDeadband: Current? = null, peakForwardVoltage: Voltage? = null, peakReverseVoltage: Voltage? = null, supplyVoltageTimeConstant: Time? = null, positionUpdateFrequency: Frequency? = null, velocityUpdateFrequency: Frequency? = null, motorOutputUpdateFrequency: Frequency? = null, currentUpdateFrequency: Frequency? = null)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.ChargerTalonFXConfiguration"]},{"name":"constructor(cameraYaw: Angle)","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator.PoseEstimator","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/-pose-estimator/-pose-estimator.html","searchKeys":["PoseEstimator","constructor(cameraYaw: Angle)","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator.PoseEstimator"]},{"name":"constructor(canId: Int, canBus: String = \"rio\")","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.ChargerPigeon2","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-charger-pigeon2.html","searchKeys":["ChargerPigeon2","constructor(canId: Int, canBus: String = \"rio\")","frc.chargers.hardware.sensors.imu.ChargerPigeon2.ChargerPigeon2"]},{"name":"constructor(category: SparkAbsoluteEncoder.Type, averageDepth: Int? = null, inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.Absolute","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-absolute/-absolute.html","searchKeys":["Absolute","constructor(category: SparkAbsoluteEncoder.Type, averageDepth: Int? = null, inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.Absolute"]},{"name":"constructor(category: SparkAbsoluteEncoder.Type, averageDepth: Int? = null, inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.Absolute","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-absolute/-absolute.html","searchKeys":["Absolute","constructor(category: SparkAbsoluteEncoder.Type, averageDepth: Int? = null, inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.Absolute"]},{"name":"constructor(category: SparkMaxAlternateEncoder.Type, countsPerRev: Int, encoderMeasurementPeriod: Time? = null, averageDepth: Int? = null, inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.Alternate","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/-alternate.html","searchKeys":["Alternate","constructor(category: SparkMaxAlternateEncoder.Type, countsPerRev: Int, encoderMeasurementPeriod: Time? = null, averageDepth: Int? = null, inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.Alternate"]},{"name":"constructor(channel: Int)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder/-charger-duty-cycle-encoder.html","searchKeys":["ChargerDutyCycleEncoder","constructor(channel: Int)","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.ChargerDutyCycleEncoder"]},{"name":"constructor(channel: Int, fullRange: Angle, offset: Angle = 0.degrees)","description":"frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder.AnalogPotentiometerEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-analog-potentiometer-encoder/-analog-potentiometer-encoder.html","searchKeys":["AnalogPotentiometerEncoder","constructor(channel: Int, fullRange: Angle, offset: Angle = 0.degrees)","frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder.AnalogPotentiometerEncoder"]},{"name":"constructor(coefficients: List<Double>)","description":"frc.chargers.utils.math.equations.Polynomial.Polynomial","location":"-charger-lib/frc.chargers.utils.math.equations/-polynomial/-polynomial.html","searchKeys":["Polynomial","constructor(coefficients: List<Double>)","frc.chargers.utils.math.equations.Polynomial.Polynomial"]},{"name":"constructor(connectedFrequencyThreshold: Int? = null, dutyCycleRange: ClosedRange<Double>? = null, positionOffset: Double? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.DutyCycleEncoderConfiguration","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-duty-cycle-encoder-configuration/-duty-cycle-encoder-configuration.html","searchKeys":["DutyCycleEncoderConfiguration","constructor(connectedFrequencyThreshold: Int? = null, dutyCycleRange: ClosedRange<Double>? = null, positionOffset: Double? = null)","frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.DutyCycleEncoderConfiguration"]},{"name":"constructor(constraints: TrapezoidProfile.Constraints, feedforward: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward { Voltage(0.0) })","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.AngularTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/-angular-trapezoidal-setpoint-supplier.html","searchKeys":["AngularTrapezoidalSetpointSupplier","constructor(constraints: TrapezoidProfile.Constraints, feedforward: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward { Voltage(0.0) })","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.AngularTrapezoidalSetpointSupplier"]},{"name":"constructor(constraints: TrapezoidProfile.Constraints, feedforward: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) })","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.LinearTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/-linear-trapezoidal-setpoint-supplier.html","searchKeys":["LinearTrapezoidalSetpointSupplier","constructor(constraints: TrapezoidProfile.Constraints, feedforward: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) })","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.LinearTrapezoidalSetpointSupplier"]},{"name":"constructor(countsPerRev: Int, category: SparkFlexExternalEncoder.Type = SparkFlexExternalEncoder.Type.kQuadrature, encoderMeasurementPeriod: Time? = null, averageDepth: Int? = null, inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.External","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/-external.html","searchKeys":["External","constructor(countsPerRev: Int, category: SparkFlexExternalEncoder.Type = SparkFlexExternalEncoder.Type.kQuadrature, encoderMeasurementPeriod: Time? = null, averageDepth: Int? = null, inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.External"]},{"name":"constructor(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle)","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.TalonSRXEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/-talon-s-r-x-encoder-adapter.html","searchKeys":["TalonSRXEncoderAdapter","constructor(ctreMotorController: IMotorController, pidIndex: Int, anglePerPulse: Angle)","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.TalonSRXEncoderAdapter"]},{"name":"constructor(ctreMotorController: IMotorController, pidIndex: Int, pulsesPerRotation: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.TalonSRXEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/-talon-s-r-x-encoder-adapter.html","searchKeys":["TalonSRXEncoderAdapter","constructor(ctreMotorController: IMotorController, pidIndex: Int, pulsesPerRotation: Int)","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.TalonSRXEncoderAdapter"]},{"name":"constructor(dashKey: String = \"TunableValues\")","description":"frc.chargers.constants.tuning.DashboardTuner.DashboardTuner","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/-dashboard-tuner.html","searchKeys":["DashboardTuner","constructor(dashKey: String = \"TunableValues\")","frc.chargers.constants.tuning.DashboardTuner.DashboardTuner"]},{"name":"constructor(deviceId: Int)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.ChargerSparkFlex","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/-charger-spark-flex.html","searchKeys":["ChargerSparkFlex","constructor(deviceId: Int)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.ChargerSparkFlex"]},{"name":"constructor(deviceId: Int, canBus: String = \"\", factoryDefault: Boolean = true)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.ChargerCANcoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/-charger-c-a-ncoder.html","searchKeys":["ChargerCANcoder","constructor(deviceId: Int, canBus: String = \"\", factoryDefault: Boolean = true)","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.ChargerCANcoder"]},{"name":"constructor(deviceId: Int, type: CANSparkLowLevel.MotorType)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.ChargerSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/-charger-spark-max.html","searchKeys":["ChargerSparkMax","constructor(deviceId: Int, type: CANSparkLowLevel.MotorType)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.ChargerSparkMax"]},{"name":"constructor(deviceNumber: Int, canBus: String = \"rio\")","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.ChargerTalonFX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/-charger-talon-f-x.html","searchKeys":["ChargerTalonFX","constructor(deviceNumber: Int, canBus: String = \"rio\")","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.ChargerTalonFX"]},{"name":"constructor(deviceNumber: Int, encoderTicksPerRotation: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.ChargerTalonSRX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/-charger-talon-s-r-x.html","searchKeys":["ChargerTalonSRX","constructor(deviceNumber: Int, encoderTicksPerRotation: Int)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.ChargerTalonSRX"]},{"name":"constructor(distance: Distance, rotation: Rotation3d)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.UnitTranslation3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/-unit-translation3d.html","searchKeys":["UnitTranslation3d","constructor(distance: Distance, rotation: Rotation3d)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.UnitTranslation3d"]},{"name":"constructor(drivetrain: EncoderDifferentialDrivetrain, poseSuppliers: MutableList<VisionPoseSupplier> = mutableListOf(), startingPose: UnitPose2d = UnitPose2d())","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.DifferentialPoseMonitor","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/-differential-pose-monitor.html","searchKeys":["DifferentialPoseMonitor","constructor(drivetrain: EncoderDifferentialDrivetrain, poseSuppliers: MutableList<VisionPoseSupplier> = mutableListOf(), startingPose: UnitPose2d = UnitPose2d())","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.DifferentialPoseMonitor"]},{"name":"constructor(drivetrain: EncoderDifferentialDrivetrain, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.DifferentialPoseMonitor","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/-differential-pose-monitor.html","searchKeys":["DifferentialPoseMonitor","constructor(drivetrain: EncoderDifferentialDrivetrain, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.DifferentialPoseMonitor"]},{"name":"constructor(drivetrain: EncoderHolonomicDrivetrain, poseSuppliers: List<VisionPoseSupplier>, startingPose: UnitPose2d = UnitPose2d())","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.SwervePoseMonitor","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/-swerve-pose-monitor.html","searchKeys":["SwervePoseMonitor","constructor(drivetrain: EncoderHolonomicDrivetrain, poseSuppliers: List<VisionPoseSupplier>, startingPose: UnitPose2d = UnitPose2d())","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.SwervePoseMonitor"]},{"name":"constructor(drivetrain: EncoderHolonomicDrivetrain, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.SwervePoseMonitor","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/-swerve-pose-monitor.html","searchKeys":["SwervePoseMonitor","constructor(drivetrain: EncoderHolonomicDrivetrain, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.SwervePoseMonitor"]},{"name":"constructor(dutyCycle: DutyCycle)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder/-charger-duty-cycle-encoder.html","searchKeys":["ChargerDutyCycleEncoder","constructor(dutyCycle: DutyCycle)","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.ChargerDutyCycleEncoder"]},{"name":"constructor(encoderType: SparkFlexEncoderType? = null, idleMode: CANSparkBase.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Voltage? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFrameConfig: PeriodicFrameConfig? = null, smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlexConfiguration.ChargerSparkFlexConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex-configuration/-charger-spark-flex-configuration.html","searchKeys":["ChargerSparkFlexConfiguration","constructor(encoderType: SparkFlexEncoderType? = null, idleMode: CANSparkBase.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Voltage? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFrameConfig: PeriodicFrameConfig? = null, smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf())","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlexConfiguration.ChargerSparkFlexConfiguration"]},{"name":"constructor(encoderType: SparkMaxEncoderType? = null, idleMode: CANSparkBase.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Voltage? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFrameConfig: PeriodicFrameConfig? = null, smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMaxConfiguration.ChargerSparkMaxConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max-configuration/-charger-spark-max-configuration.html","searchKeys":["ChargerSparkMaxConfiguration","constructor(encoderType: SparkMaxEncoderType? = null, idleMode: CANSparkBase.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Voltage? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFrameConfig: PeriodicFrameConfig? = null, smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf())","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMaxConfiguration.ChargerSparkMaxConfiguration"]},{"name":"constructor(feedforward: Feedforward<I, O> = Feedforward{ Quantity(0.0) })","description":"frc.chargers.controls.SetpointSupplier.Default.Default","location":"-charger-lib/frc.chargers.controls/-setpoint-supplier/-default/-default.html","searchKeys":["Default","constructor(feedforward: Feedforward<I, O> = Feedforward{ Quantity(0.0) })","frc.chargers.controls.SetpointSupplier.Default.Default"]},{"name":"constructor(forwards: Boolean, data: FeedForwardCharacterizationData, voltageConsumer: Consumer<Double>, velocitySupplier: Supplier<Double>, requirements: Array<Subsystem>)","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.FeedForwardCharacterization","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/-feed-forward-characterization.html","searchKeys":["FeedForwardCharacterization","constructor(forwards: Boolean, data: FeedForwardCharacterizationData, voltageConsumer: Consumer<Double>, velocitySupplier: Supplier<Double>, requirements: Array<Subsystem>)","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.FeedForwardCharacterization"]},{"name":"constructor(forwards: Boolean, leftData: FeedForwardCharacterizationData, rightData: FeedForwardCharacterizationData, voltageConsumer: BiConsumer<Double, Double>, leftVelocitySupplier: Supplier<Double>, rightVelocitySupplier: Supplier<Double>, requirements: Array<Subsystem>)","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.FeedForwardCharacterization","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/-feed-forward-characterization.html","searchKeys":["FeedForwardCharacterization","constructor(forwards: Boolean, leftData: FeedForwardCharacterizationData, rightData: FeedForwardCharacterizationData, voltageConsumer: BiConsumer<Double, Double>, leftVelocitySupplier: Supplier<Double>, rightVelocitySupplier: Supplier<Double>, requirements: Array<Subsystem>)","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.FeedForwardCharacterization"]},{"name":"constructor(frames: MutableMap<CANSparkLowLevel.PeriodicFrame, Int>)","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom.Custom","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-custom/-custom.html","searchKeys":["Custom","constructor(frames: MutableMap<CANSparkLowLevel.PeriodicFrame, Int>)","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom.Custom"]},{"name":"constructor(futureProofConfigs: Boolean? = null, gyroScalarX: Angle? = null, gyroScalarY: Angle? = null, gyroScalarZ: Angle? = null, mountPosePitch: Angle? = null, mountPoseYaw: Angle? = null, mountPoseRoll: Angle? = null, disableNoMotionCalibration: Boolean? = null, disableTemperatureCompensation: Boolean? = null, enableCompass: Boolean? = null)","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.Pigeon2Configuration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/-pigeon2-configuration.html","searchKeys":["Pigeon2Configuration","constructor(futureProofConfigs: Boolean? = null, gyroScalarX: Angle? = null, gyroScalarY: Angle? = null, gyroScalarZ: Angle? = null, mountPosePitch: Angle? = null, mountPoseYaw: Angle? = null, mountPoseRoll: Angle? = null, disableNoMotionCalibration: Boolean? = null, disableTemperatureCompensation: Boolean? = null, enableCompass: Boolean? = null)","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.Pigeon2Configuration"]},{"name":"constructor(futureProofConfigs: Boolean? = null, sensorDirection: SensorDirectionValue? = null, absoluteSensorRange: AbsoluteSensorRangeValue? = null, magnetOffset: Angle? = null, filterVelocity: Boolean? = null, positionUpdateFrequency: Frequency? = null, velocityUpdateFrequency: Frequency? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.CANcoderConfiguration","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/-c-a-ncoder-configuration.html","searchKeys":["CANcoderConfiguration","constructor(futureProofConfigs: Boolean? = null, sensorDirection: SensorDirectionValue? = null, absoluteSensorRange: AbsoluteSensorRangeValue? = null, magnetOffset: Angle? = null, filterVelocity: Boolean? = null, positionUpdateFrequency: Frequency? = null, velocityUpdateFrequency: Frequency? = null)","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.CANcoderConfiguration"]},{"name":"constructor(get: () -> TriggerValue)","description":"frc.chargers.hardware.inputdevices.InputAxis.InputAxis","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/-input-axis.html","searchKeys":["InputAxis","constructor(get: () -> TriggerValue)","frc.chargers.hardware.inputdevices.InputAxis.InputAxis"]},{"name":"constructor(getRobotContainer: () -> ChargerRobotContainer, gitData: GitData, config: RobotConfig)","description":"frc.chargers.framework.ChargerRobot.ChargerRobot","location":"-charger-lib/frc.chargers.framework/-charger-robot/-charger-robot.html","searchKeys":["ChargerRobot","constructor(getRobotContainer: () -> ChargerRobotContainer, gitData: GitData, config: RobotConfig)","frc.chargers.framework.ChargerRobot.ChargerRobot"]},{"name":"constructor(group: String = \"Alerts\", text: String, type: Alert.AlertType)","description":"frc.chargers.wpilibextensions.Alert.Alert","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert.html","searchKeys":["Alert","constructor(group: String = \"Alerts\", text: String, type: Alert.AlertType)","frc.chargers.wpilibextensions.Alert.Alert"]},{"name":"constructor(idleMode: CANSparkBase.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Voltage? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFrameConfig: PeriodicFrameConfig? = null, smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.SparkConfigurationBase","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/-spark-configuration-base.html","searchKeys":["SparkConfigurationBase","constructor(idleMode: CANSparkBase.IdleMode? = null, inverted: Boolean? = null, voltageCompensationNominalVoltage: Voltage? = null, canTimeout: Time? = null, closedLoopRampRate: Double? = null, openLoopRampRate: Double? = null, controlFramePeriod: Time? = null, periodicFrameConfig: PeriodicFrameConfig? = null, smartCurrentLimit: SmartCurrentLimit? = null, secondaryCurrentLimit: SecondaryCurrentLimit? = null, softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle> = mutableMapOf())","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.SparkConfigurationBase"]},{"name":"constructor(index: Int, logInputs: LoggableInputsProvider)","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.ApriltagPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/-apriltag-pipeline.html","searchKeys":["ApriltagPipeline","constructor(index: Int, logInputs: LoggableInputsProvider)","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.ApriltagPipeline"]},{"name":"constructor(index: Int, logInputs: LoggableInputsProvider)","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.MLClassifierPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-classifier-pipeline/-m-l-classifier-pipeline.html","searchKeys":["MLClassifierPipeline","constructor(index: Int, logInputs: LoggableInputsProvider)","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.MLClassifierPipeline"]},{"name":"constructor(index: Int, logInputs: LoggableInputsProvider)","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.MLDetectorPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-detector-pipeline/-m-l-detector-pipeline.html","searchKeys":["MLDetectorPipeline","constructor(index: Int, logInputs: LoggableInputsProvider)","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.MLDetectorPipeline"]},{"name":"constructor(index: Int, logInputs: LoggableInputsProvider)","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.ApriltagPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/-apriltag-pipeline.html","searchKeys":["ApriltagPipeline","constructor(index: Int, logInputs: LoggableInputsProvider)","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.ApriltagPipeline"]},{"name":"constructor(index: Int, logInputs: LoggableInputsProvider)","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.ColorPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/-color-pipeline.html","searchKeys":["ColorPipeline","constructor(index: Int, logInputs: LoggableInputsProvider)","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.ColorPipeline"]},{"name":"constructor(initial: UnitPose2d, last: UnitPose2d)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/-unit-transform2d.html","searchKeys":["UnitTransform2d","constructor(initial: UnitPose2d, last: UnitPose2d)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d"]},{"name":"constructor(input: AnalogInput, fullRange: Angle, offset: Angle = 0.degrees)","description":"frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder.AnalogPotentiometerEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-analog-potentiometer-encoder/-analog-potentiometer-encoder.html","searchKeys":["AnalogPotentiometerEncoder","constructor(input: AnalogInput, fullRange: Angle, offset: Angle = 0.degrees)","frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder.AnalogPotentiometerEncoder"]},{"name":"constructor(invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance)","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.DiffDriveHardwareData","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/-diff-drive-hardware-data.html","searchKeys":["DiffDriveHardwareData","constructor(invertMotors: Boolean = false, gearRatio: Double = DEFAULT_GEAR_RATIO, wheelDiameter: Length, width: Distance)","frc.chargers.constants.drivetrain.DiffDriveHardwareData.DiffDriveHardwareData"]},{"name":"constructor(invertTurnMotors: Boolean = false, turnGearRatio: Double = DEFAULT_GEAR_RATIO, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA, maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, wheelDiameter: Length, trackWidth: Distance, wheelBase: Distance)","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.SwerveHardwareData","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/-swerve-hardware-data.html","searchKeys":["SwerveHardwareData","constructor(invertTurnMotors: Boolean = false, turnGearRatio: Double = DEFAULT_GEAR_RATIO, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA, maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, wheelDiameter: Length, trackWidth: Distance, wheelBase: Distance)","frc.chargers.constants.drivetrain.SwerveHardwareData.SwerveHardwareData"]},{"name":"constructor(inverted: Boolean? = null, invertSensorPhase: Boolean? = null, expiration: Time? = null, safetyEnabled: Boolean? = null, openLoopRampTimeFromNeutralToFull: Time? = null, closedLoopRampTimeFromNeutralToFull: Time? = null, peakOutputForwardPercent: Double? = null, peakOutputReversePercent: Double? = null, nominalOutputForwardPercent: Double? = null, nominalOutputReversePercent: Double? = null, neutralDeadbandPercent: Double? = null, voltageCompensationSaturationVoltage: Voltage? = null, voltageMeasurementFilterSamples: Int? = null, voltageCompensationEnabled: Boolean? = null, selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), forwardLimitSwitchSource: LimitSwitchConfig? = null, reverseLimitSwitchSource: LimitSwitchConfig? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf())","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.ChargerTalonSRXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/-charger-talon-s-r-x-configuration.html","searchKeys":["ChargerTalonSRXConfiguration","constructor(inverted: Boolean? = null, invertSensorPhase: Boolean? = null, expiration: Time? = null, safetyEnabled: Boolean? = null, openLoopRampTimeFromNeutralToFull: Time? = null, closedLoopRampTimeFromNeutralToFull: Time? = null, peakOutputForwardPercent: Double? = null, peakOutputReversePercent: Double? = null, nominalOutputForwardPercent: Double? = null, nominalOutputReversePercent: Double? = null, neutralDeadbandPercent: Double? = null, voltageCompensationSaturationVoltage: Voltage? = null, voltageMeasurementFilterSamples: Int? = null, voltageCompensationEnabled: Boolean? = null, selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), forwardLimitSwitchSource: LimitSwitchConfig? = null, reverseLimitSwitchSource: LimitSwitchConfig? = null, forwardSoftLimitThreshold: Angle? = null, reverseSoftLimitThreshold: Angle? = null, forwardSoftLimitEnable: Boolean? = null, reverseSoftLimitEnable: Boolean? = null, customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf())","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.ChargerTalonSRXConfiguration"]},{"name":"constructor(kP: Double, kI: Double, kD: Double)","description":"frc.chargers.controls.pid.PIDConstants.PIDConstants","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/-p-i-d-constants.html","searchKeys":["PIDConstants","constructor(kP: Double, kI: Double, kD: Double)","frc.chargers.controls.pid.PIDConstants.PIDConstants"]},{"name":"constructor(kS: Voltage, kG: Voltage, kV: VoltagePerVelocity, kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.ElevatorFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/-elevator-f-f-constants.html","searchKeys":["ElevatorFFConstants","constructor(kS: Voltage, kG: Voltage, kV: VoltagePerVelocity, kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","frc.chargers.controls.feedforward.ElevatorFFConstants.ElevatorFFConstants"]},{"name":"constructor(kS: Voltage, kG: VoltagePerAngle, kV: VoltagePerAngularVelocity, kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","description":"frc.chargers.controls.feedforward.ArmFFConstants.ArmFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/-arm-f-f-constants.html","searchKeys":["ArmFFConstants","constructor(kS: Voltage, kG: VoltagePerAngle, kV: VoltagePerAngularVelocity, kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","frc.chargers.controls.feedforward.ArmFFConstants.ArmFFConstants"]},{"name":"constructor(kS: Voltage, kV: VoltagePerAngularVelocity, kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.AngularMotorFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/-angular-motor-f-f-constants.html","searchKeys":["AngularMotorFFConstants","constructor(kS: Voltage, kV: VoltagePerAngularVelocity, kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","frc.chargers.controls.feedforward.AngularMotorFFConstants.AngularMotorFFConstants"]},{"name":"constructor(kS: Voltage, kV: VoltagePerVelocity, kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.LinearMotorFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/-linear-motor-f-f-constants.html","searchKeys":["LinearMotorFFConstants","constructor(kS: Voltage, kV: VoltagePerVelocity, kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","frc.chargers.controls.feedforward.LinearMotorFFConstants.LinearMotorFFConstants"]},{"name":"constructor(kStatus0: Int? = null, kStatus1: Int? = null, kStatus2: Int? = null, kStatus3: Int? = null, kStatus4: Int? = null, kStatus5: Int? = null, kStatus6: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom.Custom","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-custom/-custom.html","searchKeys":["Custom","constructor(kStatus0: Int? = null, kStatus1: Int? = null, kStatus2: Int? = null, kStatus3: Int? = null, kStatus4: Int? = null, kStatus5: Int? = null, kStatus6: Int? = null)","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom.Custom"]},{"name":"constructor(leftMotors: MotorController, rightMotors: MotorController, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0)","description":"frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.BasicDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-basic-differential-drivetrain/-basic-differential-drivetrain.html","searchKeys":["BasicDifferentialDrivetrain","constructor(leftMotors: MotorController, rightMotors: MotorController, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0)","frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.BasicDifferentialDrivetrain"]},{"name":"constructor(leftVelocityPID: PIDConstants, leftFF: AngularMotorFFConstants, rightVelocityPID: PIDConstants, rightFF: AngularMotorFFConstants, robotRotationPID: PIDConstants = PIDConstants(0.4,0.0,0.0), pathAlgorithm: DiffDriveControlData.PathAlgorithm = PathAlgorithm.LTV, pathReplanConfig: ReplanningConfig = ReplanningConfig())","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.DiffDriveControlData","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-diff-drive-control-data.html","searchKeys":["DiffDriveControlData","constructor(leftVelocityPID: PIDConstants, leftFF: AngularMotorFFConstants, rightVelocityPID: PIDConstants, rightFF: AngularMotorFFConstants, robotRotationPID: PIDConstants = PIDConstants(0.4,0.0,0.0), pathAlgorithm: DiffDriveControlData.PathAlgorithm = PathAlgorithm.LTV, pathReplanConfig: ReplanningConfig = ReplanningConfig())","frc.chargers.constants.drivetrain.DiffDriveControlData.DiffDriveControlData"]},{"name":"constructor(limit: Current, chopCycles: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit.SecondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-secondary-current-limit/-secondary-current-limit.html","searchKeys":["SecondaryCurrentLimit","constructor(limit: Current, chopCycles: Int? = null)","frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit.SecondaryCurrentLimit"]},{"name":"constructor(logInputs: LoggableInputsProvider, controlData: SwerveControlData, turnMotor: SmartEncoderMotorController, turnEncoder: PositionEncoder, driveMotor: SmartEncoderMotorController, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnGearRatio: Double = DEFAULT_GEAR_RATIO)","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.OnboardPIDSwerveModule","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/-onboard-p-i-d-swerve-module.html","searchKeys":["OnboardPIDSwerveModule","constructor(logInputs: LoggableInputsProvider, controlData: SwerveControlData, turnMotor: SmartEncoderMotorController, turnEncoder: PositionEncoder, driveMotor: SmartEncoderMotorController, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnGearRatio: Double = DEFAULT_GEAR_RATIO)","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.OnboardPIDSwerveModule"]},{"name":"constructor(logInputs: LoggableInputsProvider, motors: DifferentialDrivetrainSim.KitbotMotor)","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.DiffDriveIOSim","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/-diff-drive-i-o-sim.html","searchKeys":["DiffDriveIOSim","constructor(logInputs: LoggableInputsProvider, motors: DifferentialDrivetrainSim.KitbotMotor)","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.DiffDriveIOSim"]},{"name":"constructor(logInputs: LoggableInputsProvider, topLeft: EncoderMotorController, topRight: EncoderMotorController, bottomLeft: EncoderMotorController, bottomRight: EncoderMotorController)","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.DiffDriveIOReal","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/-diff-drive-i-o-real.html","searchKeys":["DiffDriveIOReal","constructor(logInputs: LoggableInputsProvider, topLeft: EncoderMotorController, topRight: EncoderMotorController, bottomLeft: EncoderMotorController, bottomRight: EncoderMotorController)","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.DiffDriveIOReal"]},{"name":"constructor(logInputs: LoggableInputsProvider, turnGearbox: DCMotor, driveGearbox: DCMotor, turnGearRatio: Double = DEFAULT_GEAR_RATIO, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA)","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.ModuleIOSim","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/-module-i-o-sim.html","searchKeys":["ModuleIOSim","constructor(logInputs: LoggableInputsProvider, turnGearbox: DCMotor, driveGearbox: DCMotor, turnGearRatio: Double = DEFAULT_GEAR_RATIO, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA)","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.ModuleIOSim"]},{"name":"constructor(logInputs: LoggableInputsProvider, turnMotor: EncoderMotorController, turnEncoder: PositionEncoder, driveMotor: EncoderMotorController, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnGearRatio: Double = DEFAULT_GEAR_RATIO)","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.ModuleIOReal","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/-module-i-o-real.html","searchKeys":["ModuleIOReal","constructor(logInputs: LoggableInputsProvider, turnMotor: EncoderMotorController, turnEncoder: PositionEncoder, driveMotor: EncoderMotorController, driveGearRatio: Double = DEFAULT_GEAR_RATIO, turnGearRatio: Double = DEFAULT_GEAR_RATIO)","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.ModuleIOReal"]},{"name":"constructor(lowLevel: DiffDriveIO, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.EncoderDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/-encoder-differential-drivetrain.html","searchKeys":["EncoderDifferentialDrivetrain","constructor(lowLevel: DiffDriveIO, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.EncoderDifferentialDrivetrain"]},{"name":"constructor(lowLevel: ModuleIO, controlData: SwerveControlData)","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.RioPIDSwerveModule","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/-rio-p-i-d-swerve-module.html","searchKeys":["RioPIDSwerveModule","constructor(lowLevel: ModuleIO, controlData: SwerveControlData)","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.RioPIDSwerveModule"]},{"name":"constructor(margin: Quantity<D>)","description":"frc.chargers.utils.Precision.Within.Within","location":"-charger-lib/frc.chargers.utils/-precision/-within/-within.html","searchKeys":["Within","constructor(margin: Quantity<D>)","frc.chargers.utils.Precision.Within.Within"]},{"name":"constructor(maxVelocity: AngularVelocity, maxAcceleration: AngularAcceleration)","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.AngularMotionConstraints","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/-angular-motion-constraints.html","searchKeys":["AngularMotionConstraints","constructor(maxVelocity: AngularVelocity, maxAcceleration: AngularAcceleration)","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.AngularMotionConstraints"]},{"name":"constructor(maxVelocity: AngularVelocity, maxAcceleration: AngularAcceleration, feedforward: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward { Voltage(0.0) })","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.AngularTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/-angular-trapezoidal-setpoint-supplier.html","searchKeys":["AngularTrapezoidalSetpointSupplier","constructor(maxVelocity: AngularVelocity, maxAcceleration: AngularAcceleration, feedforward: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward { Voltage(0.0) })","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.AngularTrapezoidalSetpointSupplier"]},{"name":"constructor(maxVelocity: Velocity, maxAcceleration: Acceleration)","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.LinearMotionConstraints","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/-linear-motion-constraints.html","searchKeys":["LinearMotionConstraints","constructor(maxVelocity: Velocity, maxAcceleration: Acceleration)","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.LinearMotionConstraints"]},{"name":"constructor(maxVelocity: Velocity, maxAcceleration: Acceleration, feedforward: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) })","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.LinearTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/-linear-trapezoidal-setpoint-supplier.html","searchKeys":["LinearTrapezoidalSetpointSupplier","constructor(maxVelocity: Velocity, maxAcceleration: Acceleration, feedforward: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) })","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.LinearTrapezoidalSetpointSupplier"]},{"name":"constructor(motorController: TalonFX)","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.TalonFXEncoderAdapter","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-encoder-adapter/-talon-f-x-encoder-adapter.html","searchKeys":["TalonFXEncoderAdapter","constructor(motorController: TalonFX)","frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.TalonFXEncoderAdapter"]},{"name":"constructor(name: String = \"limelight\", useJsonDump: Boolean = false, lensHeight: Distance, mountAngle: Angle, defaultDriverStationIfUnavailable: DriverStation.Alliance = DriverStation.Alliance.Blue)","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ChargerLimelight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-charger-limelight.html","searchKeys":["ChargerLimelight","constructor(name: String = \"limelight\", useJsonDump: Boolean = false, lensHeight: Distance, mountAngle: Angle, defaultDriverStationIfUnavailable: DriverStation.Alliance = DriverStation.Alliance.Blue)","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ChargerLimelight"]},{"name":"constructor(name: String)","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData.FeedForwardCharacterizationData","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization-data/-feed-forward-characterization-data.html","searchKeys":["FeedForwardCharacterizationData","constructor(name: String)","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData.FeedForwardCharacterizationData"]},{"name":"constructor(name: String, lensHeight: Distance, mountAngle: Angle)","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ChargerPhotonCam","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-charger-photon-cam.html","searchKeys":["ChargerPhotonCam","constructor(name: String, lensHeight: Distance, mountAngle: Angle)","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ChargerPhotonCam"]},{"name":"constructor(namespace: String, updateInputs: Boolean = true, runBeforeInputUpdate: () -> Unit? = null, runAfterInputUpdate: () -> Unit? = null)","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.LoggableInputsProvider","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/-loggable-inputs-provider.html","searchKeys":["LoggableInputsProvider","constructor(namespace: String, updateInputs: Boolean = true, runBeforeInputUpdate: () -> Unit? = null, runAfterInputUpdate: () -> Unit? = null)","frc.chargers.advantagekitextensions.LoggableInputsProvider.LoggableInputsProvider"]},{"name":"constructor(optimizeEncoderFrames: Boolean = true, utilizedData: List<MotorData> = listOf(MotorData.POSITION, MotorData.VELOCITY, MotorData.VOLTAGE, MotorData.TEMPERATURE))","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized.Optimized","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-optimized/-optimized.html","searchKeys":["Optimized","constructor(optimizeEncoderFrames: Boolean = true, utilizedData: List<MotorData> = listOf(MotorData.POSITION, MotorData.VELOCITY, MotorData.VOLTAGE, MotorData.TEMPERATURE))","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized.Optimized"]},{"name":"constructor(optimizeStatusFrames: Boolean = true, category: SparkRelativeEncoder.Type = SparkRelativeEncoder.Type.kHallSensor, averageDepth: Int? = null, inverted: Boolean? = null)","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.Regular","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-regular/-regular.html","searchKeys":["Regular","constructor(optimizeStatusFrames: Boolean = true, category: SparkRelativeEncoder.Type = SparkRelativeEncoder.Type.kHallSensor, averageDepth: Int? = null, inverted: Boolean? = null)","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.Regular"]},{"name":"constructor(pidConstants: PIDConstants, getInput: () -> Quantity<I>, target: Quantity<I>, setpointSupplier: SetpointSupplier<I, O> = SetpointSupplier.Default(), continuousInputRange: ClosedRange<Quantity<I>>? = null, outputRange: ClosedRange<Quantity<O>> = Quantity<O>(Double.NEGATIVE_INFINITY)..Quantity(Double.POSITIVE_INFINITY), errorTolerance: Precision<I> = Precision.AllowOvershoot, selfSustain: Boolean = false)","description":"frc.chargers.controls.pid.SuperPIDController.SuperPIDController","location":"-charger-lib/frc.chargers.controls.pid/-super-p-i-d-controller/-super-p-i-d-controller.html","searchKeys":["SuperPIDController","constructor(pidConstants: PIDConstants, getInput: () -> Quantity<I>, target: Quantity<I>, setpointSupplier: SetpointSupplier<I, O> = SetpointSupplier.Default(), continuousInputRange: ClosedRange<Quantity<I>>? = null, outputRange: ClosedRange<Quantity<O>> = Quantity<O>(Double.NEGATIVE_INFINITY)..Quantity(Double.POSITIVE_INFINITY), errorTolerance: Precision<I> = Precision.AllowOvershoot, selfSustain: Boolean = false)","frc.chargers.controls.pid.SuperPIDController.SuperPIDController"]},{"name":"constructor(profileConstraints: AngularMotionConstraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State())","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.AngularTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/-angular-trapezoidal-setpoint-supplier.html","searchKeys":["AngularTrapezoidalSetpointSupplier","constructor(profileConstraints: AngularMotionConstraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State())","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.AngularTrapezoidalSetpointSupplier"]},{"name":"constructor(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0))","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.AngularExponentialSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/-angular-exponential-setpoint-supplier.html","searchKeys":["AngularExponentialSetpointSupplier","constructor(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<AngularVelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0))","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.AngularExponentialSetpointSupplier"]},{"name":"constructor(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0))","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.LinearExponentialSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/-linear-exponential-setpoint-supplier.html","searchKeys":["LinearExponentialSetpointSupplier","constructor(profileConstraints: ExponentialProfile.Constraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension>, startingState: ExponentialProfile.State = State(0.0,0.0))","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.LinearExponentialSetpointSupplier"]},{"name":"constructor(profileConstraints: LinearMotionConstraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State())","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.LinearTrapezoidalSetpointSupplier","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/-linear-trapezoidal-setpoint-supplier.html","searchKeys":["LinearTrapezoidalSetpointSupplier","constructor(profileConstraints: LinearMotionConstraints, velocityTargetFF: Feedforward<VelocityDimension, VoltageDimension> = Feedforward{ Voltage(0.0) }, startingState: TrapezoidProfile.State = State())","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.LinearTrapezoidalSetpointSupplier"]},{"name":"constructor(projectName: String, buildDate: String, sha: String, branch: String, dirty: Int)","description":"frc.chargers.framework.GitData.GitData","location":"-charger-lib/frc.chargers.framework/-git-data/-git-data.html","searchKeys":["GitData","constructor(projectName: String, buildDate: String, sha: String, branch: String, dirty: Int)","frc.chargers.framework.GitData.GitData"]},{"name":"constructor(pulsesPerRotation: Float, channelA: Int, channelB: Int, indexChannel: Int, reverseDirection: Boolean = false, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(pulsesPerRotation: Float, channelA: Int, channelB: Int, indexChannel: Int, reverseDirection: Boolean = false, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(pulsesPerRotation: Float, channelA: Int, channelB: Int, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(pulsesPerRotation: Float, channelA: Int, channelB: Int, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(pulsesPerRotation: Float, sourceA: DigitalSource, sourceB: DigitalSource, indexSource: DigitalSource, reverseDirection: Boolean, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(pulsesPerRotation: Float, sourceA: DigitalSource, sourceB: DigitalSource, indexSource: DigitalSource, reverseDirection: Boolean, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(pulsesPerRotation: Float, sourceA: DigitalSource, sourceB: DigitalSource, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/-charger-quad-encoder.html","searchKeys":["ChargerQuadEncoder","constructor(pulsesPerRotation: Float, sourceA: DigitalSource, sourceB: DigitalSource, reverseDirection: Boolean = false, encodingType: CounterBase.EncodingType = EncodingType.k4X, configure: QuadEncoderConfiguration.() -> Unit? = null)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.ChargerQuadEncoder"]},{"name":"constructor(revEncoder: MotorFeedbackSensor)","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.SparkEncoderAdaptor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-encoder-adaptor/-spark-encoder-adaptor.html","searchKeys":["SparkEncoderAdaptor","constructor(revEncoder: MotorFeedbackSensor)","frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.SparkEncoderAdaptor"]},{"name":"constructor(robotToCamera: UnitTransform3d, fieldTags: AprilTagFieldLayout, strategy: PhotonPoseEstimator.PoseStrategy = PoseStrategy.MULTI_TAG_PNP_ON_COPROCESSOR)","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator.PoseEstimator","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/-pose-estimator/-pose-estimator.html","searchKeys":["PoseEstimator","constructor(robotToCamera: UnitTransform3d, fieldTags: AprilTagFieldLayout, strategy: PhotonPoseEstimator.PoseStrategy = PoseStrategy.MULTI_TAG_PNP_ON_COPROCESSOR)","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator.PoseEstimator"]},{"name":"constructor(samplesPerAverage: Int? = null, simDevice: SimDevice? = null, reverseDirection: Boolean? = null)","description":"frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.QuadEncoderConfiguration","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-quad-encoder-configuration/-quad-encoder-configuration.html","searchKeys":["QuadEncoderConfiguration","constructor(samplesPerAverage: Int? = null, simDevice: SimDevice? = null, reverseDirection: Boolean? = null)","frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.QuadEncoderConfiguration"]},{"name":"constructor(siValue: Pose2d = Pose2d())","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.UnitPose2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/-unit-pose2d.html","searchKeys":["UnitPose2d","constructor(siValue: Pose2d = Pose2d())","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.UnitPose2d"]},{"name":"constructor(siValue: Pose3d = Pose3d())","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.UnitPose3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/-unit-pose3d.html","searchKeys":["UnitPose3d","constructor(siValue: Pose3d = Pose3d())","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.UnitPose3d"]},{"name":"constructor(siValue: Transform2d = Transform2d())","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/-unit-transform2d.html","searchKeys":["UnitTransform2d","constructor(siValue: Transform2d = Transform2d())","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d"]},{"name":"constructor(siValue: Transform3d = Transform3d())","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.UnitTransform3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/-unit-transform3d.html","searchKeys":["UnitTransform3d","constructor(siValue: Transform3d = Transform3d())","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.UnitTransform3d"]},{"name":"constructor(siValue: Translation2d = Translation2d())","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.UnitTranslation2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/-unit-translation2d.html","searchKeys":["UnitTranslation2d","constructor(siValue: Translation2d = Translation2d())","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.UnitTranslation2d"]},{"name":"constructor(siValue: Translation3d = Translation3d())","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.UnitTranslation3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/-unit-translation3d.html","searchKeys":["UnitTranslation3d","constructor(siValue: Translation3d = Translation3d())","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.UnitTranslation3d"]},{"name":"constructor(siValue: TrapezoidProfile.Constraints)","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.AngularMotionConstraints","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/-angular-motion-constraints.html","searchKeys":["AngularMotionConstraints","constructor(siValue: TrapezoidProfile.Constraints)","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.AngularMotionConstraints"]},{"name":"constructor(siValue: TrapezoidProfile.Constraints)","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.LinearMotionConstraints","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/-linear-motion-constraints.html","searchKeys":["LinearMotionConstraints","constructor(siValue: TrapezoidProfile.Constraints)","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.LinearMotionConstraints"]},{"name":"constructor(source: DigitalSource)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder/-charger-duty-cycle-encoder.html","searchKeys":["ChargerDutyCycleEncoder","constructor(source: DigitalSource)","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.ChargerDutyCycleEncoder"]},{"name":"constructor(stallLimit: Current, freeLimit: Current? = null, limitSpeed: AngularVelocity? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.SmartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-smart-current-limit/-smart-current-limit.html","searchKeys":["SmartCurrentLimit","constructor(stallLimit: Current, freeLimit: Current? = null, limitSpeed: AngularVelocity? = null)","frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.SmartCurrentLimit"]},{"name":"constructor(stateStdDevs: Matrix<N3, N1>)","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.MechanicalAdvantagePoseEstimator","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/-mechanical-advantage-pose-estimator.html","searchKeys":["MechanicalAdvantagePoseEstimator","constructor(stateStdDevs: Matrix<N3, N1>)","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.MechanicalAdvantagePoseEstimator"]},{"name":"constructor(timestamp: Time, bestTarget: R, otherTargets: List<R>)","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData.NonLoggableVisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/-non-loggable-vision-data.html","searchKeys":["NonLoggableVisionData","constructor(timestamp: Time, bestTarget: R, otherTargets: List<R>)","frc.chargers.hardware.sensors.vision.NonLoggableVisionData.NonLoggableVisionData"]},{"name":"constructor(timestamp: Time, bestTarget: R, otherTargets: List<R>)","description":"frc.chargers.hardware.sensors.vision.VisionData.VisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-data/-vision-data.html","searchKeys":["VisionData","constructor(timestamp: Time, bestTarget: R, otherTargets: List<R>)","frc.chargers.hardware.sensors.vision.VisionData.VisionData"]},{"name":"constructor(timestamp: Time, bestTarget: R, vararg otherTargets: R)","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData.NonLoggableVisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/-non-loggable-vision-data.html","searchKeys":["NonLoggableVisionData","constructor(timestamp: Time, bestTarget: R, vararg otherTargets: R)","frc.chargers.hardware.sensors.vision.NonLoggableVisionData.NonLoggableVisionData"]},{"name":"constructor(timestamp: Time, bestTarget: R, vararg otherTargets: R)","description":"frc.chargers.hardware.sensors.vision.VisionData.VisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-data/-vision-data.html","searchKeys":["VisionData","constructor(timestamp: Time, bestTarget: R, vararg otherTargets: R)","frc.chargers.hardware.sensors.vision.VisionData.VisionData"]},{"name":"constructor(topLeft: E, topRight: E, bottomLeft: E, bottomRight: E)","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.SwerveEncoders","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/-swerve-encoders.html","searchKeys":["SwerveEncoders","constructor(topLeft: E, topRight: E, bottomLeft: E, bottomRight: E)","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.SwerveEncoders"]},{"name":"constructor(topLeft: M, topRight: M, bottomLeft: M, bottomRight: M)","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.SwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/-swerve-motors.html","searchKeys":["SwerveMotors","constructor(topLeft: M, topRight: M, bottomLeft: M, bottomRight: M)","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.SwerveMotors"]},{"name":"constructor(topLeft: SwerveModule, topRight: SwerveModule, bottomLeft: SwerveModule, bottomRight: SwerveModule, hardwareData: SwerveHardwareData, controlData: SwerveControlData, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.EncoderHolonomicDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/-encoder-holonomic-drivetrain.html","searchKeys":["EncoderHolonomicDrivetrain","constructor(topLeft: SwerveModule, topRight: SwerveModule, bottomLeft: SwerveModule, bottomRight: SwerveModule, hardwareData: SwerveHardwareData, controlData: SwerveControlData, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier)","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.EncoderHolonomicDrivetrain"]},{"name":"constructor(topLeftDistance: Distance = Distance(0.0), topRightDistance: Distance = Distance(0.0), bottomLeftDistance: Distance = Distance(0.0), bottomRightDistance: Distance = Distance(0.0), topLeftAngle: Angle = Angle(0.0), topRightAngle: Angle = Angle(0.0), bottomLeftAngle: Angle = Angle(0.0), bottomRightAngle: Angle = Angle(0.0))","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.ModulePositionGroup","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/-module-position-group.html","searchKeys":["ModulePositionGroup","constructor(topLeftDistance: Distance = Distance(0.0), topRightDistance: Distance = Distance(0.0), bottomLeftDistance: Distance = Distance(0.0), bottomRightDistance: Distance = Distance(0.0), topLeftAngle: Angle = Angle(0.0), topRightAngle: Angle = Angle(0.0), bottomLeftAngle: Angle = Angle(0.0), bottomRightAngle: Angle = Angle(0.0))","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.ModulePositionGroup"]},{"name":"constructor(topLeftPosition: SwerveModulePosition, topRightPosition: SwerveModulePosition, bottomLeftPosition: SwerveModulePosition, bottomRightPosition: SwerveModulePosition)","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.ModulePositionGroup","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/-module-position-group.html","searchKeys":["ModulePositionGroup","constructor(topLeftPosition: SwerveModulePosition, topRightPosition: SwerveModulePosition, bottomLeftPosition: SwerveModulePosition, bottomRightPosition: SwerveModulePosition)","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.ModulePositionGroup"]},{"name":"constructor(topLeftSpeed: Velocity = Velocity(0.0), topRightSpeed: Velocity = Velocity(0.0), bottomLeftSpeed: Velocity = Velocity(0.0), bottomRightSpeed: Velocity = Velocity(0.0), topLeftAngle: Angle = Angle(0.0), topRightAngle: Angle = Angle(0.0), bottomLeftAngle: Angle = Angle(0.0), bottomRightAngle: Angle = Angle(0.0))","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.ModuleStateGroup","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/-module-state-group.html","searchKeys":["ModuleStateGroup","constructor(topLeftSpeed: Velocity = Velocity(0.0), topRightSpeed: Velocity = Velocity(0.0), bottomLeftSpeed: Velocity = Velocity(0.0), bottomRightSpeed: Velocity = Velocity(0.0), topLeftAngle: Angle = Angle(0.0), topRightAngle: Angle = Angle(0.0), bottomLeftAngle: Angle = Angle(0.0), bottomRightAngle: Angle = Angle(0.0))","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.ModuleStateGroup"]},{"name":"constructor(topLeftState: SwerveModuleState, topRightState: SwerveModuleState, bottomLeftState: SwerveModuleState, bottomRightState: SwerveModuleState)","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.ModuleStateGroup","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/-module-state-group.html","searchKeys":["ModuleStateGroup","constructor(topLeftState: SwerveModuleState, topRightState: SwerveModuleState, bottomLeftState: SwerveModuleState, bottomRightState: SwerveModuleState)","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.ModuleStateGroup"]},{"name":"constructor(totalDriverCams: Int = 1, defaultResWidth: Int, defaultResHeight: Int)","description":"frc.chargers.hardware.sensors.vision.DriverCameraView.DriverCameraView","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-driver-camera-view/-driver-camera-view.html","searchKeys":["DriverCameraView","constructor(totalDriverCams: Int = 1, defaultResWidth: Int, defaultResHeight: Int)","frc.chargers.hardware.sensors.vision.DriverCameraView.DriverCameraView"]},{"name":"constructor(translation: UnitTranslation2d, rotation: Angle)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.UnitPose2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/-unit-pose2d.html","searchKeys":["UnitPose2d","constructor(translation: UnitTranslation2d, rotation: Angle)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.UnitPose2d"]},{"name":"constructor(translation: UnitTranslation2d, rotation: Angle)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/-unit-transform2d.html","searchKeys":["UnitTransform2d","constructor(translation: UnitTranslation2d, rotation: Angle)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d"]},{"name":"constructor(translation: UnitTranslation3d, rotation: Rotation3d)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.UnitPose3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/-unit-pose3d.html","searchKeys":["UnitPose3d","constructor(translation: UnitTranslation3d, rotation: Rotation3d)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.UnitPose3d"]},{"name":"constructor(translation: UnitTranslation3d, rotation: Rotation3d)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.UnitTransform3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/-unit-transform3d.html","searchKeys":["UnitTransform3d","constructor(translation: UnitTranslation3d, rotation: Rotation3d)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.UnitTransform3d"]},{"name":"constructor(tuningMode: Boolean, isReplay: Boolean, hardwareConfigRetryLimit: Int = 3, extraLoggerConfig: () -> Unit = {}, onError: (Throwable) -> Unit = {}, loopPeriod: Time = 0.02.seconds, logToNetworkTables: Boolean = true)","description":"frc.chargers.framework.RobotConfig.RobotConfig","location":"-charger-lib/frc.chargers.framework/-robot-config/-robot-config.html","searchKeys":["RobotConfig","constructor(tuningMode: Boolean, isReplay: Boolean, hardwareConfigRetryLimit: Int = 3, extraLoggerConfig: () -> Unit = {}, onError: (Throwable) -> Unit = {}, loopPeriod: Time = 0.02.seconds, logToNetworkTables: Boolean = true)","frc.chargers.framework.RobotConfig.RobotConfig"]},{"name":"constructor(tx: Double, ty: Double, areaPercent: Double)","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic.Generic","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/-generic.html","searchKeys":["Generic","constructor(tx: Double, ty: Double, areaPercent: Double)","frc.chargers.hardware.sensors.vision.VisionTarget.Generic.Generic"]},{"name":"constructor(tx: Double, ty: Double, areaPercent: Double, id: Int)","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.ML","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/-m-l.html","searchKeys":["ML","constructor(tx: Double, ty: Double, areaPercent: Double, id: Int)","frc.chargers.hardware.sensors.vision.VisionTarget.ML.ML"]},{"name":"constructor(tx: Double, ty: Double, areaPercent: Double, id: Int, targetTransformFromCam: UnitTransform3d)","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.AprilTag","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/-april-tag.html","searchKeys":["AprilTag","constructor(tx: Double, ty: Double, areaPercent: Double, id: Int, targetTransformFromCam: UnitTransform3d)","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.AprilTag"]},{"name":"constructor(type: RemoteLimitSwitchSource, normalOpenOrClose: LimitSwitchNormal, deviceId: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.LimitSwitchConfig","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-limit-switch-config/-limit-switch-config.html","searchKeys":["LimitSwitchConfig","constructor(type: RemoteLimitSwitchSource, normalOpenOrClose: LimitSwitchNormal, deviceId: Int)","frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.LimitSwitchConfig"]},{"name":"constructor(units: Pair<KmeasureUnit<I>, KmeasureUnit<O>> = siUnit<I>() to siUnit<O>(), coefficients: List<Double>)","description":"frc.chargers.utils.math.equations.UnitPolynomial.UnitPolynomial","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/-unit-polynomial.html","searchKeys":["UnitPolynomial","constructor(units: Pair<KmeasureUnit<I>, KmeasureUnit<O>> = siUnit<I>() to siUnit<O>(), coefficients: List<Double>)","frc.chargers.utils.math.equations.UnitPolynomial.UnitPolynomial"]},{"name":"constructor(unitsUsed: Pair<KmeasureUnit<I>, KmeasureUnit<O>> = KmeasureUnit<I>(1.0) to KmeasureUnit<O>(1.0), vararg coefficients: Number)","description":"frc.chargers.utils.math.equations.UnitPolynomial.UnitPolynomial","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/-unit-polynomial.html","searchKeys":["UnitPolynomial","constructor(unitsUsed: Pair<KmeasureUnit<I>, KmeasureUnit<O>> = KmeasureUnit<I>(1.0) to KmeasureUnit<O>(1.0), vararg coefficients: Number)","frc.chargers.utils.math.equations.UnitPolynomial.UnitPolynomial"]},{"name":"constructor(useFusedHeading: Boolean = true, ahrs: AHRS = AHRS())","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.ChargerNavX","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-charger-nav-x.html","searchKeys":["ChargerNavX","constructor(useFusedHeading: Boolean = true, ahrs: AHRS = AHRS())","frc.chargers.hardware.sensors.imu.ChargerNavX.ChargerNavX"]},{"name":"constructor(value: Double, timestamp: Time)","description":"frc.chargers.utils.DoubleMeasurement.DoubleMeasurement","location":"-charger-lib/frc.chargers.utils/-double-measurement/-double-measurement.html","searchKeys":["DoubleMeasurement","constructor(value: Double, timestamp: Time)","frc.chargers.utils.DoubleMeasurement.DoubleMeasurement"]},{"name":"constructor(value: Quantity<D>, timestamp: Time)","description":"frc.chargers.utils.QuantityMeasurement.QuantityMeasurement","location":"-charger-lib/frc.chargers.utils/-quantity-measurement/-quantity-measurement.html","searchKeys":["QuantityMeasurement","constructor(value: Quantity<D>, timestamp: Time)","frc.chargers.utils.QuantityMeasurement.QuantityMeasurement"]},{"name":"constructor(value: Quantity<S>, feedforwardOutput: Quantity<O>)","description":"frc.chargers.controls.Setpoint.Setpoint","location":"-charger-lib/frc.chargers.controls/-setpoint/-setpoint.html","searchKeys":["Setpoint","constructor(value: Quantity<S>, feedforwardOutput: Quantity<O>)","frc.chargers.controls.Setpoint.Setpoint"]},{"name":"constructor(value: T, timestamp: Time)","description":"frc.chargers.utils.BasicMeasurement.BasicMeasurement","location":"-charger-lib/frc.chargers.utils/-basic-measurement/-basic-measurement.html","searchKeys":["BasicMeasurement","constructor(value: T, timestamp: Time)","frc.chargers.utils.BasicMeasurement.BasicMeasurement"]},{"name":"constructor(value: T, timestamp: Time)","description":"frc.chargers.utils.Measurement.Measurement","location":"-charger-lib/frc.chargers.utils/-measurement/-measurement.html","searchKeys":["Measurement","constructor(value: T, timestamp: Time)","frc.chargers.utils.Measurement.Measurement"]},{"name":"constructor(vararg coefficients: Number)","description":"frc.chargers.utils.math.equations.Polynomial.Polynomial","location":"-charger-lib/frc.chargers.utils.math.equations/-polynomial/-polynomial.html","searchKeys":["Polynomial","constructor(vararg coefficients: Number)","frc.chargers.utils.math.equations.Polynomial.Polynomial"]},{"name":"constructor(vararg encoders: Encoder)","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/-average-encoder.html","searchKeys":["AverageEncoder","constructor(vararg encoders: Encoder)","frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder"]},{"name":"constructor(vararg motorControllers: EncoderMotorController)","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/-average-encoder.html","searchKeys":["AverageEncoder","constructor(vararg motorControllers: EncoderMotorController)","frc.chargers.hardware.sensors.encoders.AverageEncoder.AverageEncoder"]},{"name":"constructor(x: Array<Double>, y: Array<Double>, degree: Int)","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.PolynomialRegression","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/-polynomial-regression.html","searchKeys":["PolynomialRegression","constructor(x: Array<Double>, y: Array<Double>, degree: Int)","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.PolynomialRegression"]},{"name":"constructor(x: Array<Double>, y: Array<Double>, degree: Int, variableName: String)","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.PolynomialRegression","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/-polynomial-regression.html","searchKeys":["PolynomialRegression","constructor(x: Array<Double>, y: Array<Double>, degree: Int, variableName: String)","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.PolynomialRegression"]},{"name":"constructor(x: Distance, y: Distance)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.UnitTranslation2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/-unit-translation2d.html","searchKeys":["UnitTranslation2d","constructor(x: Distance, y: Distance)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.UnitTranslation2d"]},{"name":"constructor(x: Distance, y: Distance, rotation: Angle)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.UnitPose2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/-unit-pose2d.html","searchKeys":["UnitPose2d","constructor(x: Distance, y: Distance, rotation: Angle)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.UnitPose2d"]},{"name":"constructor(x: Distance, y: Distance, rotation: Angle)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/-unit-transform2d.html","searchKeys":["UnitTransform2d","constructor(x: Distance, y: Distance, rotation: Angle)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.UnitTransform2d"]},{"name":"constructor(x: Distance, y: Distance, z: Distance)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.UnitTranslation3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/-unit-translation3d.html","searchKeys":["UnitTranslation3d","constructor(x: Distance, y: Distance, z: Distance)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.UnitTranslation3d"]},{"name":"constructor(x: Distance, y: Distance, z: Distance, rotation: Rotation3d)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.UnitPose3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/-unit-pose3d.html","searchKeys":["UnitPose3d","constructor(x: Distance, y: Distance, z: Distance, rotation: Rotation3d)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.UnitPose3d"]},{"name":"constructor(xPower: Double = 0.0, yPower: Double = 0.0, rotationPower: Double = 0.0)","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers.ChassisPowers","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/-chassis-powers.html","searchKeys":["ChassisPowers","constructor(xPower: Double = 0.0, yPower: Double = 0.0, rotationPower: Double = 0.0)","frc.chargers.wpilibextensions.kinematics.ChassisPowers.ChassisPowers"]},{"name":"data class Absolute(val category: SparkAbsoluteEncoder.Type, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkFlexEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-absolute/index.html","searchKeys":["Absolute","data class Absolute(val category: SparkAbsoluteEncoder.Type, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkFlexEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute"]},{"name":"data class Absolute(val category: SparkAbsoluteEncoder.Type, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkMaxEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-absolute/index.html","searchKeys":["Absolute","data class Absolute(val category: SparkAbsoluteEncoder.Type, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkMaxEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute"]},{"name":"data class Alternate(val category: SparkMaxAlternateEncoder.Type, val countsPerRev: Int, val encoderMeasurementPeriod: Time? = null, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkMaxEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/index.html","searchKeys":["Alternate","data class Alternate(val category: SparkMaxAlternateEncoder.Type, val countsPerRev: Int, val encoderMeasurementPeriod: Time? = null, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkMaxEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate"]},{"name":"data class AngularMotionConstraints(val maxVelocity: AngularVelocity, val maxAcceleration: AngularAcceleration)","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/index.html","searchKeys":["AngularMotionConstraints","data class AngularMotionConstraints(val maxVelocity: AngularVelocity, val maxAcceleration: AngularAcceleration)","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints"]},{"name":"data class AngularMotorFFConstants(val kS: Voltage, val kV: VoltagePerAngularVelocity, val kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/index.html","searchKeys":["AngularMotorFFConstants","data class AngularMotorFFConstants(val kS: Voltage, val kV: VoltagePerAngularVelocity, val kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","frc.chargers.controls.feedforward.AngularMotorFFConstants"]},{"name":"data class ArmFFConstants(val kS: Voltage, val kG: VoltagePerAngle, val kV: VoltagePerAngularVelocity, val kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","description":"frc.chargers.controls.feedforward.ArmFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/index.html","searchKeys":["ArmFFConstants","data class ArmFFConstants(val kS: Voltage, val kG: VoltagePerAngle, val kV: VoltagePerAngularVelocity, val kA: VoltagePerAngularAcceleration = VoltagePerAngularAcceleration(0.0))","frc.chargers.controls.feedforward.ArmFFConstants"]},{"name":"data class CANcoderConfiguration(var futureProofConfigs: Boolean? = null, var sensorDirection: SensorDirectionValue? = null, var absoluteSensorRange: AbsoluteSensorRangeValue? = null, var magnetOffset: Angle? = null, var filterVelocity: Boolean? = null, var positionUpdateFrequency: Frequency? = null, var velocityUpdateFrequency: Frequency? = null) : HardwareConfiguration","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/index.html","searchKeys":["CANcoderConfiguration","data class CANcoderConfiguration(var futureProofConfigs: Boolean? = null, var sensorDirection: SensorDirectionValue? = null, var absoluteSensorRange: AbsoluteSensorRangeValue? = null, var magnetOffset: Angle? = null, var filterVelocity: Boolean? = null, var positionUpdateFrequency: Frequency? = null, var velocityUpdateFrequency: Frequency? = null) : HardwareConfiguration","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration"]},{"name":"data class ChargerTalonFXConfiguration(var beepOnBoot: Boolean? = null, var dutyCycleClosedLoopRampPeriod: Time? = null, var torqueClosedLoopRampPeriod: Time? = null, var voltageClosedLoopRampPeriod: Time? = null, var dutyCycleOpenLoopRampPeriod: Time? = null, var torqueOpenLoopRampPeriod: Time? = null, var voltageOpenLoopRampPeriod: Time? = null, var statorCurrentLimitEnable: Boolean? = null, var supplyCurrentLimitEnable: Boolean? = null, var statorCurrentLimit: Current? = null, var supplyCurrentLimit: Current? = null, var supplyCurrentThreshold: Current? = null, var supplyTimeThreshold: Time? = null, var feedbackRemoteSensorID: Int? = null, var feedbackRotorOffset: Angle? = null, var feedbackSensorSource: FeedbackSensorSourceValue? = null, var rotorToSensorRatio: Double? = null, var sensorToMechanismRatio: Double? = null, var forwardLimitEnable: Boolean? = null, var forwardLimitAutosetPositionEnable: Boolean? = null, var forwardLimitAutosetPositionValue: Angle? = null, var forwardLimitRemoteSensorID: Int? = null, var forwardLimitSource: ForwardLimitSourceValue? = null, var forwardLimitType: ForwardLimitTypeValue? = null, var reverseLimitEnable: Boolean? = null, var reverseLimitAutosetPositionEnable: Boolean? = null, var reverseLimitAutosetPositionValue: Angle? = null, var reverseLimitRemoteSensorID: Int? = null, var reverseLimitSource: ReverseLimitSourceValue? = null, var reverseLimitType: ReverseLimitTypeValue? = null, var neutralMode: NeutralModeValue? = null, var inverted: Boolean? = null, var dutyCycleNeutralDeadband: Double? = null, var peakForwardDutyCycle: Double? = null, var peakReverseDutyCycle: Double? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var peakForwardTorqueCurrent: Current? = null, var peakReverseTorqueCurrent: Current? = null, var torqueNeutralDeadband: Current? = null, var peakForwardVoltage: Voltage? = null, var peakReverseVoltage: Voltage? = null, var supplyVoltageTimeConstant: Time? = null, var positionUpdateFrequency: Frequency? = null, var velocityUpdateFrequency: Frequency? = null, var motorOutputUpdateFrequency: Frequency? = null, var currentUpdateFrequency: Frequency? = null) : HardwareConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/index.html","searchKeys":["ChargerTalonFXConfiguration","data class ChargerTalonFXConfiguration(var beepOnBoot: Boolean? = null, var dutyCycleClosedLoopRampPeriod: Time? = null, var torqueClosedLoopRampPeriod: Time? = null, var voltageClosedLoopRampPeriod: Time? = null, var dutyCycleOpenLoopRampPeriod: Time? = null, var torqueOpenLoopRampPeriod: Time? = null, var voltageOpenLoopRampPeriod: Time? = null, var statorCurrentLimitEnable: Boolean? = null, var supplyCurrentLimitEnable: Boolean? = null, var statorCurrentLimit: Current? = null, var supplyCurrentLimit: Current? = null, var supplyCurrentThreshold: Current? = null, var supplyTimeThreshold: Time? = null, var feedbackRemoteSensorID: Int? = null, var feedbackRotorOffset: Angle? = null, var feedbackSensorSource: FeedbackSensorSourceValue? = null, var rotorToSensorRatio: Double? = null, var sensorToMechanismRatio: Double? = null, var forwardLimitEnable: Boolean? = null, var forwardLimitAutosetPositionEnable: Boolean? = null, var forwardLimitAutosetPositionValue: Angle? = null, var forwardLimitRemoteSensorID: Int? = null, var forwardLimitSource: ForwardLimitSourceValue? = null, var forwardLimitType: ForwardLimitTypeValue? = null, var reverseLimitEnable: Boolean? = null, var reverseLimitAutosetPositionEnable: Boolean? = null, var reverseLimitAutosetPositionValue: Angle? = null, var reverseLimitRemoteSensorID: Int? = null, var reverseLimitSource: ReverseLimitSourceValue? = null, var reverseLimitType: ReverseLimitTypeValue? = null, var neutralMode: NeutralModeValue? = null, var inverted: Boolean? = null, var dutyCycleNeutralDeadband: Double? = null, var peakForwardDutyCycle: Double? = null, var peakReverseDutyCycle: Double? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var peakForwardTorqueCurrent: Current? = null, var peakReverseTorqueCurrent: Current? = null, var torqueNeutralDeadband: Current? = null, var peakForwardVoltage: Voltage? = null, var peakReverseVoltage: Voltage? = null, var supplyVoltageTimeConstant: Time? = null, var positionUpdateFrequency: Frequency? = null, var velocityUpdateFrequency: Frequency? = null, var motorOutputUpdateFrequency: Frequency? = null, var currentUpdateFrequency: Frequency? = null) : HardwareConfiguration","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration"]},{"name":"data class ChargerTalonSRXConfiguration(var inverted: Boolean? = null, var invertSensorPhase: Boolean? = null, var expiration: Time? = null, var safetyEnabled: Boolean? = null, var openLoopRampTimeFromNeutralToFull: Time? = null, var closedLoopRampTimeFromNeutralToFull: Time? = null, var peakOutputForwardPercent: Double? = null, var peakOutputReversePercent: Double? = null, var nominalOutputForwardPercent: Double? = null, var nominalOutputReversePercent: Double? = null, var neutralDeadbandPercent: Double? = null, var voltageCompensationSaturationVoltage: Voltage? = null, var voltageMeasurementFilterSamples: Int? = null, var voltageCompensationEnabled: Boolean? = null, val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), val controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), val statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), var forwardLimitSwitchSource: LimitSwitchConfig? = null, var reverseLimitSwitchSource: LimitSwitchConfig? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf()) : HardwareConfiguration","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/index.html","searchKeys":["ChargerTalonSRXConfiguration","data class ChargerTalonSRXConfiguration(var inverted: Boolean? = null, var invertSensorPhase: Boolean? = null, var expiration: Time? = null, var safetyEnabled: Boolean? = null, var openLoopRampTimeFromNeutralToFull: Time? = null, var closedLoopRampTimeFromNeutralToFull: Time? = null, var peakOutputForwardPercent: Double? = null, var peakOutputReversePercent: Double? = null, var nominalOutputForwardPercent: Double? = null, var nominalOutputReversePercent: Double? = null, var neutralDeadbandPercent: Double? = null, var voltageCompensationSaturationVoltage: Voltage? = null, var voltageMeasurementFilterSamples: Int? = null, var voltageCompensationEnabled: Boolean? = null, val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice> = mutableMapOf(), val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double> = mutableMapOf(), val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice> = mutableMapOf(), val controlFramePeriods: MutableMap<ControlFrame, Time> = mutableMapOf(), val statusFramePeriods: MutableMap<StatusFrame, Time> = mutableMapOf(), var forwardLimitSwitchSource: LimitSwitchConfig? = null, var reverseLimitSwitchSource: LimitSwitchConfig? = null, var forwardSoftLimitThreshold: Angle? = null, var reverseSoftLimitThreshold: Angle? = null, var forwardSoftLimitEnable: Boolean? = null, var reverseSoftLimitEnable: Boolean? = null, val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue> = mutableMapOf()) : HardwareConfiguration","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration"]},{"name":"data class ChassisPowers(var xPower: Double = 0.0, var yPower: Double = 0.0, var rotationPower: Double = 0.0)","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/index.html","searchKeys":["ChassisPowers","data class ChassisPowers(var xPower: Double = 0.0, var yPower: Double = 0.0, var rotationPower: Double = 0.0)","frc.chargers.wpilibextensions.kinematics.ChassisPowers"]},{"name":"data class Custom(val frames: MutableMap<CANSparkLowLevel.PeriodicFrame, Int>) : PeriodicFrameConfig","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-custom/index.html","searchKeys":["Custom","data class Custom(val frames: MutableMap<CANSparkLowLevel.PeriodicFrame, Int>) : PeriodicFrameConfig","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom"]},{"name":"data class DiffDriveHardwareData(val invertMotors: Boolean = false, val gearRatio: Double = DEFAULT_GEAR_RATIO, val wheelDiameter: Length, val width: Distance)","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/index.html","searchKeys":["DiffDriveHardwareData","data class DiffDriveHardwareData(val invertMotors: Boolean = false, val gearRatio: Double = DEFAULT_GEAR_RATIO, val wheelDiameter: Length, val width: Distance)","frc.chargers.constants.drivetrain.DiffDriveHardwareData"]},{"name":"data class DoubleMeasurement(val value: Double, val timestamp: Time) : AdvantageKitLoggable<DoubleMeasurement> ","description":"frc.chargers.utils.DoubleMeasurement","location":"-charger-lib/frc.chargers.utils/-double-measurement/index.html","searchKeys":["DoubleMeasurement","data class DoubleMeasurement(val value: Double, val timestamp: Time) : AdvantageKitLoggable<DoubleMeasurement> ","frc.chargers.utils.DoubleMeasurement"]},{"name":"data class DutyCycleEncoderConfiguration(var connectedFrequencyThreshold: Int? = null, var dutyCycleRange: ClosedRange<Double>? = null, var positionOffset: Double? = null) : HardwareConfiguration","description":"frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-duty-cycle-encoder-configuration/index.html","searchKeys":["DutyCycleEncoderConfiguration","data class DutyCycleEncoderConfiguration(var connectedFrequencyThreshold: Int? = null, var dutyCycleRange: ClosedRange<Double>? = null, var positionOffset: Double? = null) : HardwareConfiguration","frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration"]},{"name":"data class ElevatorFFConstants(val kS: Voltage, val kG: Voltage, val kV: VoltagePerVelocity, val kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","description":"frc.chargers.controls.feedforward.ElevatorFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/index.html","searchKeys":["ElevatorFFConstants","data class ElevatorFFConstants(val kS: Voltage, val kG: Voltage, val kV: VoltagePerVelocity, val kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","frc.chargers.controls.feedforward.ElevatorFFConstants"]},{"name":"data class External(val countsPerRev: Int, val category: SparkFlexExternalEncoder.Type = SparkFlexExternalEncoder.Type.kQuadrature, val encoderMeasurementPeriod: Time? = null, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkFlexEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/index.html","searchKeys":["External","data class External(val countsPerRev: Int, val category: SparkFlexExternalEncoder.Type = SparkFlexExternalEncoder.Type.kQuadrature, val encoderMeasurementPeriod: Time? = null, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkFlexEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External"]},{"name":"data class GitData(val projectName: String, val buildDate: String, val sha: String, val branch: String, val dirty: Int)","description":"frc.chargers.framework.GitData","location":"-charger-lib/frc.chargers.framework/-git-data/index.html","searchKeys":["GitData","data class GitData(val projectName: String, val buildDate: String, val sha: String, val branch: String, val dirty: Int)","frc.chargers.framework.GitData"]},{"name":"data class LimitSwitchConfig(val type: RemoteLimitSwitchSource, val normalOpenOrClose: LimitSwitchNormal, val deviceId: Int)","description":"frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-limit-switch-config/index.html","searchKeys":["LimitSwitchConfig","data class LimitSwitchConfig(val type: RemoteLimitSwitchSource, val normalOpenOrClose: LimitSwitchNormal, val deviceId: Int)","frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig"]},{"name":"data class LinearMotionConstraints(val maxVelocity: Velocity, val maxAcceleration: Acceleration)","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/index.html","searchKeys":["LinearMotionConstraints","data class LinearMotionConstraints(val maxVelocity: Velocity, val maxAcceleration: Acceleration)","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints"]},{"name":"data class LinearMotorFFConstants(val kS: Voltage, val kV: VoltagePerVelocity, val kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/index.html","searchKeys":["LinearMotorFFConstants","data class LinearMotorFFConstants(val kS: Voltage, val kV: VoltagePerVelocity, val kA: VoltagePerAcceleration = VoltagePerAcceleration(0.0))","frc.chargers.controls.feedforward.LinearMotorFFConstants"]},{"name":"data class Measurement<T : AdvantageKitLoggable<T>>(val value: T, val timestamp: Time) : BasicMeasurement<T> , AdvantageKitLoggable<Measurement<T>> ","description":"frc.chargers.utils.Measurement","location":"-charger-lib/frc.chargers.utils/-measurement/index.html","searchKeys":["Measurement","data class Measurement<T : AdvantageKitLoggable<T>>(val value: T, val timestamp: Time) : BasicMeasurement<T> , AdvantageKitLoggable<Measurement<T>> ","frc.chargers.utils.Measurement"]},{"name":"data class ModulePositionGroup(var topLeftDistance: Distance = Distance(0.0), var topRightDistance: Distance = Distance(0.0), var bottomLeftDistance: Distance = Distance(0.0), var bottomRightDistance: Distance = Distance(0.0), var topLeftAngle: Angle = Angle(0.0), var topRightAngle: Angle = Angle(0.0), var bottomLeftAngle: Angle = Angle(0.0), var bottomRightAngle: Angle = Angle(0.0))","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/index.html","searchKeys":["ModulePositionGroup","data class ModulePositionGroup(var topLeftDistance: Distance = Distance(0.0), var topRightDistance: Distance = Distance(0.0), var bottomLeftDistance: Distance = Distance(0.0), var bottomRightDistance: Distance = Distance(0.0), var topLeftAngle: Angle = Angle(0.0), var topRightAngle: Angle = Angle(0.0), var bottomLeftAngle: Angle = Angle(0.0), var bottomRightAngle: Angle = Angle(0.0))","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup"]},{"name":"data class Optimized(val optimizeEncoderFrames: Boolean = true, val utilizedData: List<MotorData> = listOf(MotorData.POSITION, MotorData.VELOCITY, MotorData.VOLTAGE, MotorData.TEMPERATURE)) : PeriodicFrameConfig","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-optimized/index.html","searchKeys":["Optimized","data class Optimized(val optimizeEncoderFrames: Boolean = true, val utilizedData: List<MotorData> = listOf(MotorData.POSITION, MotorData.VELOCITY, MotorData.VOLTAGE, MotorData.TEMPERATURE)) : PeriodicFrameConfig","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized"]},{"name":"data class PIDConstants(var kP: Double, var kI: Double, var kD: Double)","description":"frc.chargers.controls.pid.PIDConstants","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/index.html","searchKeys":["PIDConstants","data class PIDConstants(var kP: Double, var kI: Double, var kD: Double)","frc.chargers.controls.pid.PIDConstants"]},{"name":"data class Pigeon2Configuration(var futureProofConfigs: Boolean? = null, var gyroScalarX: Angle? = null, var gyroScalarY: Angle? = null, var gyroScalarZ: Angle? = null, var mountPosePitch: Angle? = null, var mountPoseYaw: Angle? = null, var mountPoseRoll: Angle? = null, var disableNoMotionCalibration: Boolean? = null, var disableTemperatureCompensation: Boolean? = null, var enableCompass: Boolean? = null) : HardwareConfiguration","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/index.html","searchKeys":["Pigeon2Configuration","data class Pigeon2Configuration(var futureProofConfigs: Boolean? = null, var gyroScalarX: Angle? = null, var gyroScalarY: Angle? = null, var gyroScalarZ: Angle? = null, var mountPosePitch: Angle? = null, var mountPoseYaw: Angle? = null, var mountPoseRoll: Angle? = null, var disableNoMotionCalibration: Boolean? = null, var disableTemperatureCompensation: Boolean? = null, var enableCompass: Boolean? = null) : HardwareConfiguration","frc.chargers.hardware.sensors.imu.Pigeon2Configuration"]},{"name":"data class Polynomial(val coefficients: List<Double>) : Function1<Double, Double> ","description":"frc.chargers.utils.math.equations.Polynomial","location":"-charger-lib/frc.chargers.utils.math.equations/-polynomial/index.html","searchKeys":["Polynomial","data class Polynomial(val coefficients: List<Double>) : Function1<Double, Double> ","frc.chargers.utils.math.equations.Polynomial"]},{"name":"data class QuadEncoderConfiguration(var samplesPerAverage: Int? = null, var simDevice: SimDevice? = null, var reverseDirection: Boolean? = null) : HardwareConfiguration","description":"frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-quad-encoder-configuration/index.html","searchKeys":["QuadEncoderConfiguration","data class QuadEncoderConfiguration(var samplesPerAverage: Int? = null, var simDevice: SimDevice? = null, var reverseDirection: Boolean? = null) : HardwareConfiguration","frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration"]},{"name":"data class QuantityMeasurement<D : Dimension<*, *, *, *>>(val value: Quantity<D>, val timestamp: Time) : AdvantageKitLoggable<QuantityMeasurement<D>> ","description":"frc.chargers.utils.QuantityMeasurement","location":"-charger-lib/frc.chargers.utils/-quantity-measurement/index.html","searchKeys":["QuantityMeasurement","data class QuantityMeasurement<D : Dimension<*, *, *, *>>(val value: Quantity<D>, val timestamp: Time) : AdvantageKitLoggable<QuantityMeasurement<D>> ","frc.chargers.utils.QuantityMeasurement"]},{"name":"data class Regular(val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkMaxEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-regular/index.html","searchKeys":["Regular","data class Regular(val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkMaxEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular"]},{"name":"data class Regular(val optimizeStatusFrames: Boolean = true, val category: SparkRelativeEncoder.Type = SparkRelativeEncoder.Type.kHallSensor, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkFlexEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-regular/index.html","searchKeys":["Regular","data class Regular(val optimizeStatusFrames: Boolean = true, val category: SparkRelativeEncoder.Type = SparkRelativeEncoder.Type.kHallSensor, val averageDepth: Int? = null, val inverted: Boolean? = null) : SparkFlexEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular"]},{"name":"data class RobotConfig(val tuningMode: Boolean, val isReplay: Boolean, val hardwareConfigRetryLimit: Int = 3, val extraLoggerConfig: () -> Unit = {}, val onError: (Throwable) -> Unit = {}, val loopPeriod: Time = 0.02.seconds, val logToNetworkTables: Boolean = true)","description":"frc.chargers.framework.RobotConfig","location":"-charger-lib/frc.chargers.framework/-robot-config/index.html","searchKeys":["RobotConfig","data class RobotConfig(val tuningMode: Boolean, val isReplay: Boolean, val hardwareConfigRetryLimit: Int = 3, val extraLoggerConfig: () -> Unit = {}, val onError: (Throwable) -> Unit = {}, val loopPeriod: Time = 0.02.seconds, val logToNetworkTables: Boolean = true)","frc.chargers.framework.RobotConfig"]},{"name":"data class SecondaryCurrentLimit(val limit: Current, val chopCycles: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-secondary-current-limit/index.html","searchKeys":["SecondaryCurrentLimit","data class SecondaryCurrentLimit(val limit: Current, val chopCycles: Int? = null)","frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit"]},{"name":"data class Setpoint<S : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(val value: Quantity<S>, val feedforwardOutput: Quantity<O>)","description":"frc.chargers.controls.Setpoint","location":"-charger-lib/frc.chargers.controls/-setpoint/index.html","searchKeys":["Setpoint","data class Setpoint<S : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(val value: Quantity<S>, val feedforwardOutput: Quantity<O>)","frc.chargers.controls.Setpoint"]},{"name":"data class SmartCurrentLimit(val stallLimit: Current, val freeLimit: Current? = null, val limitSpeed: AngularVelocity? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-smart-current-limit/index.html","searchKeys":["SmartCurrentLimit","data class SmartCurrentLimit(val stallLimit: Current, val freeLimit: Current? = null, val limitSpeed: AngularVelocity? = null)","frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit"]},{"name":"data class SwerveControlData(val anglePID: PIDConstants, val angleSetpointSupplier: SetpointSupplier<AngleDimension, VoltageDimension> = SetpointSupplier.Default(), val modulePrecision: Precision<AngleDimension> = Precision.AllowOvershoot, val velocityPID: PIDConstants, val velocityFF: AngularMotorFFConstants, val openLoopDiscretizationRate: Double = 2.0, val closedLoopDiscretizationRate: Double = 1.0, val robotRotationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), val robotTranslationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), val pathReplanConfig: ReplanningConfig = ReplanningConfig())","description":"frc.chargers.constants.drivetrain.SwerveControlData","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/index.html","searchKeys":["SwerveControlData","data class SwerveControlData(val anglePID: PIDConstants, val angleSetpointSupplier: SetpointSupplier<AngleDimension, VoltageDimension> = SetpointSupplier.Default(), val modulePrecision: Precision<AngleDimension> = Precision.AllowOvershoot, val velocityPID: PIDConstants, val velocityFF: AngularMotorFFConstants, val openLoopDiscretizationRate: Double = 2.0, val closedLoopDiscretizationRate: Double = 1.0, val robotRotationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), val robotTranslationPID: PIDConstants = PIDConstants(0.3,0.0,0.0), val pathReplanConfig: ReplanningConfig = ReplanningConfig())","frc.chargers.constants.drivetrain.SwerveControlData"]},{"name":"data class SwerveEncoders<out E : PositionEncoder>(val topLeft: E, val topRight: E, val bottomLeft: E, val bottomRight: E)","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/index.html","searchKeys":["SwerveEncoders","data class SwerveEncoders<out E : PositionEncoder>(val topLeft: E, val topRight: E, val bottomLeft: E, val bottomRight: E)","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders"]},{"name":"data class SwerveHardwareData(val invertTurnMotors: Boolean = false, val turnGearRatio: Double = DEFAULT_GEAR_RATIO, val driveGearRatio: Double = DEFAULT_GEAR_RATIO, val turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, val driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA, val maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, val wheelDiameter: Length, val trackWidth: Distance, val wheelBase: Distance)","description":"frc.chargers.constants.drivetrain.SwerveHardwareData","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/index.html","searchKeys":["SwerveHardwareData","data class SwerveHardwareData(val invertTurnMotors: Boolean = false, val turnGearRatio: Double = DEFAULT_GEAR_RATIO, val driveGearRatio: Double = DEFAULT_GEAR_RATIO, val turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, val driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA, val maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, val wheelDiameter: Length, val trackWidth: Distance, val wheelBase: Distance)","frc.chargers.constants.drivetrain.SwerveHardwareData"]},{"name":"data class SwerveMotors<out M : EncoderMotorController>(val topLeft: M, val topRight: M, val bottomLeft: M, val bottomRight: M)","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/index.html","searchKeys":["SwerveMotors","data class SwerveMotors<out M : EncoderMotorController>(val topLeft: M, val topRight: M, val bottomLeft: M, val bottomRight: M)","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors"]},{"name":"data class UnitPolynomial<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(val units: Pair<KmeasureUnit<I>, KmeasureUnit<O>> = siUnit<I>() to siUnit<O>(), val coefficients: List<Double>) : Function1<Quantity<I>, Quantity<O>> ","description":"frc.chargers.utils.math.equations.UnitPolynomial","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/index.html","searchKeys":["UnitPolynomial","data class UnitPolynomial<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>(val units: Pair<KmeasureUnit<I>, KmeasureUnit<O>> = siUnit<I>() to siUnit<O>(), val coefficients: List<Double>) : Function1<Quantity<I>, Quantity<O>> ","frc.chargers.utils.math.equations.UnitPolynomial"]},{"name":"data class UnitPose2d(val siValue: Pose2d = Pose2d()) : AdvantageKitLoggable<UnitPose2d> ","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/index.html","searchKeys":["UnitPose2d","data class UnitPose2d(val siValue: Pose2d = Pose2d()) : AdvantageKitLoggable<UnitPose2d> ","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d"]},{"name":"data class UnitPose3d(val siValue: Pose3d = Pose3d()) : AdvantageKitLoggable<UnitPose3d> ","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/index.html","searchKeys":["UnitPose3d","data class UnitPose3d(val siValue: Pose3d = Pose3d()) : AdvantageKitLoggable<UnitPose3d> ","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d"]},{"name":"data class UnitTransform2d(val siValue: Transform2d = Transform2d()) : AdvantageKitLoggable<UnitTransform2d> ","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/index.html","searchKeys":["UnitTransform2d","data class UnitTransform2d(val siValue: Transform2d = Transform2d()) : AdvantageKitLoggable<UnitTransform2d> ","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d"]},{"name":"data class UnitTransform3d(val siValue: Transform3d = Transform3d()) : AdvantageKitLoggable<UnitTransform3d> ","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/index.html","searchKeys":["UnitTransform3d","data class UnitTransform3d(val siValue: Transform3d = Transform3d()) : AdvantageKitLoggable<UnitTransform3d> ","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d"]},{"name":"data class UnitTranslation2d(val siValue: Translation2d = Translation2d()) : Interpolatable<UnitTranslation2d> , AdvantageKitLoggable<UnitTranslation2d> ","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/index.html","searchKeys":["UnitTranslation2d","data class UnitTranslation2d(val siValue: Translation2d = Translation2d()) : Interpolatable<UnitTranslation2d> , AdvantageKitLoggable<UnitTranslation2d> ","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d"]},{"name":"data class UnitTranslation3d(val siValue: Translation3d = Translation3d()) : Interpolatable<UnitTranslation3d> , AdvantageKitLoggable<UnitTranslation3d> ","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/index.html","searchKeys":["UnitTranslation3d","data class UnitTranslation3d(val siValue: Translation3d = Translation3d()) : Interpolatable<UnitTranslation3d> , AdvantageKitLoggable<UnitTranslation3d> ","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d"]},{"name":"data object AllowOvershoot : Precision<Nothing> ","description":"frc.chargers.utils.Precision.AllowOvershoot","location":"-charger-lib/frc.chargers.utils/-precision/-allow-overshoot/index.html","searchKeys":["AllowOvershoot","data object AllowOvershoot : Precision<Nothing> ","frc.chargers.utils.Precision.AllowOvershoot"]},{"name":"data object None : DiffDriveControlData","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.None","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-none/index.html","searchKeys":["None","data object None : DiffDriveControlData","frc.chargers.constants.drivetrain.DiffDriveControlData.None"]},{"name":"enum AlertType : Enum<Alert.AlertType> ","description":"frc.chargers.wpilibextensions.Alert.AlertType","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert-type/index.html","searchKeys":["AlertType","enum AlertType : Enum<Alert.AlertType> ","frc.chargers.wpilibextensions.Alert.AlertType"]},{"name":"enum MotorData : Enum<MotorData> ","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/index.html","searchKeys":["MotorData","enum MotorData : Enum<MotorData> ","frc.chargers.hardware.motorcontrol.rev.util.MotorData"]},{"name":"enum PathAlgorithm : Enum<DiffDriveControlData.PathAlgorithm> ","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-path-algorithm/index.html","searchKeys":["PathAlgorithm","enum PathAlgorithm : Enum<DiffDriveControlData.PathAlgorithm> ","frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm"]},{"name":"fun <D : Dimension<*, *, *, *>> Quantity<D>.inputModulus(min: Quantity<D>, max: Quantity<D>): Quantity<D>","description":"frc.chargers.utils.math.inputModulus","location":"-charger-lib/frc.chargers.utils.math/input-modulus.html","searchKeys":["inputModulus","fun <D : Dimension<*, *, *, *>> Quantity<D>.inputModulus(min: Quantity<D>, max: Quantity<D>): Quantity<D>","frc.chargers.utils.math.inputModulus"]},{"name":"fun <D : Dimension<*, *, *, *>> Quantity<D>.inputModulus(range: ClosedRange<Quantity<D>>): Quantity<D>","description":"frc.chargers.utils.math.inputModulus","location":"-charger-lib/frc.chargers.utils.math/input-modulus.html","searchKeys":["inputModulus","fun <D : Dimension<*, *, *, *>> Quantity<D>.inputModulus(range: ClosedRange<Quantity<D>>): Quantity<D>","frc.chargers.utils.math.inputModulus"]},{"name":"fun <D : Dimension<*, *, *, *>> Quantity<D>.mapBetweenRanges(from: ClosedRange<Quantity<D>>, to: ClosedRange<Quantity<D>>): Quantity<D>","description":"frc.chargers.utils.math.mapBetweenRanges","location":"-charger-lib/frc.chargers.utils.math/map-between-ranges.html","searchKeys":["mapBetweenRanges","fun <D : Dimension<*, *, *, *>> Quantity<D>.mapBetweenRanges(from: ClosedRange<Quantity<D>>, to: ClosedRange<Quantity<D>>): Quantity<D>","frc.chargers.utils.math.mapBetweenRanges"]},{"name":"fun <D : Dimension<*, *, *, *>> Quantity<D>.preserveSign(initialValue: Quantity<D>): Quantity<D>","description":"frc.chargers.utils.math.preserveSign","location":"-charger-lib/frc.chargers.utils.math/preserve-sign.html","searchKeys":["preserveSign","fun <D : Dimension<*, *, *, *>> Quantity<D>.preserveSign(initialValue: Quantity<D>): Quantity<D>","frc.chargers.utils.math.preserveSign"]},{"name":"fun <D : Dimension<*, *, *, *>> Quantity<D>.revertIfInvalid(previousValue: Quantity<D>, additionalInvalidCond: Boolean = false): Quantity<D>","description":"frc.chargers.utils.revertIfInvalid","location":"-charger-lib/frc.chargers.utils/revert-if-invalid.html","searchKeys":["revertIfInvalid","fun <D : Dimension<*, *, *, *>> Quantity<D>.revertIfInvalid(previousValue: Quantity<D>, additionalInvalidCond: Boolean = false): Quantity<D>","frc.chargers.utils.revertIfInvalid"]},{"name":"fun <D : Dimension<*, *, *, *>> Quantity<D>.within(precision: Precision<D>): Boolean","description":"frc.chargers.utils.within","location":"-charger-lib/frc.chargers.utils/within.html","searchKeys":["within","fun <D : Dimension<*, *, *, *>> Quantity<D>.within(precision: Precision<D>): Boolean","frc.chargers.utils.within"]},{"name":"fun <D : Dimension<*, *, *, *>> nullableQuantity(getValue: () -> Quantity<D>?): ReadOnlyLoggableInput<Quantity<D>?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableQuantity","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-quantity.html","searchKeys":["nullableQuantity","fun <D : Dimension<*, *, *, *>> nullableQuantity(getValue: () -> Quantity<D>?): ReadOnlyLoggableInput<Quantity<D>?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableQuantity"]},{"name":"fun <D : Dimension<*, *, *, *>> nullableQuantity(getValue: () -> Quantity<D>?, setValue: (Quantity<D>?) -> Unit): ReadWriteLoggableInput<Quantity<D>?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableQuantity","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-quantity.html","searchKeys":["nullableQuantity","fun <D : Dimension<*, *, *, *>> nullableQuantity(getValue: () -> Quantity<D>?, setValue: (Quantity<D>?) -> Unit): ReadWriteLoggableInput<Quantity<D>?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableQuantity"]},{"name":"fun <D : Dimension<*, *, *, *>> quantity(default: Quantity<D>, key: String? = null, logUnit: KmeasureUnit<D> = siUnit()): TunableDelegate<Quantity<D>>","description":"frc.chargers.constants.tuning.DashboardTuner.quantity","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/quantity.html","searchKeys":["quantity","fun <D : Dimension<*, *, *, *>> quantity(default: Quantity<D>, key: String? = null, logUnit: KmeasureUnit<D> = siUnit()): TunableDelegate<Quantity<D>>","frc.chargers.constants.tuning.DashboardTuner.quantity"]},{"name":"fun <D : Dimension<*, *, *, *>> quantity(getValue: () -> Quantity<D>): ReadOnlyLoggableInput<Quantity<D>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.quantity","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/quantity.html","searchKeys":["quantity","fun <D : Dimension<*, *, *, *>> quantity(getValue: () -> Quantity<D>): ReadOnlyLoggableInput<Quantity<D>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.quantity"]},{"name":"fun <D : Dimension<*, *, *, *>> quantity(getValue: () -> Quantity<D>, setValue: (Quantity<D>) -> Unit): ReadWriteLoggableInput<Quantity<D>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.quantity","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/quantity.html","searchKeys":["quantity","fun <D : Dimension<*, *, *, *>> quantity(getValue: () -> Quantity<D>, setValue: (Quantity<D>) -> Unit): ReadWriteLoggableInput<Quantity<D>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.quantity"]},{"name":"fun <D : Dimension<*, *, *, *>> quantityList(getValue: () -> List<Quantity<D>>): ReadOnlyLoggableInput<List<Quantity<D>>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.quantityList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/quantity-list.html","searchKeys":["quantityList","fun <D : Dimension<*, *, *, *>> quantityList(getValue: () -> List<Quantity<D>>): ReadOnlyLoggableInput<List<Quantity<D>>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.quantityList"]},{"name":"fun <D : Dimension<*, *, *, *>> quantityList(getValue: () -> List<Quantity<D>>, setValue: (List<Quantity<D>>) -> Unit): ReadWriteLoggableInput<List<Quantity<D>>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.quantityList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/quantity-list.html","searchKeys":["quantityList","fun <D : Dimension<*, *, *, *>> quantityList(getValue: () -> List<Quantity<D>>, setValue: (List<Quantity<D>>) -> Unit): ReadWriteLoggableInput<List<Quantity<D>>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.quantityList"]},{"name":"fun <D : Dimension<*, *, *, *>> recordOutput(key: String, value: Quantity<D>)","description":"frc.chargers.advantagekitextensions.recordOutput","location":"-charger-lib/frc.chargers.advantagekitextensions/record-output.html","searchKeys":["recordOutput","fun <D : Dimension<*, *, *, *>> recordOutput(key: String, value: Quantity<D>)","frc.chargers.advantagekitextensions.recordOutput"]},{"name":"fun <D : Dimension<*, *, *, *>> siUnit(): KmeasureUnit<D>","description":"frc.chargers.utils.math.units.siUnit","location":"-charger-lib/frc.chargers.utils.math.units/si-unit.html","searchKeys":["siUnit","fun <D : Dimension<*, *, *, *>> siUnit(): KmeasureUnit<D>","frc.chargers.utils.math.units.siUnit"]},{"name":"fun <M : EncoderMotorController, HardwareConfigurable<C>, C : HardwareConfiguration> EncoderDifferentialDrivetrain(topLeft: M, topRight: M, bottomLeft: M, bottomRight: M, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, simMotors: DifferentialDrivetrainSim.KitbotMotor = DifferentialDrivetrainSim.KitbotMotor.kDualCIMPerSide, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier, configuration: C): EncoderDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain.html","searchKeys":["EncoderDifferentialDrivetrain","fun <M : EncoderMotorController, HardwareConfigurable<C>, C : HardwareConfiguration> EncoderDifferentialDrivetrain(topLeft: M, topRight: M, bottomLeft: M, bottomRight: M, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, simMotors: DifferentialDrivetrainSim.KitbotMotor = DifferentialDrivetrainSim.KitbotMotor.kDualCIMPerSide, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier, configuration: C): EncoderDifferentialDrivetrain","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain"]},{"name":"fun <S : Subsystem> S.setDefaultRunCommand(vararg requirements: Subsystem, toRun: S.() -> Unit)","description":"frc.chargers.commands.setDefaultRunCommand","location":"-charger-lib/frc.chargers.commands/set-default-run-command.html","searchKeys":["setDefaultRunCommand","fun <S : Subsystem> S.setDefaultRunCommand(vararg requirements: Subsystem, toRun: S.() -> Unit)","frc.chargers.commands.setDefaultRunCommand"]},{"name":"fun <T : AdvantageKitLoggable<T>> nullableValue(default: T, getValue: () -> T?): ReadOnlyLoggableInput<T?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableValue","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-value.html","searchKeys":["nullableValue","fun <T : AdvantageKitLoggable<T>> nullableValue(default: T, getValue: () -> T?): ReadOnlyLoggableInput<T?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableValue"]},{"name":"fun <T : AdvantageKitLoggable<T>> nullableValue(default: T, getValue: () -> T?, setValue: (T?) -> Unit): ReadWriteLoggableInput<T?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableValue","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-value.html","searchKeys":["nullableValue","fun <T : AdvantageKitLoggable<T>> nullableValue(default: T, getValue: () -> T?, setValue: (T?) -> Unit): ReadWriteLoggableInput<T?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableValue"]},{"name":"fun <T : AdvantageKitLoggable<T>> recordOutput(key: String, value: T)","description":"frc.chargers.advantagekitextensions.recordOutput","location":"-charger-lib/frc.chargers.advantagekitextensions/record-output.html","searchKeys":["recordOutput","fun <T : AdvantageKitLoggable<T>> recordOutput(key: String, value: T)","frc.chargers.advantagekitextensions.recordOutput"]},{"name":"fun <T : AdvantageKitLoggable<T>> value(default: T, getValue: () -> T): ReadOnlyLoggableInput<T>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.value","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/value.html","searchKeys":["value","fun <T : AdvantageKitLoggable<T>> value(default: T, getValue: () -> T): ReadOnlyLoggableInput<T>","frc.chargers.advantagekitextensions.LoggableInputsProvider.value"]},{"name":"fun <T : AdvantageKitLoggable<T>> value(default: T, getValue: () -> T, setValue: (T) -> Unit): ReadWriteLoggableInput<T>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.value","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/value.html","searchKeys":["value","fun <T : AdvantageKitLoggable<T>> value(default: T, getValue: () -> T, setValue: (T) -> Unit): ReadWriteLoggableInput<T>","frc.chargers.advantagekitextensions.LoggableInputsProvider.value"]},{"name":"fun <T : AdvantageKitLoggable<T>> valueList(default: T, getValue: () -> List<T>): ReadOnlyLoggableInput<List<T>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.valueList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/value-list.html","searchKeys":["valueList","fun <T : AdvantageKitLoggable<T>> valueList(default: T, getValue: () -> List<T>): ReadOnlyLoggableInput<List<T>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.valueList"]},{"name":"fun <T : AdvantageKitLoggable<T>> valueList(default: T, getValue: () -> List<T>, setValue: (List<T>) -> Unit): ReadWriteLoggableInput<List<T>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.valueList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/value-list.html","searchKeys":["valueList","fun <T : AdvantageKitLoggable<T>> valueList(default: T, getValue: () -> List<T>, setValue: (List<T>) -> Unit): ReadWriteLoggableInput<List<T>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.valueList"]},{"name":"fun <T : Any> getOnceDuringRun(get: CodeBlockContext.() -> T): ReadOnlyProperty<Any?, T>","description":"frc.chargers.commands.commandbuilder.CommandBuilder.getOnceDuringRun","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/get-once-during-run.html","searchKeys":["getOnceDuringRun","fun <T : Any> getOnceDuringRun(get: CodeBlockContext.() -> T): ReadOnlyProperty<Any?, T>","frc.chargers.commands.commandbuilder.CommandBuilder.getOnceDuringRun"]},{"name":"fun <T : Any> runWhen(key: () -> T, block: MappableContext<T, Command>.() -> Unit): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runWhen","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-when.html","searchKeys":["runWhen","fun <T : Any> runWhen(key: () -> T, block: MappableContext<T, Command>.() -> Unit): Command","frc.chargers.commands.commandbuilder.CommandBuilder.runWhen"]},{"name":"fun <T> refreshWhenTuned(getValue: () -> T): ReadOnlyProperty<Any?, T>","description":"frc.chargers.constants.tuning.DashboardTuner.refreshWhenTuned","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/refresh-when-tuned.html","searchKeys":["refreshWhenTuned","fun <T> refreshWhenTuned(getValue: () -> T): ReadOnlyProperty<Any?, T>","frc.chargers.constants.tuning.DashboardTuner.refreshWhenTuned"]},{"name":"fun Angle.applyFlip(): Angle","description":"frc.chargers.utils.applyFlip","location":"-charger-lib/frc.chargers.utils/apply-flip.html","searchKeys":["applyFlip","fun Angle.applyFlip(): Angle","frc.chargers.utils.applyFlip"]},{"name":"fun Angle.asRotation2d(): Rotation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.asRotation2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/as-rotation2d.html","searchKeys":["asRotation2d","fun Angle.asRotation2d(): Rotation2d","frc.chargers.wpilibextensions.geometry.twodimensional.asRotation2d"]},{"name":"fun Angle.interpolate(endValue: Angle, t: Double): Angle","description":"frc.chargers.wpilibextensions.geometry.twodimensional.interpolate","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/interpolate.html","searchKeys":["interpolate","fun Angle.interpolate(endValue: Angle, t: Double): Angle","frc.chargers.wpilibextensions.geometry.twodimensional.interpolate"]},{"name":"fun ChargerPigeon2(canId: Int, canBus: String = \"rio\", configure: Pigeon2Configuration.() -> Unit): ChargerPigeon2","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2.html","searchKeys":["ChargerPigeon2","fun ChargerPigeon2(canId: Int, canBus: String = \"rio\", configure: Pigeon2Configuration.() -> Unit): ChargerPigeon2","frc.chargers.hardware.sensors.imu.ChargerPigeon2"]},{"name":"fun ChassisSpeeds(xVelocity: Velocity, yVelocity: Velocity, rotationSpeed: AngularVelocity): ChassisSpeeds","description":"frc.chargers.wpilibextensions.kinematics.ChassisSpeeds","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-speeds.html","searchKeys":["ChassisSpeeds","fun ChassisSpeeds(xVelocity: Velocity, yVelocity: Velocity, rotationSpeed: AngularVelocity): ChassisSpeeds","frc.chargers.wpilibextensions.kinematics.ChassisSpeeds"]},{"name":"fun ChassisSpeeds.discretize(dt: Time? = null, driftRate: Double = 1.0): ChassisSpeeds","description":"frc.chargers.wpilibextensions.kinematics.discretize","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/discretize.html","searchKeys":["discretize","fun ChassisSpeeds.discretize(dt: Time? = null, driftRate: Double = 1.0): ChassisSpeeds","frc.chargers.wpilibextensions.kinematics.discretize"]},{"name":"fun Command.beforeStarting(vararg subsystems: Subsystem, toRun: () -> Unit): Command","description":"frc.chargers.commands.beforeStarting","location":"-charger-lib/frc.chargers.commands/before-starting.html","searchKeys":["beforeStarting","fun Command.beforeStarting(vararg subsystems: Subsystem, toRun: () -> Unit): Command","frc.chargers.commands.beforeStarting"]},{"name":"fun Command.repeat(numTimes: Int): Command","description":"frc.chargers.commands.repeat","location":"-charger-lib/frc.chargers.commands/repeat.html","searchKeys":["repeat","fun Command.repeat(numTimes: Int): Command","frc.chargers.commands.repeat"]},{"name":"fun Command.repeatFor(time: Time): Command","description":"frc.chargers.commands.repeatFor","location":"-charger-lib/frc.chargers.commands/repeat-for.html","searchKeys":["repeatFor","fun Command.repeatFor(time: Time): Command","frc.chargers.commands.repeatFor"]},{"name":"fun Command.repeatWhile(condition: () -> Boolean): Command","description":"frc.chargers.commands.repeatWhile","location":"-charger-lib/frc.chargers.commands/repeat-while.html","searchKeys":["repeatWhile","fun Command.repeatWhile(condition: () -> Boolean): Command","frc.chargers.commands.repeatWhile"]},{"name":"fun Command.withExtraRequirements(vararg requirements: Subsystem): Command","description":"frc.chargers.commands.withExtraRequirements","location":"-charger-lib/frc.chargers.commands/with-extra-requirements.html","searchKeys":["withExtraRequirements","fun Command.withExtraRequirements(vararg requirements: Subsystem): Command","frc.chargers.commands.withExtraRequirements"]},{"name":"fun Command.withLog(): Command","description":"frc.chargers.commands.withLog","location":"-charger-lib/frc.chargers.commands/with-log.html","searchKeys":["withLog","fun Command.withLog(): Command","frc.chargers.commands.withLog"]},{"name":"fun Double.inputModulus(min: Double, max: Double): Double","description":"frc.chargers.utils.math.inputModulus","location":"-charger-lib/frc.chargers.utils.math/input-modulus.html","searchKeys":["inputModulus","fun Double.inputModulus(min: Double, max: Double): Double","frc.chargers.utils.math.inputModulus"]},{"name":"fun Double.inputModulus(range: ClosedRange<Double>): Double","description":"frc.chargers.utils.math.inputModulus","location":"-charger-lib/frc.chargers.utils.math/input-modulus.html","searchKeys":["inputModulus","fun Double.inputModulus(range: ClosedRange<Double>): Double","frc.chargers.utils.math.inputModulus"]},{"name":"fun Double.mapBetweenRanges(from: ClosedRange<Double>, to: ClosedRange<Double>): Double","description":"frc.chargers.utils.math.mapBetweenRanges","location":"-charger-lib/frc.chargers.utils.math/map-between-ranges.html","searchKeys":["mapBetweenRanges","fun Double.mapBetweenRanges(from: ClosedRange<Double>, to: ClosedRange<Double>): Double","frc.chargers.utils.math.mapBetweenRanges"]},{"name":"fun Double.preserveSign(initialValue: Double): Double","description":"frc.chargers.utils.math.preserveSign","location":"-charger-lib/frc.chargers.utils.math/preserve-sign.html","searchKeys":["preserveSign","fun Double.preserveSign(initialValue: Double): Double","frc.chargers.utils.math.preserveSign"]},{"name":"fun Double.revertIfInvalid(previousValue: Double, additionalInvalidCond: Boolean = false): Double","description":"frc.chargers.utils.revertIfInvalid","location":"-charger-lib/frc.chargers.utils/revert-if-invalid.html","searchKeys":["revertIfInvalid","fun Double.revertIfInvalid(previousValue: Double, additionalInvalidCond: Boolean = false): Double","frc.chargers.utils.revertIfInvalid"]},{"name":"fun Encoder.withOffset(zeroOffset: Angle): Encoder","description":"frc.chargers.hardware.sensors.withOffset","location":"-charger-lib/frc.chargers.hardware.sensors/with-offset.html","searchKeys":["withOffset","fun Encoder.withOffset(zeroOffset: Angle): Encoder","frc.chargers.hardware.sensors.withOffset"]},{"name":"fun EncoderDifferentialDrivetrain.characterize(forwards: Boolean = true, vararg requirements: Subsystem): FeedForwardCharacterization","description":"frc.chargers.commands.characterize","location":"-charger-lib/frc.chargers.commands/characterize.html","searchKeys":["characterize","fun EncoderDifferentialDrivetrain.characterize(forwards: Boolean = true, vararg requirements: Subsystem): FeedForwardCharacterization","frc.chargers.commands.characterize"]},{"name":"fun EncoderHolonomicDrivetrain(turnMotors: SwerveMotors<EncoderMotorController>, turnEncoders: SwerveEncoders<PositionEncoder> = turnMotors.getEncoders(), driveMotors: SwerveMotors<EncoderMotorController>, turnGearbox: DCMotor, driveGearbox: DCMotor, hardwareData: SwerveHardwareData, controlData: SwerveControlData, useOnboardPID: Boolean = false, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), realPoseSuppliers: List<VisionPoseSupplier> = listOf(), simPoseSuppliers: List<VisionPoseSupplier> = listOf()): EncoderHolonomicDrivetrain","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain.html","searchKeys":["EncoderHolonomicDrivetrain","fun EncoderHolonomicDrivetrain(turnMotors: SwerveMotors<EncoderMotorController>, turnEncoders: SwerveEncoders<PositionEncoder> = turnMotors.getEncoders(), driveMotors: SwerveMotors<EncoderMotorController>, turnGearbox: DCMotor, driveGearbox: DCMotor, hardwareData: SwerveHardwareData, controlData: SwerveControlData, useOnboardPID: Boolean = false, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), realPoseSuppliers: List<VisionPoseSupplier> = listOf(), simPoseSuppliers: List<VisionPoseSupplier> = listOf()): EncoderHolonomicDrivetrain","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain"]},{"name":"fun EncoderHolonomicDrivetrain.characterizeDriveMotors(forwards: Boolean = true, vararg requirements: Subsystem): FeedForwardCharacterization","description":"frc.chargers.commands.characterizeDriveMotors","location":"-charger-lib/frc.chargers.commands/characterize-drive-motors.html","searchKeys":["characterizeDriveMotors","fun EncoderHolonomicDrivetrain.characterizeDriveMotors(forwards: Boolean = true, vararg requirements: Subsystem): FeedForwardCharacterization","frc.chargers.commands.characterizeDriveMotors"]},{"name":"fun EncoderHolonomicDrivetrain.characterizeTurnMotors(vararg requirements: Subsystem): Command","description":"frc.chargers.commands.characterizeTurnMotors","location":"-charger-lib/frc.chargers.commands/characterize-turn-motors.html","searchKeys":["characterizeTurnMotors","fun EncoderHolonomicDrivetrain.characterizeTurnMotors(vararg requirements: Subsystem): Command","frc.chargers.commands.characterizeTurnMotors"]},{"name":"fun GoalEndState(velocity: Velocity, rotation: Angle): GoalEndState","description":"frc.chargers.pathplannerextensions.GoalEndState","location":"-charger-lib/frc.chargers.pathplannerextensions/-goal-end-state.html","searchKeys":["GoalEndState","fun GoalEndState(velocity: Velocity, rotation: Angle): GoalEndState","frc.chargers.pathplannerextensions.GoalEndState"]},{"name":"fun HeadingProvider.withOffset(zeroOffset: Angle): HeadingProvider","description":"frc.chargers.hardware.sensors.withOffset","location":"-charger-lib/frc.chargers.hardware.sensors/with-offset.html","searchKeys":["withOffset","fun HeadingProvider.withOffset(zeroOffset: Angle): HeadingProvider","frc.chargers.hardware.sensors.withOffset"]},{"name":"fun HeadingProvider.withZero(): HeadingProvider","description":"frc.chargers.hardware.sensors.withZero","location":"-charger-lib/frc.chargers.hardware.sensors/with-zero.html","searchKeys":["withZero","fun HeadingProvider.withZero(): HeadingProvider","frc.chargers.hardware.sensors.withZero"]},{"name":"fun InstantCommand(vararg subsystems: Subsystem, toRun: () -> Unit): InstantCommand","description":"frc.chargers.commands.InstantCommand","location":"-charger-lib/frc.chargers.commands/-instant-command.html","searchKeys":["InstantCommand","fun InstantCommand(vararg subsystems: Subsystem, toRun: () -> Unit): InstantCommand","frc.chargers.commands.InstantCommand"]},{"name":"fun MotorController.setVoltage(voltage: Voltage)","description":"frc.chargers.hardware.motorcontrol.setVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol/set-voltage.html","searchKeys":["setVoltage","fun MotorController.setVoltage(voltage: Voltage)","frc.chargers.hardware.motorcontrol.setVoltage"]},{"name":"fun PIDConstants.asPathPlannerConstants(): PIDConstants","description":"frc.chargers.pathplannerextensions.asPathPlannerConstants","location":"-charger-lib/frc.chargers.pathplannerextensions/as-path-planner-constants.html","searchKeys":["asPathPlannerConstants","fun PIDConstants.asPathPlannerConstants(): PIDConstants","frc.chargers.pathplannerextensions.asPathPlannerConstants"]},{"name":"fun PathConstraints(linearConstraints: LinearMotionConstraints, angularConstraints: AngularMotionConstraints): PathConstraints","description":"frc.chargers.pathplannerextensions.PathConstraints","location":"-charger-lib/frc.chargers.pathplannerextensions/-path-constraints.html","searchKeys":["PathConstraints","fun PathConstraints(linearConstraints: LinearMotionConstraints, angularConstraints: AngularMotionConstraints): PathConstraints","frc.chargers.pathplannerextensions.PathConstraints"]},{"name":"fun PathConstraints(maxLinearVelocity: Velocity, maxLinearAcceleration: Acceleration, maxAngularVelocity: AngularVelocity, maxAngularAcceleration: AngularAcceleration): PathConstraints","description":"frc.chargers.pathplannerextensions.PathConstraints","location":"-charger-lib/frc.chargers.pathplannerextensions/-path-constraints.html","searchKeys":["PathConstraints","fun PathConstraints(maxLinearVelocity: Velocity, maxLinearAcceleration: Acceleration, maxAngularVelocity: AngularVelocity, maxAngularAcceleration: AngularAcceleration): PathConstraints","frc.chargers.pathplannerextensions.PathConstraints"]},{"name":"fun PathPlannerPath(bezierPoints: List<UnitTranslation2d>, constraints: PathConstraints, endState: GoalEndState): PathPlannerPath","description":"frc.chargers.pathplannerextensions.PathPlannerPath","location":"-charger-lib/frc.chargers.pathplannerextensions/-path-planner-path.html","searchKeys":["PathPlannerPath","fun PathPlannerPath(bezierPoints: List<UnitTranslation2d>, constraints: PathConstraints, endState: GoalEndState): PathPlannerPath","frc.chargers.pathplannerextensions.PathPlannerPath"]},{"name":"fun Pose2d.ofUnit(unit: Distance): UnitPose2d","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun Pose2d.ofUnit(unit: Distance): UnitPose2d","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun Pose3d.ofUnit(unit: KmeasureUnit<DistanceDimension>): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun Pose3d.ofUnit(unit: KmeasureUnit<DistanceDimension>): UnitPose3d","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun PositionEncoder.withOffset(zeroOffset: Angle): PositionEncoder","description":"frc.chargers.hardware.sensors.withOffset","location":"-charger-lib/frc.chargers.hardware.sensors/with-offset.html","searchKeys":["withOffset","fun PositionEncoder.withOffset(zeroOffset: Angle): PositionEncoder","frc.chargers.hardware.sensors.withOffset"]},{"name":"fun Rotation2d.asAngle(): Angle","description":"frc.chargers.wpilibextensions.geometry.twodimensional.asAngle","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/as-angle.html","searchKeys":["asAngle","fun Rotation2d.asAngle(): Angle","frc.chargers.wpilibextensions.geometry.twodimensional.asAngle"]},{"name":"fun Rotation3d(roll: Angle, pitch: Angle, yaw: Angle): Rotation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.Rotation3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-rotation3d.html","searchKeys":["Rotation3d","fun Rotation3d(roll: Angle, pitch: Angle, yaw: Angle): Rotation3d","frc.chargers.wpilibextensions.geometry.threedimensional.Rotation3d"]},{"name":"fun RunCommand(vararg subsystems: Subsystem, toRun: () -> Unit): RunCommand","description":"frc.chargers.commands.RunCommand","location":"-charger-lib/frc.chargers.commands/-run-command.html","searchKeys":["RunCommand","fun RunCommand(vararg subsystems: Subsystem, toRun: () -> Unit): RunCommand","frc.chargers.commands.RunCommand"]},{"name":"fun Transform2d.ofUnit(unit: Distance): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun Transform2d.ofUnit(unit: Distance): UnitTransform2d","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun Transform3d.ofUnit(unit: KmeasureUnit<DistanceDimension>): UnitTransform3d","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun Transform3d.ofUnit(unit: KmeasureUnit<DistanceDimension>): UnitTransform3d","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun Translation2d.ofUnit(unit: Distance): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun Translation2d.ofUnit(unit: Distance): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun Translation3d.ofUnit(unit: Distance): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun Translation3d.ofUnit(unit: Distance): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun TrapezoidProfile.Constraints.ofUnit(angleUnit: Angle, timeUnit: Time): AngularMotionConstraints","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun TrapezoidProfile.Constraints.ofUnit(angleUnit: Angle, timeUnit: Time): AngularMotionConstraints","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun TrapezoidProfile.Constraints.ofUnit(distanceUnit: Distance, timeUnit: Time): LinearMotionConstraints","description":"frc.chargers.wpilibextensions.geometry.ofUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry/of-unit.html","searchKeys":["ofUnit","fun TrapezoidProfile.Constraints.ofUnit(distanceUnit: Distance, timeUnit: Time): LinearMotionConstraints","frc.chargers.wpilibextensions.geometry.ofUnit"]},{"name":"fun Trigger.onDoubleClick(clickTimeout: Time? = null, command: Command)","description":"frc.chargers.hardware.inputdevices.onDoubleClick","location":"-charger-lib/frc.chargers.hardware.inputdevices/on-double-click.html","searchKeys":["onDoubleClick","fun Trigger.onDoubleClick(clickTimeout: Time? = null, command: Command)","frc.chargers.hardware.inputdevices.onDoubleClick"]},{"name":"fun Trigger.whileTrueContinuous(command: Command)","description":"frc.chargers.hardware.inputdevices.whileTrueContinuous","location":"-charger-lib/frc.chargers.hardware.inputdevices/while-true-continuous.html","searchKeys":["whileTrueContinuous","fun Trigger.whileTrueContinuous(command: Command)","frc.chargers.hardware.inputdevices.whileTrueContinuous"]},{"name":"fun Trigger.withDoubleClick(clickTimeout: Time? = null): Trigger","description":"frc.chargers.hardware.inputdevices.withDoubleClick","location":"-charger-lib/frc.chargers.hardware.inputdevices/with-double-click.html","searchKeys":["withDoubleClick","fun Trigger.withDoubleClick(clickTimeout: Time? = null): Trigger","frc.chargers.hardware.inputdevices.withDoubleClick"]},{"name":"fun UnitPose2d.applyFlip(fieldLength: Distance): UnitPose2d","description":"frc.chargers.utils.applyFlip","location":"-charger-lib/frc.chargers.utils/apply-flip.html","searchKeys":["applyFlip","fun UnitPose2d.applyFlip(fieldLength: Distance): UnitPose2d","frc.chargers.utils.applyFlip"]},{"name":"fun UnitTranslation2d(norm: Distance, angle: Angle): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d.html","searchKeys":["UnitTranslation2d","fun UnitTranslation2d(norm: Distance, angle: Angle): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d"]},{"name":"fun UnitTranslation2d.applyFlip(fieldLength: Distance): UnitTranslation2d","description":"frc.chargers.utils.applyFlip","location":"-charger-lib/frc.chargers.utils/apply-flip.html","searchKeys":["applyFlip","fun UnitTranslation2d.applyFlip(fieldLength: Distance): UnitTranslation2d","frc.chargers.utils.applyFlip"]},{"name":"fun addCommand(c: Command)","description":"frc.chargers.commands.commandbuilder.CommandBuilder.addCommand","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/add-command.html","searchKeys":["addCommand","fun addCommand(c: Command)","frc.chargers.commands.commandbuilder.CommandBuilder.addCommand"]},{"name":"fun addRequirements(vararg requirements: Subsystem)","description":"frc.chargers.commands.commandbuilder.CommandBuilder.addRequirements","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/add-requirements.html","searchKeys":["addRequirements","fun addRequirements(vararg requirements: Subsystem)","frc.chargers.commands.commandbuilder.CommandBuilder.addRequirements"]},{"name":"fun andyMark(invertMotors: Boolean = false): DiffDriveHardwareData","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.Companion.andyMark","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/-companion/andy-mark.html","searchKeys":["andyMark","fun andyMark(invertMotors: Boolean = false): DiffDriveHardwareData","frc.chargers.constants.drivetrain.DiffDriveHardwareData.Companion.andyMark"]},{"name":"fun applyDeadband(value: Double): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.applyDeadband","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/apply-deadband.html","searchKeys":["applyDeadband","fun applyDeadband(value: Double): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.applyDeadband"]},{"name":"fun applyEquation(equation: Polynomial): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.applyEquation","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/apply-equation.html","searchKeys":["applyEquation","fun applyEquation(equation: Polynomial): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.applyEquation"]},{"name":"fun applyMultiplier(value: Double): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.applyMultiplier","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/apply-multiplier.html","searchKeys":["applyMultiplier","fun applyMultiplier(value: Double): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.applyMultiplier"]},{"name":"fun bezierFromPoses(vararg poses: UnitPose2d): List<UnitTranslation2d>","description":"frc.chargers.pathplannerextensions.bezierFromPoses","location":"-charger-lib/frc.chargers.pathplannerextensions/bezier-from-poses.html","searchKeys":["bezierFromPoses","fun bezierFromPoses(vararg poses: UnitPose2d): List<UnitTranslation2d>","frc.chargers.pathplannerextensions.bezierFromPoses"]},{"name":"fun boolean(default: Boolean, key: String? = null): TunableDelegate<Boolean>","description":"frc.chargers.constants.tuning.DashboardTuner.boolean","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/boolean.html","searchKeys":["boolean","fun boolean(default: Boolean, key: String? = null): TunableDelegate<Boolean>","frc.chargers.constants.tuning.DashboardTuner.boolean"]},{"name":"fun boolean(getValue: () -> Boolean): ReadOnlyLoggableInput<Boolean>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.boolean","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/boolean.html","searchKeys":["boolean","fun boolean(getValue: () -> Boolean): ReadOnlyLoggableInput<Boolean>","frc.chargers.advantagekitextensions.LoggableInputsProvider.boolean"]},{"name":"fun boolean(getValue: () -> Boolean, setValue: (Boolean) -> Unit): ReadWriteLoggableInput<Boolean>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.boolean","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/boolean.html","searchKeys":["boolean","fun boolean(getValue: () -> Boolean, setValue: (Boolean) -> Unit): ReadWriteLoggableInput<Boolean>","frc.chargers.advantagekitextensions.LoggableInputsProvider.boolean"]},{"name":"fun calculateSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","fun calculateSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"fun calculateSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity, continuousInputRange: ClosedRange<Angle>, mechanismMeasurement: Angle): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","fun calculateSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity, continuousInputRange: ClosedRange<Angle>, mechanismMeasurement: Angle): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.calculateSetpoint"]},{"name":"fun calculateSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity, continuousInputRange: ClosedRange<Angle>, mechanismMeasurement: Angle): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","fun calculateSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity, continuousInputRange: ClosedRange<Angle>, mechanismMeasurement: Angle): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"fun calculateSetpoint(targetPosition: Distance, targetVelocity: Velocity): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","fun calculateSetpoint(targetPosition: Distance, targetVelocity: Velocity): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"fun calculateSetpoint(targetPosition: Distance, targetVelocity: Velocity, continuousInputRange: ClosedRange<Distance>, mechanismMeasurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","fun calculateSetpoint(targetPosition: Distance, targetVelocity: Velocity, continuousInputRange: ClosedRange<Distance>, mechanismMeasurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.calculateSetpoint"]},{"name":"fun calculateSetpoint(targetPosition: Distance, targetVelocity: Velocity, continuousInputRange: ClosedRange<Distance>, mechanismMeasurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","fun calculateSetpoint(targetPosition: Distance, targetVelocity: Velocity, continuousInputRange: ClosedRange<Distance>, mechanismMeasurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"fun characterizeFFAngular(name: String, forwards: Boolean = true, setVoltage: (Voltage) -> Unit, getVelocity: () -> AngularVelocity, vararg requirements: Subsystem): FeedForwardCharacterization","description":"frc.chargers.commands.characterizeFFAngular","location":"-charger-lib/frc.chargers.commands/characterize-f-f-angular.html","searchKeys":["characterizeFFAngular","fun characterizeFFAngular(name: String, forwards: Boolean = true, setVoltage: (Voltage) -> Unit, getVelocity: () -> AngularVelocity, vararg requirements: Subsystem): FeedForwardCharacterization","frc.chargers.commands.characterizeFFAngular"]},{"name":"fun characterizeFFLinear(name: String, forwards: Boolean, setVoltage: (Voltage) -> Unit, getVelocity: () -> Velocity, vararg requirements: Subsystem): FeedForwardCharacterization","description":"frc.chargers.commands.characterizeFFLinear","location":"-charger-lib/frc.chargers.commands/characterize-f-f-linear.html","searchKeys":["characterizeFFLinear","fun characterizeFFLinear(name: String, forwards: Boolean, setVoltage: (Voltage) -> Unit, getVelocity: () -> Velocity, vararg requirements: Subsystem): FeedForwardCharacterization","frc.chargers.commands.characterizeFFLinear"]},{"name":"fun configureEpsilon(value: Double)","description":"frc.chargers.utils.math.equations.configureEpsilon","location":"-charger-lib/frc.chargers.utils.math.equations/configure-epsilon.html","searchKeys":["configureEpsilon","fun configureEpsilon(value: Double)","frc.chargers.utils.math.equations.configureEpsilon"]},{"name":"fun configureIMUSimulation(headingSupplier: () -> Angle = { Angle(0.0) }, chassisSpeedsSupplier: () -> ChassisSpeeds = { ChassisSpeeds() })","description":"frc.chargers.hardware.sensors.imu.configureIMUSimulation","location":"-charger-lib/frc.chargers.hardware.sensors.imu/configure-i-m-u-simulation.html","searchKeys":["configureIMUSimulation","fun configureIMUSimulation(headingSupplier: () -> Angle = { Angle(0.0) }, chassisSpeedsSupplier: () -> ChassisSpeeds = { ChassisSpeeds() })","frc.chargers.hardware.sensors.imu.configureIMUSimulation"]},{"name":"fun delay(time: Time)","description":"frc.chargers.wpilibextensions.delay","location":"-charger-lib/frc.chargers.wpilibextensions/delay.html","searchKeys":["delay","fun delay(time: Time)","frc.chargers.wpilibextensions.delay"]},{"name":"fun desaturate(maxAttainableSpeed: Velocity)","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.desaturate","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/desaturate.html","searchKeys":["desaturate","fun desaturate(maxAttainableSpeed: Velocity)","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.desaturate"]},{"name":"fun disableJsonDumpForAll()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.Companion.disableJsonDumpForAll","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-companion/disable-json-dump-for-all.html","searchKeys":["disableJsonDumpForAll","fun disableJsonDumpForAll()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.Companion.disableJsonDumpForAll"]},{"name":"fun double(default: Double, key: String? = null): TunableDelegate<Double>","description":"frc.chargers.constants.tuning.DashboardTuner.double","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/double.html","searchKeys":["double","fun double(default: Double, key: String? = null): TunableDelegate<Double>","frc.chargers.constants.tuning.DashboardTuner.double"]},{"name":"fun double(getValue: () -> Double): ReadOnlyLoggableInput<Double>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.double","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/double.html","searchKeys":["double","fun double(getValue: () -> Double): ReadOnlyLoggableInput<Double>","frc.chargers.advantagekitextensions.LoggableInputsProvider.double"]},{"name":"fun double(getValue: () -> Double, setValue: (Double) -> Unit): ReadWriteLoggableInput<Double>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.double","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/double.html","searchKeys":["double","fun double(getValue: () -> Double, setValue: (Double) -> Unit): ReadWriteLoggableInput<Double>","frc.chargers.advantagekitextensions.LoggableInputsProvider.double"]},{"name":"fun doubleList(getValue: () -> List<Double>): ReadOnlyLoggableInput<List<Double>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.doubleList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/double-list.html","searchKeys":["doubleList","fun doubleList(getValue: () -> List<Double>): ReadOnlyLoggableInput<List<Double>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.doubleList"]},{"name":"fun doubleList(getValue: () -> List<Double>, setValue: (List<Double>) -> Unit): ReadWriteLoggableInput<List<Double>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.doubleList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/double-list.html","searchKeys":["doubleList","fun doubleList(getValue: () -> List<Double>, setValue: (List<Double>) -> Unit): ReadWriteLoggableInput<List<Double>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.doubleList"]},{"name":"fun emptyAprilTagVisionData(): VisionData<VisionTarget.AprilTag>","description":"frc.chargers.hardware.sensors.vision.emptyAprilTagVisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/empty-april-tag-vision-data.html","searchKeys":["emptyAprilTagVisionData","fun emptyAprilTagVisionData(): VisionData<VisionTarget.AprilTag>","frc.chargers.hardware.sensors.vision.emptyAprilTagVisionData"]},{"name":"fun emptyGenericVisionData(): VisionData<VisionTarget.Generic>","description":"frc.chargers.hardware.sensors.vision.emptyGenericVisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/empty-generic-vision-data.html","searchKeys":["emptyGenericVisionData","fun emptyGenericVisionData(): VisionData<VisionTarget.Generic>","frc.chargers.hardware.sensors.vision.emptyGenericVisionData"]},{"name":"fun emptyMLVisionData(): VisionData<VisionTarget.ML>","description":"frc.chargers.hardware.sensors.vision.emptyMLVisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/empty-m-l-vision-data.html","searchKeys":["emptyMLVisionData","fun emptyMLVisionData(): VisionData<VisionTarget.ML>","frc.chargers.hardware.sensors.vision.emptyMLVisionData"]},{"name":"fun enableJsonDumpForAll()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.Companion.enableJsonDumpForAll","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-companion/enable-json-dump-for-all.html","searchKeys":["enableJsonDumpForAll","fun enableJsonDumpForAll()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.Companion.enableJsonDumpForAll"]},{"name":"fun error(group: String = \"Alerts\", text: String): Alert","description":"frc.chargers.wpilibextensions.Alert.Companion.error","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-companion/error.html","searchKeys":["error","fun error(group: String = \"Alerts\", text: String): Alert","frc.chargers.wpilibextensions.Alert.Companion.error"]},{"name":"fun falcon(canId: Int, canBus: String = \"rio\", factoryDefault: Boolean = true, configure: ChargerTalonFXConfiguration.() -> Unit = {}): ChargerTalonFX","description":"frc.chargers.hardware.motorcontrol.ctre.falcon","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/falcon.html","searchKeys":["falcon","fun falcon(canId: Int, canBus: String = \"rio\", factoryDefault: Boolean = true, configure: ChargerTalonFXConfiguration.() -> Unit = {}): ChargerTalonFX","frc.chargers.hardware.motorcontrol.ctre.falcon"]},{"name":"fun flipXCoord(xCoordinate: Length, fieldLength: Distance): Length","description":"frc.chargers.utils.flipXCoord","location":"-charger-lib/frc.chargers.utils/flip-x-coord.html","searchKeys":["flipXCoord","fun flipXCoord(xCoordinate: Length, fieldLength: Distance): Length","frc.chargers.utils.flipXCoord"]},{"name":"fun forEach(predicate: (E) -> Unit)","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.forEach","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/for-each.html","searchKeys":["forEach","fun forEach(predicate: (E) -> Unit)","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.forEach"]},{"name":"fun forEach(predicate: (M) -> Unit)","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.forEach","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/for-each.html","searchKeys":["forEach","fun forEach(predicate: (M) -> Unit)","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.forEach"]},{"name":"fun fpgaTimestamp(): Time","description":"frc.chargers.wpilibextensions.fpgaTimestamp","location":"-charger-lib/frc.chargers.wpilibextensions/fpga-timestamp.html","searchKeys":["fpgaTimestamp","fun fpgaTimestamp(): Time","frc.chargers.wpilibextensions.fpgaTimestamp"]},{"name":"fun fpgaTimestampReal(): Time","description":"frc.chargers.wpilibextensions.fpgaTimestampReal","location":"-charger-lib/frc.chargers.wpilibextensions/fpga-timestamp-real.html","searchKeys":["fpgaTimestampReal","fun fpgaTimestampReal(): Time","frc.chargers.wpilibextensions.fpgaTimestampReal"]},{"name":"fun fromSI(kS: Double, kG: Double, kV: Double, kA: Double): ArmFFConstants","description":"frc.chargers.controls.feedforward.ArmFFConstants.Companion.fromSI","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/-companion/from-s-i.html","searchKeys":["fromSI","fun fromSI(kS: Double, kG: Double, kV: Double, kA: Double): ArmFFConstants","frc.chargers.controls.feedforward.ArmFFConstants.Companion.fromSI"]},{"name":"fun fromSI(kS: Double, kG: Double, kV: Double, kA: Double): ElevatorFFConstants","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.Companion.fromSI","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/-companion/from-s-i.html","searchKeys":["fromSI","fun fromSI(kS: Double, kG: Double, kV: Double, kA: Double): ElevatorFFConstants","frc.chargers.controls.feedforward.ElevatorFFConstants.Companion.fromSI"]},{"name":"fun fromSI(kS: Double, kV: Double, kA: Double): AngularMotorFFConstants","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.Companion.fromSI","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/-companion/from-s-i.html","searchKeys":["fromSI","fun fromSI(kS: Double, kV: Double, kA: Double): AngularMotorFFConstants","frc.chargers.controls.feedforward.AngularMotorFFConstants.Companion.fromSI"]},{"name":"fun fromSI(kS: Double, kV: Double, kA: Double): LinearMotorFFConstants","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.Companion.fromSI","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/-companion/from-s-i.html","searchKeys":["fromSI","fun fromSI(kS: Double, kV: Double, kA: Double): LinearMotorFFConstants","frc.chargers.controls.feedforward.LinearMotorFFConstants.Companion.fromSI"]},{"name":"fun getBaseValue(): TriggerValue","description":"frc.chargers.hardware.inputdevices.InputAxis.getBaseValue","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/get-base-value.html","searchKeys":["getBaseValue","fun getBaseValue(): TriggerValue","frc.chargers.hardware.inputdevices.InputAxis.getBaseValue"]},{"name":"fun getDistance(other: UnitTranslation2d): Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.getDistance","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/get-distance.html","searchKeys":["getDistance","fun getDistance(other: UnitTranslation2d): Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.getDistance"]},{"name":"fun getDistance(other: UnitTranslation3d): Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.getDistance","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/get-distance.html","searchKeys":["getDistance","fun getDistance(other: UnitTranslation3d): Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.getDistance"]},{"name":"fun getEncoders(): SwerveEncoders<Encoder>","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.getEncoders","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/get-encoders.html","searchKeys":["getEncoders","fun getEncoders(): SwerveEncoders<Encoder>","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.getEncoders"]},{"name":"fun getSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.getSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/get-setpoint.html","searchKeys":["getSetpoint","fun getSetpoint(targetPosition: Angle, targetVelocity: AngularVelocity): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.getSetpoint"]},{"name":"fun getSetpoint(targetPosition: Distance, targetVelocity: Velocity): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.getSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/get-setpoint.html","searchKeys":["getSetpoint","fun getSetpoint(targetPosition: Distance, targetVelocity: Velocity): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.getSetpoint"]},{"name":"fun inUnit(angleUnit: Angle, timeUnit: Time): TrapezoidProfile.Constraints","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/in-unit.html","searchKeys":["inUnit","fun inUnit(angleUnit: Angle, timeUnit: Time): TrapezoidProfile.Constraints","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.inUnit"]},{"name":"fun inUnit(distanceUnit: Distance, timeUnit: Time): TrapezoidProfile.Constraints","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/in-unit.html","searchKeys":["inUnit","fun inUnit(distanceUnit: Distance, timeUnit: Time): TrapezoidProfile.Constraints","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.inUnit"]},{"name":"fun inUnit(unit: Distance): Transform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/in-unit.html","searchKeys":["inUnit","fun inUnit(unit: Distance): Transform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.inUnit"]},{"name":"fun inUnit(unit: Distance): Translation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/in-unit.html","searchKeys":["inUnit","fun inUnit(unit: Distance): Translation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.inUnit"]},{"name":"fun inUnit(unit: Distance): Translation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/in-unit.html","searchKeys":["inUnit","fun inUnit(unit: Distance): Translation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.inUnit"]},{"name":"fun inUnit(unit: KmeasureUnit<DistanceDimension>): Pose2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/in-unit.html","searchKeys":["inUnit","fun inUnit(unit: KmeasureUnit<DistanceDimension>): Pose2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.inUnit"]},{"name":"fun inUnit(unit: KmeasureUnit<DistanceDimension>): Pose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/in-unit.html","searchKeys":["inUnit","fun inUnit(unit: KmeasureUnit<DistanceDimension>): Pose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.inUnit"]},{"name":"fun inUnit(unit: KmeasureUnit<DistanceDimension>): Transform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.inUnit","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/in-unit.html","searchKeys":["inUnit","fun inUnit(unit: KmeasureUnit<DistanceDimension>): Transform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.inUnit"]},{"name":"fun info(group: String = \"Alerts\", text: String): Alert","description":"frc.chargers.wpilibextensions.Alert.Companion.info","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-companion/info.html","searchKeys":["info","fun info(group: String = \"Alerts\", text: String): Alert","frc.chargers.wpilibextensions.Alert.Companion.info"]},{"name":"fun int(getValue: () -> Int): ReadOnlyLoggableInput<Int>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.int","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/int.html","searchKeys":["int","fun int(getValue: () -> Int): ReadOnlyLoggableInput<Int>","frc.chargers.advantagekitextensions.LoggableInputsProvider.int"]},{"name":"fun int(getValue: () -> Int, setValue: (Int) -> Unit): ReadWriteLoggableInput<Int>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.int","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/int.html","searchKeys":["int","fun int(getValue: () -> Int, setValue: (Int) -> Unit): ReadWriteLoggableInput<Int>","frc.chargers.advantagekitextensions.LoggableInputsProvider.int"]},{"name":"fun intList(getValue: () -> List<Int>): ReadOnlyLoggableInput<List<Int>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.intList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/int-list.html","searchKeys":["intList","fun intList(getValue: () -> List<Int>): ReadOnlyLoggableInput<List<Int>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.intList"]},{"name":"fun intList(getValue: () -> List<Int>, setValue: (List<Int>) -> Unit): ReadWriteLoggableInput<List<Int>>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.intList","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/int-list.html","searchKeys":["intList","fun intList(getValue: () -> List<Int>, setValue: (List<Int>) -> Unit): ReadWriteLoggableInput<List<Int>>","frc.chargers.advantagekitextensions.LoggableInputsProvider.intList"]},{"name":"fun interface AxisModifier","description":"frc.chargers.hardware.inputdevices.AxisModifier","location":"-charger-lib/frc.chargers.hardware.inputdevices/-axis-modifier/index.html","searchKeys":["AxisModifier","fun interface AxisModifier","frc.chargers.hardware.inputdevices.AxisModifier"]},{"name":"fun interface Controller<out T>","description":"frc.chargers.controls.Controller","location":"-charger-lib/frc.chargers.controls/-controller/index.html","searchKeys":["Controller","fun interface Controller<out T>","frc.chargers.controls.Controller"]},{"name":"fun interface DifferentialDrivetrain : Subsystem","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/index.html","searchKeys":["DifferentialDrivetrain","fun interface DifferentialDrivetrain : Subsystem","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain"]},{"name":"fun interface Feedforward<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>","description":"frc.chargers.controls.feedforward.Feedforward","location":"-charger-lib/frc.chargers.controls.feedforward/-feedforward/index.html","searchKeys":["Feedforward","fun interface Feedforward<I : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>","frc.chargers.controls.feedforward.Feedforward"]},{"name":"fun interface SetpointSupplier<S : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>","description":"frc.chargers.controls.SetpointSupplier","location":"-charger-lib/frc.chargers.controls/-setpoint-supplier/index.html","searchKeys":["SetpointSupplier","fun interface SetpointSupplier<S : Dimension<*, *, *, *>, O : Dimension<*, *, *, *>>","frc.chargers.controls.SetpointSupplier"]},{"name":"fun loopFor(timeInterval: Time, command: Command): ParallelRaceGroup","description":"frc.chargers.commands.commandbuilder.CommandBuilder.loopFor","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/loop-for.html","searchKeys":["loopFor","fun loopFor(timeInterval: Time, command: Command): ParallelRaceGroup","frc.chargers.commands.commandbuilder.CommandBuilder.loopFor"]},{"name":"fun loopForever(vararg requirements: Subsystem, execute: CodeBlockContext.() -> Unit): RunCommand","description":"frc.chargers.commands.commandbuilder.CommandBuilder.loopForever","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/loop-forever.html","searchKeys":["loopForever","fun loopForever(vararg requirements: Subsystem, execute: CodeBlockContext.() -> Unit): RunCommand","frc.chargers.commands.commandbuilder.CommandBuilder.loopForever"]},{"name":"fun loopForeverCommand(vararg subsystems: Subsystem, toRun: () -> Unit): RunCommand","description":"frc.chargers.commands.loopForeverCommand","location":"-charger-lib/frc.chargers.commands/loop-forever-command.html","searchKeys":["loopForeverCommand","fun loopForeverCommand(vararg subsystems: Subsystem, toRun: () -> Unit): RunCommand","frc.chargers.commands.loopForeverCommand"]},{"name":"fun mapToRange(range: ClosedRange<Double>): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.mapToRange","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/map-to-range.html","searchKeys":["mapToRange","fun mapToRange(range: ClosedRange<Double>): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.mapToRange"]},{"name":"fun mk4iL1(maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA, trackWidth: Distance, wheelBase: Distance): SwerveHardwareData","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.Companion.mk4iL1","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/-companion/mk4i-l1.html","searchKeys":["mk4iL1","fun mk4iL1(maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA, trackWidth: Distance, wheelBase: Distance): SwerveHardwareData","frc.chargers.constants.drivetrain.SwerveHardwareData.Companion.mk4iL1"]},{"name":"fun mk4iL2(maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, trackWidth: Distance, wheelBase: Distance, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA): SwerveHardwareData","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.Companion.mk4iL2","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/-companion/mk4i-l2.html","searchKeys":["mk4iL2","fun mk4iL2(maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, trackWidth: Distance, wheelBase: Distance, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA): SwerveHardwareData","frc.chargers.constants.drivetrain.SwerveHardwareData.Companion.mk4iL2"]},{"name":"fun mk4iL3(maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, trackWidth: Distance, wheelBase: Distance, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA): SwerveHardwareData","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.Companion.mk4iL3","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/-companion/mk4i-l3.html","searchKeys":["mk4iL3","fun mk4iL3(maxModuleSpeed: Velocity = DEFAULT_MAX_MODULE_SPEED, trackWidth: Distance, wheelBase: Distance, turnInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_TURN_INERTIA, driveInertiaMoment: MomentOfInertia = DEFAULT_SWERVE_DRIVE_INERTIA): SwerveHardwareData","frc.chargers.constants.drivetrain.SwerveHardwareData.Companion.mk4iL3"]},{"name":"fun nullableDouble(getValue: () -> Double?): ReadOnlyLoggableInput<Double?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableDouble","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-double.html","searchKeys":["nullableDouble","fun nullableDouble(getValue: () -> Double?): ReadOnlyLoggableInput<Double?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableDouble"]},{"name":"fun nullableDouble(getValue: () -> Double?, setValue: (Double?) -> Unit): ReadWriteLoggableInput<Double?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableDouble","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-double.html","searchKeys":["nullableDouble","fun nullableDouble(getValue: () -> Double?, setValue: (Double?) -> Unit): ReadWriteLoggableInput<Double?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableDouble"]},{"name":"fun nullableInt(getValue: () -> Int?): ReadOnlyLoggableInput<Int?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableInt","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-int.html","searchKeys":["nullableInt","fun nullableInt(getValue: () -> Int?): ReadOnlyLoggableInput<Int?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableInt"]},{"name":"fun nullableInt(getValue: () -> Int?, setValue: (Int?) -> Unit): ReadWriteLoggableInput<Int?>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableInt","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/nullable-int.html","searchKeys":["nullableInt","fun nullableInt(getValue: () -> Int?, setValue: (Int?) -> Unit): ReadWriteLoggableInput<Int?>","frc.chargers.advantagekitextensions.LoggableInputsProvider.nullableInt"]},{"name":"fun pidConstants(default: PIDConstants, key: String? = null): TunableDelegate<PIDConstants>","description":"frc.chargers.constants.tuning.DashboardTuner.pidConstants","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/pid-constants.html","searchKeys":["pidConstants","fun pidConstants(default: PIDConstants, key: String? = null): TunableDelegate<PIDConstants>","frc.chargers.constants.tuning.DashboardTuner.pidConstants"]},{"name":"fun pidConstants(kP: Double, kI: Double, kD: Double, key: String? = null): TunableDelegate<PIDConstants>","description":"frc.chargers.constants.tuning.DashboardTuner.pidConstants","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/pid-constants.html","searchKeys":["pidConstants","fun pidConstants(kP: Double, kI: Double, kD: Double, key: String? = null): TunableDelegate<PIDConstants>","frc.chargers.constants.tuning.DashboardTuner.pidConstants"]},{"name":"fun preserveSign(): (Double) -> Double","description":"frc.chargers.utils.math.equations.Polynomial.preserveSign","location":"-charger-lib/frc.chargers.utils.math.equations/-polynomial/preserve-sign.html","searchKeys":["preserveSign","fun preserveSign(): (Double) -> Double","frc.chargers.utils.math.equations.Polynomial.preserveSign"]},{"name":"fun preserveSign(): (Quantity<I>) -> Quantity<O>","description":"frc.chargers.utils.math.equations.UnitPolynomial.preserveSign","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/preserve-sign.html","searchKeys":["preserveSign","fun preserveSign(): (Quantity<I>) -> Quantity<O>","frc.chargers.utils.math.equations.UnitPolynomial.preserveSign"]},{"name":"fun printToConsole(message: () -> Any?): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.printToConsole","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/print-to-console.html","searchKeys":["printToConsole","fun printToConsole(message: () -> Any?): Command","frc.chargers.commands.commandbuilder.CommandBuilder.printToConsole"]},{"name":"fun rateLimit(limit: Frequency): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.rateLimit","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/rate-limit.html","searchKeys":["rateLimit","fun rateLimit(limit: Frequency): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.rateLimit"]},{"name":"fun rateLimit(positiveLimit: Frequency, negativeLimit: Frequency): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.rateLimit","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/rate-limit.html","searchKeys":["rateLimit","fun rateLimit(positiveLimit: Frequency, negativeLimit: Frequency): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.rateLimit"]},{"name":"fun removeFromLoop(runnable: () -> Unit)","description":"frc.chargers.framework.ChargerRobot.Companion.removeFromLoop","location":"-charger-lib/frc.chargers.framework/-charger-robot/-companion/remove-from-loop.html","searchKeys":["removeFromLoop","fun removeFromLoop(runnable: () -> Unit)","frc.chargers.framework.ChargerRobot.Companion.removeFromLoop"]},{"name":"fun rotateBy(other: Angle): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.rotateBy","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/rotate-by.html","searchKeys":["rotateBy","fun rotateBy(other: Angle): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.rotateBy"]},{"name":"fun runDependingOnIndex(indexSupplier: () -> Int, vararg commands: Command, block: CommandBuilder.() -> Unit = {}): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runDependingOnIndex","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-depending-on-index.html","searchKeys":["runDependingOnIndex","fun runDependingOnIndex(indexSupplier: () -> Int, vararg commands: Command, block: CommandBuilder.() -> Unit = {}): Command","frc.chargers.commands.commandbuilder.CommandBuilder.runDependingOnIndex"]},{"name":"fun runIf(condition: () -> Boolean, onTrue: Command, onFalse: Command): ConditionalCommand","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runIf","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-if.html","searchKeys":["runIf","fun runIf(condition: () -> Boolean, onTrue: Command, onFalse: Command): ConditionalCommand","frc.chargers.commands.commandbuilder.CommandBuilder.runIf"]},{"name":"fun runOnce(vararg requirements: Subsystem, execute: CodeBlockContext.() -> Unit): InstantCommand","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runOnce","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-once.html","searchKeys":["runOnce","fun runOnce(vararg requirements: Subsystem, execute: CodeBlockContext.() -> Unit): InstantCommand","frc.chargers.commands.commandbuilder.CommandBuilder.runOnce"]},{"name":"fun runOnceCommand(vararg subsystems: Subsystem, toRun: () -> Unit): InstantCommand","description":"frc.chargers.commands.runOnceCommand","location":"-charger-lib/frc.chargers.commands/run-once-command.html","searchKeys":["runOnceCommand","fun runOnceCommand(vararg subsystems: Subsystem, toRun: () -> Unit): InstantCommand","frc.chargers.commands.runOnceCommand"]},{"name":"fun runParallelUntilAllFinish(vararg commands: Command, block: CommandBuilder.() -> Unit): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runParallelUntilAllFinish","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-parallel-until-all-finish.html","searchKeys":["runParallelUntilAllFinish","fun runParallelUntilAllFinish(vararg commands: Command, block: CommandBuilder.() -> Unit): Command","frc.chargers.commands.commandbuilder.CommandBuilder.runParallelUntilAllFinish"]},{"name":"fun runParallelUntilFirstCommandFinishes(vararg commands: Command, block: CommandBuilder.() -> Unit): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runParallelUntilFirstCommandFinishes","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-parallel-until-first-command-finishes.html","searchKeys":["runParallelUntilFirstCommandFinishes","fun runParallelUntilFirstCommandFinishes(vararg commands: Command, block: CommandBuilder.() -> Unit): Command","frc.chargers.commands.commandbuilder.CommandBuilder.runParallelUntilFirstCommandFinishes"]},{"name":"fun runParallelUntilOneFinishes(vararg commands: Command, block: CommandBuilder.() -> Unit): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runParallelUntilOneFinishes","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-parallel-until-one-finishes.html","searchKeys":["runParallelUntilOneFinishes","fun runParallelUntilOneFinishes(vararg commands: Command, block: CommandBuilder.() -> Unit): Command","frc.chargers.commands.commandbuilder.CommandBuilder.runParallelUntilOneFinishes"]},{"name":"fun runPeriodically(addToFront: Boolean = false, runnable: () -> Unit)","description":"frc.chargers.framework.ChargerRobot.Companion.runPeriodically","location":"-charger-lib/frc.chargers.framework/-charger-robot/-companion/run-periodically.html","searchKeys":["runPeriodically","fun runPeriodically(addToFront: Boolean = false, runnable: () -> Unit)","frc.chargers.framework.ChargerRobot.Companion.runPeriodically"]},{"name":"fun runPeriodicallyWithLowPriority(addToFront: Boolean = false, runnable: () -> Unit)","description":"frc.chargers.framework.ChargerRobot.Companion.runPeriodicallyWithLowPriority","location":"-charger-lib/frc.chargers.framework/-charger-robot/-companion/run-periodically-with-low-priority.html","searchKeys":["runPeriodicallyWithLowPriority","fun runPeriodicallyWithLowPriority(addToFront: Boolean = false, runnable: () -> Unit)","frc.chargers.framework.ChargerRobot.Companion.runPeriodicallyWithLowPriority"]},{"name":"fun runSequentially(vararg commands: Command, block: CommandBuilder.() -> Unit = {}): Command","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runSequentially","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-sequentially.html","searchKeys":["runSequentially","fun runSequentially(vararg commands: Command, block: CommandBuilder.() -> Unit = {}): Command","frc.chargers.commands.commandbuilder.CommandBuilder.runSequentially"]},{"name":"fun runUntil(condition: () -> Boolean, command: Command): ParallelRaceGroup","description":"frc.chargers.commands.commandbuilder.CommandBuilder.runUntil","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/run-until.html","searchKeys":["runUntil","fun runUntil(condition: () -> Boolean, command: Command): ParallelRaceGroup","frc.chargers.commands.commandbuilder.CommandBuilder.runUntil"]},{"name":"fun setResolution(width: Int, height: Int)","description":"frc.chargers.hardware.sensors.vision.DriverCameraView.setResolution","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-driver-camera-view/set-resolution.html","searchKeys":["setResolution","fun setResolution(width: Int, height: Int)","frc.chargers.hardware.sensors.vision.DriverCameraView.setResolution"]},{"name":"fun setResolutionOf(id: Int, width: Int, height: Int)","description":"frc.chargers.hardware.sensors.vision.DriverCameraView.setResolutionOf","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-driver-camera-view/set-resolution-of.html","searchKeys":["setResolutionOf","fun setResolutionOf(id: Int, width: Int, height: Int)","frc.chargers.hardware.sensors.vision.DriverCameraView.setResolutionOf"]},{"name":"fun setSecondaryCurrentLimit(limit: Current, chopCycles: Int? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSecondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/set-secondary-current-limit.html","searchKeys":["setSecondaryCurrentLimit","fun setSecondaryCurrentLimit(limit: Current, chopCycles: Int? = null)","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSecondaryCurrentLimit"]},{"name":"fun setSmartCurrentLimit(limit: Current)","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSmartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/set-smart-current-limit.html","searchKeys":["setSmartCurrentLimit","fun setSmartCurrentLimit(limit: Current)","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSmartCurrentLimit"]},{"name":"fun setSmartCurrentLimit(stallLimit: Current, freeLimit: Current, limitSpeed: AngularVelocity? = null)","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSmartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/set-smart-current-limit.html","searchKeys":["setSmartCurrentLimit","fun setSmartCurrentLimit(stallLimit: Current, freeLimit: Current, limitSpeed: AngularVelocity? = null)","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSmartCurrentLimit"]},{"name":"fun setSoftLimit(direction: CANSparkBase.SoftLimitDirection, limit: Angle)","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSoftLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/set-soft-limit.html","searchKeys":["setSoftLimit","fun setSoftLimit(direction: CANSparkBase.SoftLimitDirection, limit: Angle)","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.setSoftLimit"]},{"name":"fun square(): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.square","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/square.html","searchKeys":["square","fun square(): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.square"]},{"name":"fun stallBackwards()","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stallBackwards","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/stall-backwards.html","searchKeys":["stallBackwards","fun stallBackwards()","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stallBackwards"]},{"name":"fun stallForwards()","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stallForwards","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/stall-forwards.html","searchKeys":["stallForwards","fun stallForwards()","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stallForwards"]},{"name":"fun stopInX()","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stopInX","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/stop-in-x.html","searchKeys":["stopInX","fun stopInX()","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stopInX"]},{"name":"fun string(getValue: () -> String): ReadOnlyLoggableInput<String>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.string","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/string.html","searchKeys":["string","fun string(getValue: () -> String): ReadOnlyLoggableInput<String>","frc.chargers.advantagekitextensions.LoggableInputsProvider.string"]},{"name":"fun string(getValue: () -> String, setValue: (String) -> Unit): ReadWriteLoggableInput<String>","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.string","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/string.html","searchKeys":["string","fun string(getValue: () -> String, setValue: (String) -> Unit): ReadWriteLoggableInput<String>","frc.chargers.advantagekitextensions.LoggableInputsProvider.string"]},{"name":"fun subgroup(group: String): LoggableInputsProvider","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.subgroup","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/subgroup.html","searchKeys":["subgroup","fun subgroup(group: String): LoggableInputsProvider","frc.chargers.advantagekitextensions.LoggableInputsProvider.subgroup"]},{"name":"fun swerveDrive(powers: ChassisPowers, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.swerveDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/swerve-drive.html","searchKeys":["swerveDrive","fun swerveDrive(powers: ChassisPowers, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.swerveDrive"]},{"name":"fun swerveDrive(xPower: Double, yPower: Double, rotationPower: Double, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.swerveDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/swerve-drive.html","searchKeys":["swerveDrive","fun swerveDrive(xPower: Double, yPower: Double, rotationPower: Double, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.swerveDrive"]},{"name":"fun switchToCamera(id: Int)","description":"frc.chargers.hardware.sensors.vision.DriverCameraView.switchToCamera","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-driver-camera-view/switch-to-camera.html","searchKeys":["switchToCamera","fun switchToCamera(id: Int)","frc.chargers.hardware.sensors.vision.DriverCameraView.switchToCamera"]},{"name":"fun timeSinceMatchStart(): Time","description":"frc.chargers.wpilibextensions.timeSinceMatchStart","location":"-charger-lib/frc.chargers.wpilibextensions/time-since-match-start.html","searchKeys":["timeSinceMatchStart","fun timeSinceMatchStart(): Time","frc.chargers.wpilibextensions.timeSinceMatchStart"]},{"name":"fun toArray(): Array<SwerveModulePosition>","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.toArray","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/to-array.html","searchKeys":["toArray","fun toArray(): Array<SwerveModulePosition>","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.toArray"]},{"name":"fun toArray(): Array<SwerveModuleState>","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.toArray","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/to-array.html","searchKeys":["toArray","fun toArray(): Array<SwerveModuleState>","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.toArray"]},{"name":"fun toChassisSpeeds(maxLinearVelocity: Velocity, maxRotationalVelocity: AngularVelocity): ChassisSpeeds","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers.toChassisSpeeds","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/to-chassis-speeds.html","searchKeys":["toChassisSpeeds","fun toChassisSpeeds(maxLinearVelocity: Velocity, maxRotationalVelocity: AngularVelocity): ChassisSpeeds","frc.chargers.wpilibextensions.kinematics.ChassisPowers.toChassisSpeeds"]},{"name":"fun toPose2d(): UnitPose2d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.toPose2d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/to-pose2d.html","searchKeys":["toPose2d","fun toPose2d(): UnitPose2d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.toPose2d"]},{"name":"fun toPose3d(): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.toPose3d","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/to-pose3d.html","searchKeys":["toPose3d","fun toPose3d(): UnitPose3d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.toPose3d"]},{"name":"fun transformBy(other: UnitTransform3d): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.transformBy","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/transform-by.html","searchKeys":["transformBy","fun transformBy(other: UnitTransform3d): UnitPose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.transformBy"]},{"name":"fun valueOf(value: String): Alert.AlertType","description":"frc.chargers.wpilibextensions.Alert.AlertType.valueOf","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Alert.AlertType","frc.chargers.wpilibextensions.Alert.AlertType.valueOf"]},{"name":"fun valueOf(value: String): DiffDriveControlData.PathAlgorithm","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.valueOf","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-path-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DiffDriveControlData.PathAlgorithm","frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.valueOf"]},{"name":"fun valueOf(value: String): MotorData","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData.valueOf","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MotorData","frc.chargers.hardware.motorcontrol.rev.util.MotorData.valueOf"]},{"name":"fun values(): Array<Alert.AlertType>","description":"frc.chargers.wpilibextensions.Alert.AlertType.values","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-alert-type/values.html","searchKeys":["values","fun values(): Array<Alert.AlertType>","frc.chargers.wpilibextensions.Alert.AlertType.values"]},{"name":"fun values(): Array<DiffDriveControlData.PathAlgorithm>","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.values","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/-path-algorithm/values.html","searchKeys":["values","fun values(): Array<DiffDriveControlData.PathAlgorithm>","frc.chargers.constants.drivetrain.DiffDriveControlData.PathAlgorithm.values"]},{"name":"fun values(): Array<MotorData>","description":"frc.chargers.hardware.motorcontrol.rev.util.MotorData.values","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-motor-data/values.html","searchKeys":["values","fun values(): Array<MotorData>","frc.chargers.hardware.motorcontrol.rev.util.MotorData.values"]},{"name":"fun velocityDrive(leftSpeed: Velocity, rightSpeed: Velocity)","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocityDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/velocity-drive.html","searchKeys":["velocityDrive","fun velocityDrive(leftSpeed: Velocity, rightSpeed: Velocity)","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocityDrive"]},{"name":"fun velocityDrive(speeds: ChassisSpeeds)","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocityDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/velocity-drive.html","searchKeys":["velocityDrive","fun velocityDrive(speeds: ChassisSpeeds)","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocityDrive"]},{"name":"fun velocityDrive(speeds: ChassisSpeeds, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.velocityDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/velocity-drive.html","searchKeys":["velocityDrive","fun velocityDrive(speeds: ChassisSpeeds, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.velocityDrive"]},{"name":"fun velocityDrive(xVelocity: Velocity, yVelocity: Velocity, rotationSpeed: AngularVelocity)","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocityDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/velocity-drive.html","searchKeys":["velocityDrive","fun velocityDrive(xVelocity: Velocity, yVelocity: Velocity, rotationSpeed: AngularVelocity)","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocityDrive"]},{"name":"fun velocityDrive(xVelocity: Velocity, yVelocity: Velocity, rotationVelocity: AngularVelocity, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.velocityDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/velocity-drive.html","searchKeys":["velocityDrive","fun velocityDrive(xVelocity: Velocity, yVelocity: Velocity, rotationVelocity: AngularVelocity, fieldRelative: Boolean = RobotBase.isSimulation() || gyro != null)","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.velocityDrive"]},{"name":"fun waitFor(timeInterval: Time): WaitCommand","description":"frc.chargers.commands.commandbuilder.CommandBuilder.waitFor","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/wait-for.html","searchKeys":["waitFor","fun waitFor(timeInterval: Time): WaitCommand","frc.chargers.commands.commandbuilder.CommandBuilder.waitFor"]},{"name":"fun waitUntil(condition: () -> Boolean): WaitUntilCommand","description":"frc.chargers.commands.commandbuilder.CommandBuilder.waitUntil","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/wait-until.html","searchKeys":["waitUntil","fun waitUntil(condition: () -> Boolean): WaitUntilCommand","frc.chargers.commands.commandbuilder.CommandBuilder.waitUntil"]},{"name":"fun warning(group: String = \"Alerts\", text: String): Alert","description":"frc.chargers.wpilibextensions.Alert.Companion.warning","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-companion/warning.html","searchKeys":["warning","fun warning(group: String = \"Alerts\", text: String): Alert","frc.chargers.wpilibextensions.Alert.Companion.warning"]},{"name":"fun withFollowers(vararg followers: EncoderMotorController): ChargerTalonSRX","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.withFollowers","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/with-followers.html","searchKeys":["withFollowers","fun withFollowers(vararg followers: EncoderMotorController): ChargerTalonSRX","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.withFollowers"]},{"name":"fun withFollowers(vararg followers: SmartEncoderMotorController)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.withFollowers","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/with-followers.html","searchKeys":["withFollowers","fun withFollowers(vararg followers: SmartEncoderMotorController)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.withFollowers"]},{"name":"fun withFollowers(vararg followers: SmartEncoderMotorController): ChargerSparkFlex","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.withFollowers","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/with-followers.html","searchKeys":["withFollowers","fun withFollowers(vararg followers: SmartEncoderMotorController): ChargerSparkFlex","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.withFollowers"]},{"name":"fun withFollowers(vararg followers: SmartEncoderMotorController): ChargerSparkMax","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.withFollowers","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/with-followers.html","searchKeys":["withFollowers","fun withFollowers(vararg followers: SmartEncoderMotorController): ChargerSparkMax","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.withFollowers"]},{"name":"fun withModifier(modifier: AxisModifier): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.withModifier","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/with-modifier.html","searchKeys":["withModifier","fun withModifier(modifier: AxisModifier): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.withModifier"]},{"name":"fun withModifiers(vararg modifiers: AxisModifier): InputAxis","description":"frc.chargers.hardware.inputdevices.InputAxis.withModifiers","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/with-modifiers.html","searchKeys":["withModifiers","fun withModifiers(vararg modifiers: AxisModifier): InputAxis","frc.chargers.hardware.inputdevices.InputAxis.withModifiers"]},{"name":"fun withOffsets(topLeftZero: Angle, topRightZero: Angle, bottomLeftZero: Angle, bottomRightZero: Angle): SwerveEncoders<PositionEncoder>","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.withOffsets","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/with-offsets.html","searchKeys":["withOffsets","fun withOffsets(topLeftZero: Angle, topRightZero: Angle, bottomLeftZero: Angle, bottomRightZero: Angle): SwerveEncoders<PositionEncoder>","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.withOffsets"]},{"name":"infix fun <D : Dimension<*, *, *, *>> Quantity<D>.epsilonEquals(other: Quantity<D>): Boolean","description":"frc.chargers.utils.math.equations.epsilonEquals","location":"-charger-lib/frc.chargers.utils.math.equations/epsilon-equals.html","searchKeys":["epsilonEquals","infix fun <D : Dimension<*, *, *, *>> Quantity<D>.epsilonEquals(other: Quantity<D>): Boolean","frc.chargers.utils.math.equations.epsilonEquals"]},{"name":"infix fun Command.then(other: Command): Command","description":"frc.chargers.commands.then","location":"-charger-lib/frc.chargers.commands/then.html","searchKeys":["then","infix fun Command.then(other: Command): Command","frc.chargers.commands.then"]},{"name":"infix fun Double.epsilonEquals(other: Double): Boolean","description":"frc.chargers.utils.math.equations.epsilonEquals","location":"-charger-lib/frc.chargers.utils.math.equations/epsilon-equals.html","searchKeys":["epsilonEquals","infix fun Double.epsilonEquals(other: Double): Boolean","frc.chargers.utils.math.equations.epsilonEquals"]},{"name":"infix fun K.mapsTo(other: V)","description":"frc.chargers.utils.MappableContext.mapsTo","location":"-charger-lib/frc.chargers.utils/-mappable-context/maps-to.html","searchKeys":["mapsTo","infix fun K.mapsTo(other: V)","frc.chargers.utils.MappableContext.mapsTo"]},{"name":"infix fun roughlyEquals(other: ChassisPowers): Boolean","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers.roughlyEquals","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/roughly-equals.html","searchKeys":["roughlyEquals","infix fun roughlyEquals(other: ChassisPowers): Boolean","frc.chargers.wpilibextensions.kinematics.ChassisPowers.roughlyEquals"]},{"name":"inline fun <T : EncoderMotorController> containsMotors(): Boolean","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.containsMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/contains-motors.html","searchKeys":["containsMotors","inline fun <T : EncoderMotorController> containsMotors(): Boolean","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.containsMotors"]},{"name":"inline fun <T : PositionEncoder> containsEncoders(): Boolean","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.containsEncoders","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/contains-encoders.html","searchKeys":["containsEncoders","inline fun <T : PositionEncoder> containsEncoders(): Boolean","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.containsEncoders"]},{"name":"inline fun ChargerCANcoder(deviceId: Int, canBus: String = \"\", factoryDefault: Boolean = true, configure: CANcoderConfiguration.() -> Unit): ChargerCANcoder","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder.html","searchKeys":["ChargerCANcoder","inline fun ChargerCANcoder(deviceId: Int, canBus: String = \"\", factoryDefault: Boolean = true, configure: CANcoderConfiguration.() -> Unit): ChargerCANcoder","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder"]},{"name":"inline fun ChargerDutyCycleEncoder(channel: Int, configure: DutyCycleEncoderConfiguration.() -> Unit): ChargerDutyCycleEncoder","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder.html","searchKeys":["ChargerDutyCycleEncoder","inline fun ChargerDutyCycleEncoder(channel: Int, configure: DutyCycleEncoderConfiguration.() -> Unit): ChargerDutyCycleEncoder","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder"]},{"name":"inline fun ChargerDutyCycleEncoder(dutyCycle: DutyCycle, configure: DutyCycleEncoderConfiguration.() -> Unit): ChargerDutyCycleEncoder","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder.html","searchKeys":["ChargerDutyCycleEncoder","inline fun ChargerDutyCycleEncoder(dutyCycle: DutyCycle, configure: DutyCycleEncoderConfiguration.() -> Unit): ChargerDutyCycleEncoder","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder"]},{"name":"inline fun ChargerDutyCycleEncoder(source: DigitalSource, configure: DutyCycleEncoderConfiguration.() -> Unit): ChargerDutyCycleEncoder","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder.html","searchKeys":["ChargerDutyCycleEncoder","inline fun ChargerDutyCycleEncoder(source: DigitalSource, configure: DutyCycleEncoderConfiguration.() -> Unit): ChargerDutyCycleEncoder","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder"]},{"name":"inline fun Feedforward(constants: AngularMotorFFConstants, crossinline getTargetAccel: () -> AngularAcceleration = { AngularAcceleration(0.0) }): Feedforward<AngularVelocityDimension, VoltageDimension>","description":"frc.chargers.controls.feedforward.Feedforward","location":"-charger-lib/frc.chargers.controls.feedforward/-feedforward.html","searchKeys":["Feedforward","inline fun Feedforward(constants: AngularMotorFFConstants, crossinline getTargetAccel: () -> AngularAcceleration = { AngularAcceleration(0.0) }): Feedforward<AngularVelocityDimension, VoltageDimension>","frc.chargers.controls.feedforward.Feedforward"]},{"name":"inline fun Feedforward(constants: ArmFFConstants, crossinline getAngle: () -> Angle, crossinline getTargetAccel: () -> AngularAcceleration = { AngularAcceleration(0.0) }): Feedforward<AngularVelocityDimension, VoltageDimension>","description":"frc.chargers.controls.feedforward.Feedforward","location":"-charger-lib/frc.chargers.controls.feedforward/-feedforward.html","searchKeys":["Feedforward","inline fun Feedforward(constants: ArmFFConstants, crossinline getAngle: () -> Angle, crossinline getTargetAccel: () -> AngularAcceleration = { AngularAcceleration(0.0) }): Feedforward<AngularVelocityDimension, VoltageDimension>","frc.chargers.controls.feedforward.Feedforward"]},{"name":"inline fun Feedforward(constants: ElevatorFFConstants, crossinline getTargetAccel: () -> AngularAcceleration = { AngularAcceleration(0.0) }): Feedforward<VelocityDimension, VoltageDimension>","description":"frc.chargers.controls.feedforward.Feedforward","location":"-charger-lib/frc.chargers.controls.feedforward/-feedforward.html","searchKeys":["Feedforward","inline fun Feedforward(constants: ElevatorFFConstants, crossinline getTargetAccel: () -> AngularAcceleration = { AngularAcceleration(0.0) }): Feedforward<VelocityDimension, VoltageDimension>","frc.chargers.controls.feedforward.Feedforward"]},{"name":"inline fun Feedforward(constants: LinearMotorFFConstants, crossinline getTargetAccel: () -> Acceleration = { Acceleration(0.0) }): Feedforward<VelocityDimension, VoltageDimension>","description":"frc.chargers.controls.feedforward.Feedforward","location":"-charger-lib/frc.chargers.controls.feedforward/-feedforward.html","searchKeys":["Feedforward","inline fun Feedforward(constants: LinearMotorFFConstants, crossinline getTargetAccel: () -> Acceleration = { Acceleration(0.0) }): Feedforward<VelocityDimension, VoltageDimension>","frc.chargers.controls.feedforward.Feedforward"]},{"name":"inline fun brushedSparkMax(canBusId: Int, factoryDefault: Boolean = true, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): ChargerSparkMax","description":"frc.chargers.hardware.motorcontrol.rev.brushedSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/brushed-spark-max.html","searchKeys":["brushedSparkMax","inline fun brushedSparkMax(canBusId: Int, factoryDefault: Boolean = true, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): ChargerSparkMax","frc.chargers.hardware.motorcontrol.rev.brushedSparkMax"]},{"name":"inline fun buildCommand(name: String = \"Generic BuildCommand\", logIndividualCommands: Boolean = false, shouldConvertCommandsToProxy: Boolean = true, block: CommandBuilder.() -> Unit): Command","description":"frc.chargers.commands.commandbuilder.buildCommand","location":"-charger-lib/frc.chargers.commands.commandbuilder/build-command.html","searchKeys":["buildCommand","inline fun buildCommand(name: String = \"Generic BuildCommand\", logIndividualCommands: Boolean = false, shouldConvertCommandsToProxy: Boolean = true, block: CommandBuilder.() -> Unit): Command","frc.chargers.commands.commandbuilder.buildCommand"]},{"name":"inline fun forEachPosition(action: (SwerveModulePosition) -> Unit)","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.forEachPosition","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/for-each-position.html","searchKeys":["forEachPosition","inline fun forEachPosition(action: (SwerveModulePosition) -> Unit)","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.forEachPosition"]},{"name":"inline fun forEachState(action: (SwerveModuleState) -> Unit)","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.forEachState","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/for-each-state.html","searchKeys":["forEachState","inline fun forEachState(action: (SwerveModuleState) -> Unit)","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.forEachState"]},{"name":"inline fun loopFor(timeInterval: Time, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.commandbuilder.CommandBuilder.loopFor","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/loop-for.html","searchKeys":["loopFor","inline fun loopFor(timeInterval: Time, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","frc.chargers.commands.commandbuilder.CommandBuilder.loopFor"]},{"name":"inline fun loopUntil(noinline condition: () -> Boolean, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.commandbuilder.CommandBuilder.loopUntil","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/loop-until.html","searchKeys":["loopUntil","inline fun loopUntil(noinline condition: () -> Boolean, vararg requirements: Subsystem, crossinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","frc.chargers.commands.commandbuilder.CommandBuilder.loopUntil"]},{"name":"inline fun loopWhile(crossinline condition: () -> Boolean, vararg requirements: Subsystem, noinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","description":"frc.chargers.commands.commandbuilder.CommandBuilder.loopWhile","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/loop-while.html","searchKeys":["loopWhile","inline fun loopWhile(crossinline condition: () -> Boolean, vararg requirements: Subsystem, noinline execute: CodeBlockContext.() -> Unit): ParallelRaceGroup","frc.chargers.commands.commandbuilder.CommandBuilder.loopWhile"]},{"name":"inline fun neoSparkFlex(deviceId: Int, factoryDefault: Boolean = true, configure: ChargerSparkFlexConfiguration.() -> Unit = {}): ChargerSparkFlex","description":"frc.chargers.hardware.motorcontrol.rev.neoSparkFlex","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/neo-spark-flex.html","searchKeys":["neoSparkFlex","inline fun neoSparkFlex(deviceId: Int, factoryDefault: Boolean = true, configure: ChargerSparkFlexConfiguration.() -> Unit = {}): ChargerSparkFlex","frc.chargers.hardware.motorcontrol.rev.neoSparkFlex"]},{"name":"inline fun neoSparkMax(canBusId: Int, factoryDefault: Boolean = true, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): ChargerSparkMax","description":"frc.chargers.hardware.motorcontrol.rev.neoSparkMax","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/neo-spark-max.html","searchKeys":["neoSparkMax","inline fun neoSparkMax(canBusId: Int, factoryDefault: Boolean = true, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): ChargerSparkMax","frc.chargers.hardware.motorcontrol.rev.neoSparkMax"]},{"name":"inline fun onEnd(crossinline run: CodeBlockContext.(Boolean) -> Unit)","description":"frc.chargers.commands.commandbuilder.CommandBuilder.onEnd","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/on-end.html","searchKeys":["onEnd","inline fun onEnd(crossinline run: CodeBlockContext.(Boolean) -> Unit)","frc.chargers.commands.commandbuilder.CommandBuilder.onEnd"]},{"name":"inline fun recordLatency(logName: String? = null, toRun: () -> Unit): Time","description":"frc.chargers.advantagekitextensions.recordLatency","location":"-charger-lib/frc.chargers.advantagekitextensions/record-latency.html","searchKeys":["recordLatency","inline fun recordLatency(logName: String? = null, toRun: () -> Unit): Time","frc.chargers.advantagekitextensions.recordLatency"]},{"name":"inline fun redlineSRX(deviceNumber: Int, encoderTicksPerRotation: Int = 1024, factoryDefault: Boolean = true, configure: ChargerTalonSRXConfiguration.() -> Unit = {}): ChargerTalonSRX","description":"frc.chargers.hardware.motorcontrol.ctre.redlineSRX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/redline-s-r-x.html","searchKeys":["redlineSRX","inline fun redlineSRX(deviceNumber: Int, encoderTicksPerRotation: Int = 1024, factoryDefault: Boolean = true, configure: ChargerTalonSRXConfiguration.() -> Unit = {}): ChargerTalonSRX","frc.chargers.hardware.motorcontrol.ctre.redlineSRX"]},{"name":"inline fun safeConfigure(deviceName: String, getErrorInfo: () -> String = {\"[Nothing]\"}, configure: () -> Boolean)","description":"frc.chargers.hardware.configuration.safeConfigure","location":"-charger-lib/frc.chargers.hardware.configuration/safe-configure.html","searchKeys":["safeConfigure","inline fun safeConfigure(deviceName: String, getErrorInfo: () -> String = {\"[Nothing]\"}, configure: () -> Boolean)","frc.chargers.hardware.configuration.safeConfigure"]},{"name":"inline fun sparkFlexSwerveMotors(topLeft: ChargerSparkFlex, topRight: ChargerSparkFlex, bottomLeft: ChargerSparkFlex, bottomRight: ChargerSparkFlex, configure: ChargerSparkFlexConfiguration.() -> Unit = {}): SwerveMotors<ChargerSparkFlex>","description":"frc.chargers.hardware.subsystems.swervedrive.sparkFlexSwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/spark-flex-swerve-motors.html","searchKeys":["sparkFlexSwerveMotors","inline fun sparkFlexSwerveMotors(topLeft: ChargerSparkFlex, topRight: ChargerSparkFlex, bottomLeft: ChargerSparkFlex, bottomRight: ChargerSparkFlex, configure: ChargerSparkFlexConfiguration.() -> Unit = {}): SwerveMotors<ChargerSparkFlex>","frc.chargers.hardware.subsystems.swervedrive.sparkFlexSwerveMotors"]},{"name":"inline fun sparkFlexSwerveMotors(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, configure: ChargerSparkFlexConfiguration.() -> Unit): SwerveMotors<ChargerSparkFlex>","description":"frc.chargers.hardware.subsystems.swervedrive.sparkFlexSwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/spark-flex-swerve-motors.html","searchKeys":["sparkFlexSwerveMotors","inline fun sparkFlexSwerveMotors(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, configure: ChargerSparkFlexConfiguration.() -> Unit): SwerveMotors<ChargerSparkFlex>","frc.chargers.hardware.subsystems.swervedrive.sparkFlexSwerveMotors"]},{"name":"inline fun sparkMaxDrivetrain(topLeft: ChargerSparkMax, topRight: ChargerSparkMax, bottomLeft: ChargerSparkMax, bottomRight: ChargerSparkMax, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.differentialdrive.sparkMaxDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/spark-max-drivetrain.html","searchKeys":["sparkMaxDrivetrain","inline fun sparkMaxDrivetrain(topLeft: ChargerSparkMax, topRight: ChargerSparkMax, bottomLeft: ChargerSparkMax, bottomRight: ChargerSparkMax, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","frc.chargers.hardware.subsystems.differentialdrive.sparkMaxDrivetrain"]},{"name":"inline fun sparkMaxSwerveMotors(topLeft: ChargerSparkMax, topRight: ChargerSparkMax, bottomLeft: ChargerSparkMax, bottomRight: ChargerSparkMax, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): SwerveMotors<ChargerSparkMax>","description":"frc.chargers.hardware.subsystems.swervedrive.sparkMaxSwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/spark-max-swerve-motors.html","searchKeys":["sparkMaxSwerveMotors","inline fun sparkMaxSwerveMotors(topLeft: ChargerSparkMax, topRight: ChargerSparkMax, bottomLeft: ChargerSparkMax, bottomRight: ChargerSparkMax, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): SwerveMotors<ChargerSparkMax>","frc.chargers.hardware.subsystems.swervedrive.sparkMaxSwerveMotors"]},{"name":"inline fun sparkMaxSwerveMotors(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, type: CANSparkLowLevel.MotorType = CANSparkLowLevel.MotorType.kBrushless, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): SwerveMotors<ChargerSparkMax>","description":"frc.chargers.hardware.subsystems.swervedrive.sparkMaxSwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/spark-max-swerve-motors.html","searchKeys":["sparkMaxSwerveMotors","inline fun sparkMaxSwerveMotors(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, type: CANSparkLowLevel.MotorType = CANSparkLowLevel.MotorType.kBrushless, configure: ChargerSparkMaxConfiguration.() -> Unit = {}): SwerveMotors<ChargerSparkMax>","frc.chargers.hardware.subsystems.swervedrive.sparkMaxSwerveMotors"]},{"name":"inline fun swerveCANcoders(topLeft: ChargerCANcoder, topRight: ChargerCANcoder, bottomLeft: ChargerCANcoder, bottomRight: ChargerCANcoder, useAbsoluteSensor: Boolean, configure: CANcoderConfiguration.() -> Unit = {}): SwerveEncoders<ResettableEncoder>","description":"frc.chargers.hardware.subsystems.swervedrive.swerveCANcoders","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/swerve-c-a-ncoders.html","searchKeys":["swerveCANcoders","inline fun swerveCANcoders(topLeft: ChargerCANcoder, topRight: ChargerCANcoder, bottomLeft: ChargerCANcoder, bottomRight: ChargerCANcoder, useAbsoluteSensor: Boolean, configure: CANcoderConfiguration.() -> Unit = {}): SwerveEncoders<ResettableEncoder>","frc.chargers.hardware.subsystems.swervedrive.swerveCANcoders"]},{"name":"inline fun swerveCANcoders(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, useAbsoluteSensor: Boolean, configure: CANcoderConfiguration.() -> Unit = {}): SwerveEncoders<ResettableEncoder>","description":"frc.chargers.hardware.subsystems.swervedrive.swerveCANcoders","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/swerve-c-a-ncoders.html","searchKeys":["swerveCANcoders","inline fun swerveCANcoders(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, useAbsoluteSensor: Boolean, configure: CANcoderConfiguration.() -> Unit = {}): SwerveEncoders<ResettableEncoder>","frc.chargers.hardware.subsystems.swervedrive.swerveCANcoders"]},{"name":"inline fun talonFXDrivetrain(topLeft: ChargerTalonFX, topRight: ChargerTalonFX, bottomLeft: ChargerTalonFX, bottomRight: ChargerTalonFX, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier, configure: ChargerTalonFXConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.differentialdrive.talonFXDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/talon-f-x-drivetrain.html","searchKeys":["talonFXDrivetrain","inline fun talonFXDrivetrain(topLeft: ChargerTalonFX, topRight: ChargerTalonFX, bottomLeft: ChargerTalonFX, bottomRight: ChargerTalonFX, hardwareData: DiffDriveHardwareData = DiffDriveHardwareData.andyMark(), controlData: DiffDriveControlData = DiffDriveControlData.None, gyro: HeadingProvider? = null, startingPose: UnitPose2d = UnitPose2d(), vararg poseSuppliers: VisionPoseSupplier, configure: ChargerTalonFXConfiguration.() -> Unit = {}): EncoderDifferentialDrivetrain","frc.chargers.hardware.subsystems.differentialdrive.talonFXDrivetrain"]},{"name":"inline fun talonFXSwerveMotors(topLeft: ChargerTalonFX, topRight: ChargerTalonFX, bottomLeft: ChargerTalonFX, bottomRight: ChargerTalonFX, configure: ChargerTalonFXConfiguration.() -> Unit = {}): SwerveMotors<ChargerTalonFX>","description":"frc.chargers.hardware.subsystems.swervedrive.talonFXSwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/talon-f-x-swerve-motors.html","searchKeys":["talonFXSwerveMotors","inline fun talonFXSwerveMotors(topLeft: ChargerTalonFX, topRight: ChargerTalonFX, bottomLeft: ChargerTalonFX, bottomRight: ChargerTalonFX, configure: ChargerTalonFXConfiguration.() -> Unit = {}): SwerveMotors<ChargerTalonFX>","frc.chargers.hardware.subsystems.swervedrive.talonFXSwerveMotors"]},{"name":"inline fun talonFXSwerveMotors(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, configure: ChargerTalonFXConfiguration.() -> Unit = {}): SwerveMotors<ChargerTalonFX>","description":"frc.chargers.hardware.subsystems.swervedrive.talonFXSwerveMotors","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/talon-f-x-swerve-motors.html","searchKeys":["talonFXSwerveMotors","inline fun talonFXSwerveMotors(topLeftId: Int, topRightId: Int, bottomLeftId: Int, bottomRightId: Int, configure: ChargerTalonFXConfiguration.() -> Unit = {}): SwerveMotors<ChargerTalonFX>","frc.chargers.hardware.subsystems.swervedrive.talonFXSwerveMotors"]},{"name":"inline operator fun <T> get(vararg elements: T): Array<T>","description":"frc.chargers.utils.a.get","location":"-charger-lib/frc.chargers.utils/a/get.html","searchKeys":["get","inline operator fun <T> get(vararg elements: T): Array<T>","frc.chargers.utils.a.get"]},{"name":"inline operator fun invoke(crossinline getHeading: () -> Angle): HeadingProvider","description":"frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider.Companion.invoke","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-heading-provider/-companion/invoke.html","searchKeys":["invoke","inline operator fun invoke(crossinline getHeading: () -> Angle): HeadingProvider","frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider.Companion.invoke"]},{"name":"inline operator fun invoke(crossinline getXAccel: () -> Acceleration, crossinline getYAccel: () -> Acceleration, crossinline getZAccel: () -> Acceleration): ThreeAxisAccelerometer","description":"frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.Companion.invoke","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-accelerometer/-companion/invoke.html","searchKeys":["invoke","inline operator fun invoke(crossinline getXAccel: () -> Acceleration, crossinline getYAccel: () -> Acceleration, crossinline getZAccel: () -> Acceleration): ThreeAxisAccelerometer","frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.Companion.invoke"]},{"name":"inline operator fun invoke(crossinline getXSpeed: () -> Velocity, crossinline getYSpeed: () -> Velocity, crossinline getZSpeed: () -> Velocity): ThreeAxisSpeedometer","description":"frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.Companion.invoke","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-speedometer/-companion/invoke.html","searchKeys":["invoke","inline operator fun invoke(crossinline getXSpeed: () -> Velocity, crossinline getYSpeed: () -> Velocity, crossinline getZSpeed: () -> Velocity): ThreeAxisSpeedometer","frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.Companion.invoke"]},{"name":"inline operator fun invoke(crossinline getYaw: () -> Angle, crossinline getPitch: () -> Angle, crossinline getRoll: () -> Angle): ThreeAxisGyroscope","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.Companion.invoke","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/-companion/invoke.html","searchKeys":["invoke","inline operator fun invoke(crossinline getYaw: () -> Angle, crossinline getPitch: () -> Angle, crossinline getRoll: () -> Angle): ThreeAxisGyroscope","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.Companion.invoke"]},{"name":"inner class Accelerometer : ThreeAxisAccelerometer","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-accelerometer/index.html","searchKeys":["Accelerometer","inner class Accelerometer : ThreeAxisAccelerometer","frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer"]},{"name":"inner class Accelerometer : ThreeAxisAccelerometer","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-accelerometer/index.html","searchKeys":["Accelerometer","inner class Accelerometer : ThreeAxisAccelerometer","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer"]},{"name":"inner class ApriltagPipeline(val index: Int, logInputs: LoggableInputsProvider) : VisionPipeline<VisionTarget.AprilTag> ","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/index.html","searchKeys":["ApriltagPipeline","inner class ApriltagPipeline(val index: Int, logInputs: LoggableInputsProvider) : VisionPipeline<VisionTarget.AprilTag> ","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline"]},{"name":"inner class ApriltagPipeline(val index: Int, logInputs: LoggableInputsProvider) : VisionPipeline<VisionTarget.AprilTag> ","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/index.html","searchKeys":["ApriltagPipeline","inner class ApriltagPipeline(val index: Int, logInputs: LoggableInputsProvider) : VisionPipeline<VisionTarget.AprilTag> ","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline"]},{"name":"inner class ColorPipeline(val index: Int, logInputs: LoggableInputsProvider) : VisionPipeline<VisionTarget.Generic> ","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/index.html","searchKeys":["ColorPipeline","inner class ColorPipeline(val index: Int, logInputs: LoggableInputsProvider) : VisionPipeline<VisionTarget.Generic> ","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline"]},{"name":"inner class Gyroscope : ThreeAxisGyroscope","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-gyroscope/index.html","searchKeys":["Gyroscope","inner class Gyroscope : ThreeAxisGyroscope","frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope"]},{"name":"inner class Gyroscope : ThreeAxisGyroscope","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/index.html","searchKeys":["Gyroscope","inner class Gyroscope : ThreeAxisGyroscope","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope"]},{"name":"inner class MLDetectorPipeline(val index: Int, logInputs: LoggableInputsProvider) : ChargerLimelight.MLClassifierPipeline, VisionPipeline<VisionTarget.ML> ","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-detector-pipeline/index.html","searchKeys":["MLDetectorPipeline","inner class MLDetectorPipeline(val index: Int, logInputs: LoggableInputsProvider) : ChargerLimelight.MLClassifierPipeline, VisionPipeline<VisionTarget.ML> ","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline"]},{"name":"inner class PoseEstimator(robotToCamera: UnitTransform3d, fieldTags: AprilTagFieldLayout, strategy: PhotonPoseEstimator.PoseStrategy = PoseStrategy.MULTI_TAG_PNP_ON_COPROCESSOR) : PhotonPoseEstimator, VisionPoseSupplier","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/-pose-estimator/index.html","searchKeys":["PoseEstimator","inner class PoseEstimator(robotToCamera: UnitTransform3d, fieldTags: AprilTagFieldLayout, strategy: PhotonPoseEstimator.PoseStrategy = PoseStrategy.MULTI_TAG_PNP_ON_COPROCESSOR) : PhotonPoseEstimator, VisionPoseSupplier","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator"]},{"name":"inner class PoseEstimator(val cameraYaw: Angle) : VisionPoseSupplier","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/-pose-estimator/index.html","searchKeys":["PoseEstimator","inner class PoseEstimator(val cameraYaw: Angle) : VisionPoseSupplier","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator"]},{"name":"inner class Speedometer : ThreeAxisSpeedometer","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-speedometer/index.html","searchKeys":["Speedometer","inner class Speedometer : ThreeAxisSpeedometer","frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer"]},{"name":"interface AdvantageKitLoggable<out T>","description":"frc.chargers.advantagekitextensions.AdvantageKitLoggable","location":"-charger-lib/frc.chargers.advantagekitextensions/-advantage-kit-loggable/index.html","searchKeys":["AdvantageKitLoggable","interface AdvantageKitLoggable<out T>","frc.chargers.advantagekitextensions.AdvantageKitLoggable"]},{"name":"interface Classifier<T>","description":"frc.chargers.hardware.sensors.vision.Classifier","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-classifier/index.html","searchKeys":["Classifier","interface Classifier<T>","frc.chargers.hardware.sensors.vision.Classifier"]},{"name":"interface DiffDriveIO","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o/index.html","searchKeys":["DiffDriveIO","interface DiffDriveIO","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIO"]},{"name":"interface Encoder : PositionEncoder, VelocityEncoder","description":"frc.chargers.hardware.sensors.encoders.Encoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-encoder/index.html","searchKeys":["Encoder","interface Encoder : PositionEncoder, VelocityEncoder","frc.chargers.hardware.sensors.encoders.Encoder"]},{"name":"interface EncoderMotorController : MotorController","description":"frc.chargers.hardware.motorcontrol.EncoderMotorController","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-encoder-motor-controller/index.html","searchKeys":["EncoderMotorController","interface EncoderMotorController : MotorController","frc.chargers.hardware.motorcontrol.EncoderMotorController"]},{"name":"interface FeedbackController<I, out T> : Controller<T> ","description":"frc.chargers.controls.FeedbackController","location":"-charger-lib/frc.chargers.controls/-feedback-controller/index.html","searchKeys":["FeedbackController","interface FeedbackController<I, out T> : Controller<T> ","frc.chargers.controls.FeedbackController"]},{"name":"interface HardwareConfigurable<in C : HardwareConfiguration>","description":"frc.chargers.hardware.configuration.HardwareConfigurable","location":"-charger-lib/frc.chargers.hardware.configuration/-hardware-configurable/index.html","searchKeys":["HardwareConfigurable","interface HardwareConfigurable<in C : HardwareConfiguration>","frc.chargers.hardware.configuration.HardwareConfigurable"]},{"name":"interface HardwareConfiguration","description":"frc.chargers.hardware.configuration.HardwareConfiguration","location":"-charger-lib/frc.chargers.hardware.configuration/-hardware-configuration/index.html","searchKeys":["HardwareConfiguration","interface HardwareConfiguration","frc.chargers.hardware.configuration.HardwareConfiguration"]},{"name":"interface HeadingProvider","description":"frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-heading-provider/index.html","searchKeys":["HeadingProvider","interface HeadingProvider","frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider"]},{"name":"interface ModuleIO","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o/index.html","searchKeys":["ModuleIO","interface ModuleIO","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIO"]},{"name":"interface PositionEncoder","description":"frc.chargers.hardware.sensors.encoders.PositionEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-position-encoder/index.html","searchKeys":["PositionEncoder","interface PositionEncoder","frc.chargers.hardware.sensors.encoders.PositionEncoder"]},{"name":"interface ResettableEncoder : Encoder","description":"frc.chargers.hardware.sensors.encoders.ResettableEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-resettable-encoder/index.html","searchKeys":["ResettableEncoder","interface ResettableEncoder : Encoder","frc.chargers.hardware.sensors.encoders.ResettableEncoder"]},{"name":"interface RobotPoseMonitor : HeadingProvider","description":"frc.chargers.hardware.sensors.RobotPoseMonitor","location":"-charger-lib/frc.chargers.hardware.sensors/-robot-pose-monitor/index.html","searchKeys":["RobotPoseMonitor","interface RobotPoseMonitor : HeadingProvider","frc.chargers.hardware.sensors.RobotPoseMonitor"]},{"name":"interface SmartEncoderMotorController : EncoderMotorController","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/index.html","searchKeys":["SmartEncoderMotorController","interface SmartEncoderMotorController : EncoderMotorController","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController"]},{"name":"interface SwerveModule : ModuleIO","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/index.html","searchKeys":["SwerveModule","interface SwerveModule : ModuleIO","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule"]},{"name":"interface ThreeAxisAccelerometer","description":"frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-accelerometer/index.html","searchKeys":["ThreeAxisAccelerometer","interface ThreeAxisAccelerometer","frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer"]},{"name":"interface ThreeAxisGyroscope : HeadingProvider","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/index.html","searchKeys":["ThreeAxisGyroscope","interface ThreeAxisGyroscope : HeadingProvider","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope"]},{"name":"interface ThreeAxisSpeedometer","description":"frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-speedometer/index.html","searchKeys":["ThreeAxisSpeedometer","interface ThreeAxisSpeedometer","frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer"]},{"name":"interface VelocityEncoder","description":"frc.chargers.hardware.sensors.encoders.VelocityEncoder","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-velocity-encoder/index.html","searchKeys":["VelocityEncoder","interface VelocityEncoder","frc.chargers.hardware.sensors.encoders.VelocityEncoder"]},{"name":"interface VisionPipeline<R : VisionTarget>","description":"frc.chargers.hardware.sensors.vision.VisionPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/index.html","searchKeys":["VisionPipeline","interface VisionPipeline<R : VisionTarget>","frc.chargers.hardware.sensors.vision.VisionPipeline"]},{"name":"interface VisionPoseSupplier","description":"frc.chargers.hardware.sensors.VisionPoseSupplier","location":"-charger-lib/frc.chargers.hardware.sensors/-vision-pose-supplier/index.html","searchKeys":["VisionPoseSupplier","interface VisionPoseSupplier","frc.chargers.hardware.sensors.VisionPoseSupplier"]},{"name":"interface VisionTarget","description":"frc.chargers.hardware.sensors.vision.VisionTarget","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/index.html","searchKeys":["VisionTarget","interface VisionTarget","frc.chargers.hardware.sensors.vision.VisionTarget"]},{"name":"interface ZeroableHeadingProvider : HeadingProvider","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ZeroableHeadingProvider","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-zeroable-heading-provider/index.html","searchKeys":["ZeroableHeadingProvider","interface ZeroableHeadingProvider : HeadingProvider","frc.chargers.hardware.sensors.imu.gyroscopes.ZeroableHeadingProvider"]},{"name":"object CodeBlockContext","description":"frc.chargers.commands.commandbuilder.CodeBlockContext","location":"-charger-lib/frc.chargers.commands.commandbuilder/-code-block-context/index.html","searchKeys":["CodeBlockContext","object CodeBlockContext","frc.chargers.commands.commandbuilder.CodeBlockContext"]},{"name":"object Companion","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.Companion","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.constants.drivetrain.DiffDriveHardwareData.Companion"]},{"name":"object Companion","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.Companion","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.constants.drivetrain.SwerveHardwareData.Companion"]},{"name":"object Companion","description":"frc.chargers.constants.tuning.DashboardTuner.Companion","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.constants.tuning.DashboardTuner.Companion"]},{"name":"object Companion","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.Companion","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.controls.feedforward.AngularMotorFFConstants.Companion"]},{"name":"object Companion","description":"frc.chargers.controls.feedforward.ArmFFConstants.Companion","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.controls.feedforward.ArmFFConstants.Companion"]},{"name":"object Companion","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.Companion","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.controls.feedforward.ElevatorFFConstants.Companion"]},{"name":"object Companion","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.Companion","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.controls.feedforward.LinearMotorFFConstants.Companion"]},{"name":"object Companion","description":"frc.chargers.controls.pid.PIDConstants.Companion","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.controls.pid.PIDConstants.Companion"]},{"name":"object Companion","description":"frc.chargers.framework.ChargerRobot.Companion","location":"-charger-lib/frc.chargers.framework/-charger-robot/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.framework.ChargerRobot.Companion"]},{"name":"object Companion","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.Companion","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.Companion"]},{"name":"object Companion","description":"frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.Companion","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-accelerometer/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.sensors.imu.ThreeAxisAccelerometer.Companion"]},{"name":"object Companion","description":"frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.Companion","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-three-axis-speedometer/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.sensors.imu.ThreeAxisSpeedometer.Companion"]},{"name":"object Companion","description":"frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider.Companion","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-heading-provider/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.sensors.imu.gyroscopes.HeadingProvider.Companion"]},{"name":"object Companion","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.Companion","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.Companion"]},{"name":"object Companion","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.Companion","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.Companion"]},{"name":"object Companion","description":"frc.chargers.wpilibextensions.Alert.Companion","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/-companion/index.html","searchKeys":["Companion","object Companion","frc.chargers.wpilibextensions.Alert.Companion"]},{"name":"object a","description":"frc.chargers.utils.a","location":"-charger-lib/frc.chargers.utils/a/index.html","searchKeys":["a","object a","frc.chargers.utils.a"]},{"name":"object p","description":"frc.chargers.utils.p","location":"-charger-lib/frc.chargers.utils/p/index.html","searchKeys":["p","object p","frc.chargers.utils.p"]},{"name":"open class BasicDifferentialDrivetrain(leftMotors: MotorController, rightMotors: MotorController, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0) : SubsystemBase, DifferentialDrivetrain","description":"frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-basic-differential-drivetrain/index.html","searchKeys":["BasicDifferentialDrivetrain","open class BasicDifferentialDrivetrain(leftMotors: MotorController, rightMotors: MotorController, invertMotors: Boolean = false, powerScale: Double = 1.0, rotationScale: Double = 1.0) : SubsystemBase, DifferentialDrivetrain","frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain"]},{"name":"open class BasicMeasurement<T>(val value: T, val timestamp: Time)","description":"frc.chargers.utils.BasicMeasurement","location":"-charger-lib/frc.chargers.utils/-basic-measurement/index.html","searchKeys":["BasicMeasurement","open class BasicMeasurement<T>(val value: T, val timestamp: Time)","frc.chargers.utils.BasicMeasurement"]},{"name":"open class ChargerRobot(getRobotContainer: () -> ChargerRobotContainer, gitData: GitData, config: RobotConfig) : LoggedRobot","description":"frc.chargers.framework.ChargerRobot","location":"-charger-lib/frc.chargers.framework/-charger-robot/index.html","searchKeys":["ChargerRobot","open class ChargerRobot(getRobotContainer: () -> ChargerRobotContainer, gitData: GitData, config: RobotConfig) : LoggedRobot","frc.chargers.framework.ChargerRobot"]},{"name":"open class ChargerTalonFX(deviceNumber: Int, canBus: String = \"rio\") : TalonFX, SmartEncoderMotorController, HardwareConfigurable<ChargerTalonFXConfiguration> ","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/index.html","searchKeys":["ChargerTalonFX","open class ChargerTalonFX(deviceNumber: Int, canBus: String = \"rio\") : TalonFX, SmartEncoderMotorController, HardwareConfigurable<ChargerTalonFXConfiguration> ","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX"]},{"name":"open class ChargerTalonSRX(deviceNumber: Int, encoderTicksPerRotation: Int) : WPI_TalonSRX, EncoderMotorController, HardwareConfigurable<ChargerTalonSRXConfiguration> ","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/index.html","searchKeys":["ChargerTalonSRX","open class ChargerTalonSRX(deviceNumber: Int, encoderTicksPerRotation: Int) : WPI_TalonSRX, EncoderMotorController, HardwareConfigurable<ChargerTalonSRXConfiguration> ","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX"]},{"name":"open class DashboardTuner(dashKey: String = \"TunableValues\")","description":"frc.chargers.constants.tuning.DashboardTuner","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/index.html","searchKeys":["DashboardTuner","open class DashboardTuner(dashKey: String = \"TunableValues\")","frc.chargers.constants.tuning.DashboardTuner"]},{"name":"open class DiffDriveControlData(val leftVelocityPID: PIDConstants, val leftFF: AngularMotorFFConstants, val rightVelocityPID: PIDConstants, val rightFF: AngularMotorFFConstants, val robotRotationPID: PIDConstants = PIDConstants(0.4,0.0,0.0), val pathAlgorithm: DiffDriveControlData.PathAlgorithm = PathAlgorithm.LTV, val pathReplanConfig: ReplanningConfig = ReplanningConfig())","description":"frc.chargers.constants.drivetrain.DiffDriveControlData","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/index.html","searchKeys":["DiffDriveControlData","open class DiffDriveControlData(val leftVelocityPID: PIDConstants, val leftFF: AngularMotorFFConstants, val rightVelocityPID: PIDConstants, val rightFF: AngularMotorFFConstants, val robotRotationPID: PIDConstants = PIDConstants(0.4,0.0,0.0), val pathAlgorithm: DiffDriveControlData.PathAlgorithm = PathAlgorithm.LTV, val pathReplanConfig: ReplanningConfig = ReplanningConfig())","frc.chargers.constants.drivetrain.DiffDriveControlData"]},{"name":"open class DoublePressTracker","description":"frc.chargerlibexternal.frc6328.DoublePressTracker","location":"-charger-lib/frc.chargerlibexternal.frc6328/-double-press-tracker/index.html","searchKeys":["DoublePressTracker","open class DoublePressTracker","frc.chargerlibexternal.frc6328.DoublePressTracker"]},{"name":"open class FeedForwardCharacterization : Command","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/index.html","searchKeys":["FeedForwardCharacterization","open class FeedForwardCharacterization : Command","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization"]},{"name":"open class FeedForwardCharacterizationData","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization-data/index.html","searchKeys":["FeedForwardCharacterizationData","open class FeedForwardCharacterizationData","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData"]},{"name":"open class HeadingCorrector","description":"frc.chargerlibexternal.frc4481.HeadingCorrector","location":"-charger-lib/frc.chargerlibexternal.frc4481/-heading-corrector/index.html","searchKeys":["HeadingCorrector","open class HeadingCorrector","frc.chargerlibexternal.frc4481.HeadingCorrector"]},{"name":"open class LimelightHelpers","description":"frc.chargerlibexternal.limelight.LimelightHelpers","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/index.html","searchKeys":["LimelightHelpers","open class LimelightHelpers","frc.chargerlibexternal.limelight.LimelightHelpers"]},{"name":"open class LimelightResults","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightResults","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-results/index.html","searchKeys":["LimelightResults","open class LimelightResults","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightResults"]},{"name":"open class LimelightTarget_Barcode","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Barcode","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-barcode/index.html","searchKeys":["LimelightTarget_Barcode","open class LimelightTarget_Barcode","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Barcode"]},{"name":"open class LimelightTarget_Classifier","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/index.html","searchKeys":["LimelightTarget_Classifier","open class LimelightTarget_Classifier","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier"]},{"name":"open class LimelightTarget_Detector","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/index.html","searchKeys":["LimelightTarget_Detector","open class LimelightTarget_Detector","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector"]},{"name":"open class LimelightTarget_Fiducial","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/index.html","searchKeys":["LimelightTarget_Fiducial","open class LimelightTarget_Fiducial","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial"]},{"name":"open class LimelightTarget_Retro","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/index.html","searchKeys":["LimelightTarget_Retro","open class LimelightTarget_Retro","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro"]},{"name":"open class LocalADStarAK : Pathfinder","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/index.html","searchKeys":["LocalADStarAK","open class LocalADStarAK : Pathfinder","frc.chargerlibexternal.pathplanner.LocalADStarAK"]},{"name":"open class MechanicalAdvantagePoseEstimator","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/index.html","searchKeys":["MechanicalAdvantagePoseEstimator","open class MechanicalAdvantagePoseEstimator","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator"]},{"name":"open class ModuleStateGroup(var topLeftSpeed: Velocity = Velocity(0.0), var topRightSpeed: Velocity = Velocity(0.0), var bottomLeftSpeed: Velocity = Velocity(0.0), var bottomRightSpeed: Velocity = Velocity(0.0), var topLeftAngle: Angle = Angle(0.0), var topRightAngle: Angle = Angle(0.0), var bottomLeftAngle: Angle = Angle(0.0), var bottomRightAngle: Angle = Angle(0.0))","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/index.html","searchKeys":["ModuleStateGroup","open class ModuleStateGroup(var topLeftSpeed: Velocity = Velocity(0.0), var topRightSpeed: Velocity = Velocity(0.0), var bottomLeftSpeed: Velocity = Velocity(0.0), var bottomRightSpeed: Velocity = Velocity(0.0), var topLeftAngle: Angle = Angle(0.0), var topRightAngle: Angle = Angle(0.0), var bottomLeftAngle: Angle = Angle(0.0), var bottomRightAngle: Angle = Angle(0.0))","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup"]},{"name":"open class NomadApriltagUtil","description":"frc.chargerlibexternal.frc6995.NomadApriltagUtil","location":"-charger-lib/frc.chargerlibexternal.frc6995/-nomad-apriltag-util/index.html","searchKeys":["NomadApriltagUtil","open class NomadApriltagUtil","frc.chargerlibexternal.frc6995.NomadApriltagUtil"]},{"name":"open class NonLoggableVisionData<out R : VisionTarget>(val timestamp: Time, val bestTarget: R, val otherTargets: List<R>)","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/index.html","searchKeys":["NonLoggableVisionData","open class NonLoggableVisionData<out R : VisionTarget>(val timestamp: Time, val bestTarget: R, val otherTargets: List<R>)","frc.chargers.hardware.sensors.vision.NonLoggableVisionData"]},{"name":"open class PolynomialRegression : Comparable<T> ","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/index.html","searchKeys":["PolynomialRegression","open class PolynomialRegression : Comparable<T> ","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression"]},{"name":"open class Results","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/index.html","searchKeys":["Results","open class Results","frc.chargerlibexternal.limelight.LimelightHelpers.Results"]},{"name":"open fun R2(): Double","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.R2","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/-r2.html","searchKeys":["R2","open fun R2(): Double","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.R2"]},{"name":"open fun add(velocity: Double, voltage: Double)","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData.add","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization-data/add.html","searchKeys":["add","open fun add(velocity: Double, voltage: Double)","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData.add"]},{"name":"open fun addDriveData(timestamp: Double, twist: Twist2d)","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.addDriveData","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/add-drive-data.html","searchKeys":["addDriveData","open fun addDriveData(timestamp: Double, twist: Twist2d)","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.addDriveData"]},{"name":"open fun addVisionData(visionData: List<MechanicalAdvantagePoseEstimator.TimestampedVisionUpdate>)","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.addVisionData","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/add-vision-data.html","searchKeys":["addVisionData","open fun addVisionData(visionData: List<MechanicalAdvantagePoseEstimator.TimestampedVisionUpdate>)","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.addVisionData"]},{"name":"open fun arcadeDrive(chassisPowers: ChassisPowers)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.arcadeDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/arcade-drive.html","searchKeys":["arcadeDrive","open fun arcadeDrive(chassisPowers: ChassisPowers)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.arcadeDrive"]},{"name":"open fun arcadeDrive(power: Double, rotation: Double = 0.0)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.arcadeDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/arcade-drive.html","searchKeys":["arcadeDrive","open fun arcadeDrive(power: Double, rotation: Double = 0.0)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.arcadeDrive"]},{"name":"open fun autonomousInit()","description":"frc.chargers.framework.ChargerRobotContainer.autonomousInit","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/autonomous-init.html","searchKeys":["autonomousInit","open fun autonomousInit()","frc.chargers.framework.ChargerRobotContainer.autonomousInit"]},{"name":"open fun autonomousPeriodic()","description":"frc.chargers.framework.ChargerRobotContainer.autonomousPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/autonomous-periodic.html","searchKeys":["autonomousPeriodic","open fun autonomousPeriodic()","frc.chargers.framework.ChargerRobotContainer.autonomousPeriodic"]},{"name":"open fun beta(j: Int): Double","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.beta","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/beta.html","searchKeys":["beta","open fun beta(j: Int): Double","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.beta"]},{"name":"open fun calculateOutput(target: I): T","description":"frc.chargers.controls.FeedbackController.calculateOutput","location":"-charger-lib/frc.chargers.controls/-feedback-controller/calculate-output.html","searchKeys":["calculateOutput","open fun calculateOutput(target: I): T","frc.chargers.controls.FeedbackController.calculateOutput"]},{"name":"open fun calculateSetpoint(target: Quantity<S>, continuousInputRange: ClosedRange<Quantity<S>>, measurement: Quantity<S>): Setpoint<S, O>","description":"frc.chargers.controls.SetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls/-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open fun calculateSetpoint(target: Quantity<S>, continuousInputRange: ClosedRange<Quantity<S>>, measurement: Quantity<S>): Setpoint<S, O>","frc.chargers.controls.SetpointSupplier.calculateSetpoint"]},{"name":"open fun calculateVisionUncertainty(poseX: Double, heading: Rotation2d, cameraYaw: Rotation2d): Matrix<N3, N1>","description":"frc.chargerlibexternal.frc6995.NomadApriltagUtil.calculateVisionUncertainty","location":"-charger-lib/frc.chargerlibexternal.frc6995/-nomad-apriltag-util/calculate-vision-uncertainty.html","searchKeys":["calculateVisionUncertainty","open fun calculateVisionUncertainty(poseX: Double, heading: Rotation2d, cameraYaw: Rotation2d): Matrix<N3, N1>","frc.chargerlibexternal.frc6995.NomadApriltagUtil.calculateVisionUncertainty"]},{"name":"open fun compareTo(that: PolynomialRegression): Int","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.compareTo","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/compare-to.html","searchKeys":["compareTo","open fun compareTo(that: PolynomialRegression): Int","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.compareTo"]},{"name":"open fun correctHeading(desiredSpeed: ChassisSpeeds, inputYaw: Rotation2d): ChassisSpeeds","description":"frc.chargerlibexternal.frc4481.HeadingCorrector.correctHeading","location":"-charger-lib/frc.chargerlibexternal.frc4481/-heading-corrector/correct-heading.html","searchKeys":["correctHeading","open fun correctHeading(desiredSpeed: ChassisSpeeds, inputYaw: Rotation2d): ChassisSpeeds","frc.chargerlibexternal.frc4481.HeadingCorrector.correctHeading"]},{"name":"open fun createTrigger(baseTrigger: Trigger): Trigger","description":"frc.chargerlibexternal.frc6328.DoublePressTracker.createTrigger","location":"-charger-lib/frc.chargerlibexternal.frc6328/-double-press-tracker/create-trigger.html","searchKeys":["createTrigger","open fun createTrigger(baseTrigger: Trigger): Trigger","frc.chargerlibexternal.frc6328.DoublePressTracker.createTrigger"]},{"name":"open fun createTrigger(baseTrigger: Trigger, maxLengthSecs: Double): Trigger","description":"frc.chargerlibexternal.frc6328.DoublePressTracker.createTrigger","location":"-charger-lib/frc.chargerlibexternal.frc6328/-double-press-tracker/create-trigger.html","searchKeys":["createTrigger","open fun createTrigger(baseTrigger: Trigger, maxLengthSecs: Double): Trigger","frc.chargerlibexternal.frc6328.DoublePressTracker.createTrigger"]},{"name":"open fun curvatureDrive(chassisPowers: ChassisPowers)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.curvatureDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/curvature-drive.html","searchKeys":["curvatureDrive","open fun curvatureDrive(chassisPowers: ChassisPowers)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.curvatureDrive"]},{"name":"open fun curvatureDrive(power: Double, steering: Double)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.curvatureDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/curvature-drive.html","searchKeys":["curvatureDrive","open fun curvatureDrive(power: Double, steering: Double)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.curvatureDrive"]},{"name":"open fun degree(): Int","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.degree","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/degree.html","searchKeys":["degree","open fun degree(): Int","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.degree"]},{"name":"open fun diagonalDistanceToTarget(targetHeight: Distance, targetPitch: Angle = Angle(0.0)): Distance","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.diagonalDistanceToTarget","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/diagonal-distance-to-target.html","searchKeys":["diagonalDistanceToTarget","open fun diagonalDistanceToTarget(targetHeight: Distance, targetPitch: Angle = Angle(0.0)): Distance","frc.chargers.hardware.sensors.vision.VisionPipeline.diagonalDistanceToTarget"]},{"name":"open fun disabledInit()","description":"frc.chargers.framework.ChargerRobotContainer.disabledInit","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/disabled-init.html","searchKeys":["disabledInit","open fun disabledInit()","frc.chargers.framework.ChargerRobotContainer.disabledInit"]},{"name":"open fun disabledPeriodic()","description":"frc.chargers.framework.ChargerRobotContainer.disabledPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/disabled-periodic.html","searchKeys":["disabledPeriodic","open fun disabledPeriodic()","frc.chargers.framework.ChargerRobotContainer.disabledPeriodic"]},{"name":"open fun distanceToTarget(targetHeight: Distance, targetPitch: Angle = Angle(0.0)): Distance","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.distanceToTarget","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/distance-to-target.html","searchKeys":["distanceToTarget","open fun distanceToTarget(targetHeight: Distance, targetPitch: Angle = Angle(0.0)): Distance","frc.chargers.hardware.sensors.vision.VisionPipeline.distanceToTarget"]},{"name":"open fun end(interrupted: Boolean)","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.end","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/end.html","searchKeys":["end","open fun end(interrupted: Boolean)","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.end"]},{"name":"open fun execute()","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.execute","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/execute.html","searchKeys":["execute","open fun execute()","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.execute"]},{"name":"open fun getBotPose(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose.html","searchKeys":["getBotPose","open fun getBotPose(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose"]},{"name":"open fun getBotPose2d(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose2d","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/get-bot-pose2d.html","searchKeys":["getBotPose2d","open fun getBotPose2d(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose2d"]},{"name":"open fun getBotPose2d(limelightName: String): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose2d","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose2d.html","searchKeys":["getBotPose2d","open fun getBotPose2d(limelightName: String): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose2d"]},{"name":"open fun getBotPose2d_wpiBlue(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose2d_wpiBlue","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/get-bot-pose2d_wpi-blue.html","searchKeys":["getBotPose2d_wpiBlue","open fun getBotPose2d_wpiBlue(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose2d_wpiBlue"]},{"name":"open fun getBotPose2d_wpiBlue(limelightName: String): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose2d_wpiBlue","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose2d_wpi-blue.html","searchKeys":["getBotPose2d_wpiBlue","open fun getBotPose2d_wpiBlue(limelightName: String): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose2d_wpiBlue"]},{"name":"open fun getBotPose2d_wpiRed(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose2d_wpiRed","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/get-bot-pose2d_wpi-red.html","searchKeys":["getBotPose2d_wpiRed","open fun getBotPose2d_wpiRed(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose2d_wpiRed"]},{"name":"open fun getBotPose2d_wpiRed(limelightName: String): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose2d_wpiRed","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose2d_wpi-red.html","searchKeys":["getBotPose2d_wpiRed","open fun getBotPose2d_wpiRed(limelightName: String): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose2d_wpiRed"]},{"name":"open fun getBotPose3d(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose3d","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/get-bot-pose3d.html","searchKeys":["getBotPose3d","open fun getBotPose3d(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose3d"]},{"name":"open fun getBotPose3d(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose3d.html","searchKeys":["getBotPose3d","open fun getBotPose3d(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d"]},{"name":"open fun getBotPose3d_TargetSpace(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose3d_-target-space.html","searchKeys":["getBotPose3d_TargetSpace","open fun getBotPose3d_TargetSpace(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d_TargetSpace"]},{"name":"open fun getBotPose3d_wpiBlue(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose3d_wpiBlue","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/get-bot-pose3d_wpi-blue.html","searchKeys":["getBotPose3d_wpiBlue","open fun getBotPose3d_wpiBlue(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose3d_wpiBlue"]},{"name":"open fun getBotPose3d_wpiBlue(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d_wpiBlue","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose3d_wpi-blue.html","searchKeys":["getBotPose3d_wpiBlue","open fun getBotPose3d_wpiBlue(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d_wpiBlue"]},{"name":"open fun getBotPose3d_wpiRed(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose3d_wpiRed","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/get-bot-pose3d_wpi-red.html","searchKeys":["getBotPose3d_wpiRed","open fun getBotPose3d_wpiRed(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.Results.getBotPose3d_wpiRed"]},{"name":"open fun getBotPose3d_wpiRed(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d_wpiRed","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose3d_wpi-red.html","searchKeys":["getBotPose3d_wpiRed","open fun getBotPose3d_wpiRed(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose3d_wpiRed"]},{"name":"open fun getBotPose_TargetSpace(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose_-target-space.html","searchKeys":["getBotPose_TargetSpace","open fun getBotPose_TargetSpace(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose_TargetSpace"]},{"name":"open fun getBotPose_wpiBlue(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose_wpiBlue","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose_wpi-blue.html","searchKeys":["getBotPose_wpiBlue","open fun getBotPose_wpiBlue(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose_wpiBlue"]},{"name":"open fun getBotPose_wpiRed(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose_wpiRed","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-bot-pose_wpi-red.html","searchKeys":["getBotPose_wpiRed","open fun getBotPose_wpiRed(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getBotPose_wpiRed"]},{"name":"open fun getCameraPose3d_RobotSpace(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getCameraPose3d_RobotSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-camera-pose3d_-robot-space.html","searchKeys":["getCameraPose3d_RobotSpace","open fun getCameraPose3d_RobotSpace(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getCameraPose3d_RobotSpace"]},{"name":"open fun getCameraPose3d_TargetSpace(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getCameraPose3d_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-camera-pose3d_-target-space.html","searchKeys":["getCameraPose3d_TargetSpace","open fun getCameraPose3d_TargetSpace(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getCameraPose3d_TargetSpace"]},{"name":"open fun getCameraPose_TargetSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getCameraPose_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-camera-pose_-target-space.html","searchKeys":["getCameraPose_TargetSpace","open fun getCameraPose_TargetSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getCameraPose_TargetSpace"]},{"name":"open fun getCameraPose_TargetSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getCameraPose_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-camera-pose_-target-space.html","searchKeys":["getCameraPose_TargetSpace","open fun getCameraPose_TargetSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getCameraPose_TargetSpace"]},{"name":"open fun getCameraPose_TargetSpace(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getCameraPose_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-camera-pose_-target-space.html","searchKeys":["getCameraPose_TargetSpace","open fun getCameraPose_TargetSpace(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getCameraPose_TargetSpace"]},{"name":"open fun getCameraPose_TargetSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getCameraPose_TargetSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-camera-pose_-target-space2-d.html","searchKeys":["getCameraPose_TargetSpace2D","open fun getCameraPose_TargetSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getCameraPose_TargetSpace2D"]},{"name":"open fun getCameraPose_TargetSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getCameraPose_TargetSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-camera-pose_-target-space2-d.html","searchKeys":["getCameraPose_TargetSpace2D","open fun getCameraPose_TargetSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getCameraPose_TargetSpace2D"]},{"name":"open fun getCurrentPath(constraints: PathConstraints, goalEndState: GoalEndState): PathPlannerPath","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK.getCurrentPath","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/get-current-path.html","searchKeys":["getCurrentPath","open fun getCurrentPath(constraints: PathConstraints, goalEndState: GoalEndState): PathPlannerPath","frc.chargerlibexternal.pathplanner.LocalADStarAK.getCurrentPath"]},{"name":"open fun getCurrentPipelineIndex(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getCurrentPipelineIndex","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-current-pipeline-index.html","searchKeys":["getCurrentPipelineIndex","open fun getCurrentPipelineIndex(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getCurrentPipelineIndex"]},{"name":"open fun getFiducialID(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getFiducialID","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-fiducial-i-d.html","searchKeys":["getFiducialID","open fun getFiducialID(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getFiducialID"]},{"name":"open fun getJSONDump(limelightName: String): String","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getJSONDump","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-j-s-o-n-dump.html","searchKeys":["getJSONDump","open fun getJSONDump(limelightName: String): String","frc.chargerlibexternal.limelight.LimelightHelpers.getJSONDump"]},{"name":"open fun getLatency_Capture(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLatency_Capture","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-latency_-capture.html","searchKeys":["getLatency_Capture","open fun getLatency_Capture(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getLatency_Capture"]},{"name":"open fun getLatency_Pipeline(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLatency_Pipeline","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-latency_-pipeline.html","searchKeys":["getLatency_Pipeline","open fun getLatency_Pipeline(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getLatency_Pipeline"]},{"name":"open fun getLatestResults(limelightName: String): LimelightHelpers.LimelightResults","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLatestResults","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-latest-results.html","searchKeys":["getLatestResults","open fun getLatestResults(limelightName: String): LimelightHelpers.LimelightResults","frc.chargerlibexternal.limelight.LimelightHelpers.getLatestResults"]},{"name":"open fun getLimelightNTDouble(tableName: String, entryName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTDouble","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-limelight-n-t-double.html","searchKeys":["getLimelightNTDouble","open fun getLimelightNTDouble(tableName: String, entryName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTDouble"]},{"name":"open fun getLimelightNTDoubleArray(tableName: String, entryName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTDoubleArray","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-limelight-n-t-double-array.html","searchKeys":["getLimelightNTDoubleArray","open fun getLimelightNTDoubleArray(tableName: String, entryName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTDoubleArray"]},{"name":"open fun getLimelightNTString(tableName: String, entryName: String): String","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTString","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-limelight-n-t-string.html","searchKeys":["getLimelightNTString","open fun getLimelightNTString(tableName: String, entryName: String): String","frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTString"]},{"name":"open fun getLimelightNTTable(tableName: String): NetworkTable","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTTable","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-limelight-n-t-table.html","searchKeys":["getLimelightNTTable","open fun getLimelightNTTable(tableName: String): NetworkTable","frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTTable"]},{"name":"open fun getLimelightNTTableEntry(tableName: String, entryName: String): NetworkTableEntry","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTTableEntry","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-limelight-n-t-table-entry.html","searchKeys":["getLimelightNTTableEntry","open fun getLimelightNTTableEntry(tableName: String, entryName: String): NetworkTableEntry","frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightNTTableEntry"]},{"name":"open fun getLimelightURLString(tableName: String, request: String): URL","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightURLString","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-limelight-u-r-l-string.html","searchKeys":["getLimelightURLString","open fun getLimelightURLString(tableName: String, request: String): URL","frc.chargerlibexternal.limelight.LimelightHelpers.getLimelightURLString"]},{"name":"open fun getNeuralClassID(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getNeuralClassID","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-neural-class-i-d.html","searchKeys":["getNeuralClassID","open fun getNeuralClassID(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getNeuralClassID"]},{"name":"open fun getPythonScriptData(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getPythonScriptData","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-python-script-data.html","searchKeys":["getPythonScriptData","open fun getPythonScriptData(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getPythonScriptData"]},{"name":"open fun getRobotPose_FieldSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_FieldSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-robot-pose_-field-space.html","searchKeys":["getRobotPose_FieldSpace","open fun getRobotPose_FieldSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_FieldSpace"]},{"name":"open fun getRobotPose_FieldSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_FieldSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-robot-pose_-field-space.html","searchKeys":["getRobotPose_FieldSpace","open fun getRobotPose_FieldSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_FieldSpace"]},{"name":"open fun getRobotPose_FieldSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_FieldSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-robot-pose_-field-space2-d.html","searchKeys":["getRobotPose_FieldSpace2D","open fun getRobotPose_FieldSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_FieldSpace2D"]},{"name":"open fun getRobotPose_FieldSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_FieldSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-robot-pose_-field-space2-d.html","searchKeys":["getRobotPose_FieldSpace2D","open fun getRobotPose_FieldSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_FieldSpace2D"]},{"name":"open fun getRobotPose_TargetSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-robot-pose_-target-space.html","searchKeys":["getRobotPose_TargetSpace","open fun getRobotPose_TargetSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_TargetSpace"]},{"name":"open fun getRobotPose_TargetSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_TargetSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-robot-pose_-target-space.html","searchKeys":["getRobotPose_TargetSpace","open fun getRobotPose_TargetSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_TargetSpace"]},{"name":"open fun getRobotPose_TargetSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_TargetSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-robot-pose_-target-space2-d.html","searchKeys":["getRobotPose_TargetSpace2D","open fun getRobotPose_TargetSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getRobotPose_TargetSpace2D"]},{"name":"open fun getRobotPose_TargetSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_TargetSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-robot-pose_-target-space2-d.html","searchKeys":["getRobotPose_TargetSpace2D","open fun getRobotPose_TargetSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getRobotPose_TargetSpace2D"]},{"name":"open fun getTA(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTA","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-t-a.html","searchKeys":["getTA","open fun getTA(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getTA"]},{"name":"open fun getTV(limelightName: String): Boolean","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTV","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-t-v.html","searchKeys":["getTV","open fun getTV(limelightName: String): Boolean","frc.chargerlibexternal.limelight.LimelightHelpers.getTV"]},{"name":"open fun getTX(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTX","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-t-x.html","searchKeys":["getTX","open fun getTX(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getTX"]},{"name":"open fun getTY(limelightName: String): Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTY","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-t-y.html","searchKeys":["getTY","open fun getTY(limelightName: String): Double","frc.chargerlibexternal.limelight.LimelightHelpers.getTY"]},{"name":"open fun getTargetColor(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTargetColor","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-target-color.html","searchKeys":["getTargetColor","open fun getTargetColor(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getTargetColor"]},{"name":"open fun getTargetPose3d_CameraSpace(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose3d_CameraSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-target-pose3d_-camera-space.html","searchKeys":["getTargetPose3d_CameraSpace","open fun getTargetPose3d_CameraSpace(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose3d_CameraSpace"]},{"name":"open fun getTargetPose3d_RobotSpace(limelightName: String): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose3d_RobotSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-target-pose3d_-robot-space.html","searchKeys":["getTargetPose3d_RobotSpace","open fun getTargetPose3d_RobotSpace(limelightName: String): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose3d_RobotSpace"]},{"name":"open fun getTargetPose_CameraSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_CameraSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-target-pose_-camera-space.html","searchKeys":["getTargetPose_CameraSpace","open fun getTargetPose_CameraSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_CameraSpace"]},{"name":"open fun getTargetPose_CameraSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_CameraSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-target-pose_-camera-space.html","searchKeys":["getTargetPose_CameraSpace","open fun getTargetPose_CameraSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_CameraSpace"]},{"name":"open fun getTargetPose_CameraSpace(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose_CameraSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-target-pose_-camera-space.html","searchKeys":["getTargetPose_CameraSpace","open fun getTargetPose_CameraSpace(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose_CameraSpace"]},{"name":"open fun getTargetPose_CameraSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_CameraSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-target-pose_-camera-space2-d.html","searchKeys":["getTargetPose_CameraSpace2D","open fun getTargetPose_CameraSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_CameraSpace2D"]},{"name":"open fun getTargetPose_CameraSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_CameraSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-target-pose_-camera-space2-d.html","searchKeys":["getTargetPose_CameraSpace2D","open fun getTargetPose_CameraSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_CameraSpace2D"]},{"name":"open fun getTargetPose_RobotSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_RobotSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-target-pose_-robot-space.html","searchKeys":["getTargetPose_RobotSpace","open fun getTargetPose_RobotSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_RobotSpace"]},{"name":"open fun getTargetPose_RobotSpace(): Pose3d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_RobotSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-target-pose_-robot-space.html","searchKeys":["getTargetPose_RobotSpace","open fun getTargetPose_RobotSpace(): Pose3d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_RobotSpace"]},{"name":"open fun getTargetPose_RobotSpace(limelightName: String): Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose_RobotSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/get-target-pose_-robot-space.html","searchKeys":["getTargetPose_RobotSpace","open fun getTargetPose_RobotSpace(limelightName: String): Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.getTargetPose_RobotSpace"]},{"name":"open fun getTargetPose_RobotSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_RobotSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/get-target-pose_-robot-space2-d.html","searchKeys":["getTargetPose_RobotSpace2D","open fun getTargetPose_RobotSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.getTargetPose_RobotSpace2D"]},{"name":"open fun getTargetPose_RobotSpace2D(): Pose2d","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_RobotSpace2D","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/get-target-pose_-robot-space2-d.html","searchKeys":["getTargetPose_RobotSpace2D","open fun getTargetPose_RobotSpace2D(): Pose2d","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.getTargetPose_RobotSpace2D"]},{"name":"open fun halt()","description":"frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.halt","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-swerve-module/halt.html","searchKeys":["halt","open fun halt()","frc.chargers.hardware.subsystems.swervedrive.module.SwerveModule.halt"]},{"name":"open fun initialize()","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.initialize","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/initialize.html","searchKeys":["initialize","open fun initialize()","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.initialize"]},{"name":"open fun isFinished(): Boolean","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.isFinished","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization/is-finished.html","searchKeys":["isFinished","open fun isFinished(): Boolean","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterization.isFinished"]},{"name":"open fun isNewPathAvailable(): Boolean","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK.isNewPathAvailable","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/is-new-path-available.html","searchKeys":["isNewPathAvailable","open fun isNewPathAvailable(): Boolean","frc.chargerlibexternal.pathplanner.LocalADStarAK.isNewPathAvailable"]},{"name":"open fun main(args: Array<String>)","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.main","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/main.html","searchKeys":["main","open fun main(args: Array<String>)","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.main"]},{"name":"open fun multiplyTwist(twist: Twist2d, factor: Double): Twist2d","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.multiplyTwist","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/multiply-twist.html","searchKeys":["multiplyTwist","open fun multiplyTwist(twist: Twist2d, factor: Double): Twist2d","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.multiplyTwist"]},{"name":"open fun predict(x: Double): Double","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.predict","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/predict.html","searchKeys":["predict","open fun predict(x: Double): Double","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.predict"]},{"name":"open fun print()","description":"frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData.print","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-feed-forward-characterization-data/print.html","searchKeys":["print","open fun print()","frc.chargerlibexternal.frc6328.characterization.FeedForwardCharacterizationData.print"]},{"name":"open fun resetPose(pose: Pose2d)","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.resetPose","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/reset-pose.html","searchKeys":["resetPose","open fun resetPose(pose: Pose2d)","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.resetPose"]},{"name":"open fun robotInit()","description":"frc.chargers.framework.ChargerRobotContainer.robotInit","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/robot-init.html","searchKeys":["robotInit","open fun robotInit()","frc.chargers.framework.ChargerRobotContainer.robotInit"]},{"name":"open fun robotPeriodic()","description":"frc.chargers.framework.ChargerRobotContainer.robotPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/robot-periodic.html","searchKeys":["robotPeriodic","open fun robotPeriodic()","frc.chargers.framework.ChargerRobotContainer.robotPeriodic"]},{"name":"open fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean = false, extraVoltage: Voltage = Voltage(0.0), turnEncoder: PositionEncoder, motorToEncoderRatio: Double = DEFAULT_GEAR_RATIO)","description":"frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.setAngularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol/-smart-encoder-motor-controller/set-angular-position.html","searchKeys":["setAngularPosition","open fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean = false, extraVoltage: Voltage = Voltage(0.0), turnEncoder: PositionEncoder, motorToEncoderRatio: Double = DEFAULT_GEAR_RATIO)","frc.chargers.hardware.motorcontrol.SmartEncoderMotorController.setAngularPosition"]},{"name":"open fun setCameraMode_Driver(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setCameraMode_Driver","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-camera-mode_-driver.html","searchKeys":["setCameraMode_Driver","open fun setCameraMode_Driver(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setCameraMode_Driver"]},{"name":"open fun setCameraMode_Processor(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setCameraMode_Processor","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-camera-mode_-processor.html","searchKeys":["setCameraMode_Processor","open fun setCameraMode_Processor(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setCameraMode_Processor"]},{"name":"open fun setCameraPose_RobotSpace(limelightName: String, forward: Double, side: Double, up: Double, roll: Double, pitch: Double, yaw: Double)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setCameraPose_RobotSpace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-camera-pose_-robot-space.html","searchKeys":["setCameraPose_RobotSpace","open fun setCameraPose_RobotSpace(limelightName: String, forward: Double, side: Double, up: Double, roll: Double, pitch: Double, yaw: Double)","frc.chargerlibexternal.limelight.LimelightHelpers.setCameraPose_RobotSpace"]},{"name":"open fun setCropWindow(limelightName: String, cropXMin: Double, cropXMax: Double, cropYMin: Double, cropYMax: Double)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setCropWindow","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-crop-window.html","searchKeys":["setCropWindow","open fun setCropWindow(limelightName: String, cropXMin: Double, cropXMax: Double, cropYMin: Double, cropYMax: Double)","frc.chargerlibexternal.limelight.LimelightHelpers.setCropWindow"]},{"name":"open fun setDynamicObstacles(obs: List<Pair<Translation2d, Translation2d>>, currentRobotPos: Translation2d)","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK.setDynamicObstacles","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/set-dynamic-obstacles.html","searchKeys":["setDynamicObstacles","open fun setDynamicObstacles(obs: List<Pair<Translation2d, Translation2d>>, currentRobotPos: Translation2d)","frc.chargerlibexternal.pathplanner.LocalADStarAK.setDynamicObstacles"]},{"name":"open fun setGoalPosition(goalPosition: Translation2d)","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK.setGoalPosition","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/set-goal-position.html","searchKeys":["setGoalPosition","open fun setGoalPosition(goalPosition: Translation2d)","frc.chargerlibexternal.pathplanner.LocalADStarAK.setGoalPosition"]},{"name":"open fun setLEDMode_ForceBlink(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_ForceBlink","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-l-e-d-mode_-force-blink.html","searchKeys":["setLEDMode_ForceBlink","open fun setLEDMode_ForceBlink(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_ForceBlink"]},{"name":"open fun setLEDMode_ForceOff(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_ForceOff","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-l-e-d-mode_-force-off.html","searchKeys":["setLEDMode_ForceOff","open fun setLEDMode_ForceOff(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_ForceOff"]},{"name":"open fun setLEDMode_ForceOn(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_ForceOn","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-l-e-d-mode_-force-on.html","searchKeys":["setLEDMode_ForceOn","open fun setLEDMode_ForceOn(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_ForceOn"]},{"name":"open fun setLEDMode_PipelineControl(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_PipelineControl","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-l-e-d-mode_-pipeline-control.html","searchKeys":["setLEDMode_PipelineControl","open fun setLEDMode_PipelineControl(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setLEDMode_PipelineControl"]},{"name":"open fun setLimelightNTDouble(tableName: String, entryName: String, val: Double)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setLimelightNTDouble","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-limelight-n-t-double.html","searchKeys":["setLimelightNTDouble","open fun setLimelightNTDouble(tableName: String, entryName: String, val: Double)","frc.chargerlibexternal.limelight.LimelightHelpers.setLimelightNTDouble"]},{"name":"open fun setLimelightNTDoubleArray(tableName: String, entryName: String, val: Array<Double>)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setLimelightNTDoubleArray","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-limelight-n-t-double-array.html","searchKeys":["setLimelightNTDoubleArray","open fun setLimelightNTDoubleArray(tableName: String, entryName: String, val: Array<Double>)","frc.chargerlibexternal.limelight.LimelightHelpers.setLimelightNTDoubleArray"]},{"name":"open fun setPipelineIndex(limelightName: String, pipelineIndex: Int)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setPipelineIndex","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-pipeline-index.html","searchKeys":["setPipelineIndex","open fun setPipelineIndex(limelightName: String, pipelineIndex: Int)","frc.chargerlibexternal.limelight.LimelightHelpers.setPipelineIndex"]},{"name":"open fun setPythonScriptData(limelightName: String, outgoingPythonData: Array<Double>)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setPythonScriptData","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-python-script-data.html","searchKeys":["setPythonScriptData","open fun setPythonScriptData(limelightName: String, outgoingPythonData: Array<Double>)","frc.chargerlibexternal.limelight.LimelightHelpers.setPythonScriptData"]},{"name":"open fun setStartPosition(startPosition: Translation2d)","description":"frc.chargerlibexternal.pathplanner.LocalADStarAK.setStartPosition","location":"-charger-lib/frc.chargerlibexternal.pathplanner/-local-a-d-star-a-k/set-start-position.html","searchKeys":["setStartPosition","open fun setStartPosition(startPosition: Translation2d)","frc.chargerlibexternal.pathplanner.LocalADStarAK.setStartPosition"]},{"name":"open fun setStreamMode_PiPMain(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setStreamMode_PiPMain","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-stream-mode_-pi-p-main.html","searchKeys":["setStreamMode_PiPMain","open fun setStreamMode_PiPMain(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setStreamMode_PiPMain"]},{"name":"open fun setStreamMode_PiPSecondary(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setStreamMode_PiPSecondary","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-stream-mode_-pi-p-secondary.html","searchKeys":["setStreamMode_PiPSecondary","open fun setStreamMode_PiPSecondary(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setStreamMode_PiPSecondary"]},{"name":"open fun setStreamMode_Standard(limelightName: String)","description":"frc.chargerlibexternal.limelight.LimelightHelpers.setStreamMode_Standard","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/set-stream-mode_-standard.html","searchKeys":["setStreamMode_Standard","open fun setStreamMode_Standard(limelightName: String)","frc.chargerlibexternal.limelight.LimelightHelpers.setStreamMode_Standard"]},{"name":"open fun setZero()","description":"frc.chargers.hardware.sensors.encoders.ResettableEncoder.setZero","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-resettable-encoder/set-zero.html","searchKeys":["setZero","open fun setZero()","frc.chargers.hardware.sensors.encoders.ResettableEncoder.setZero"]},{"name":"open fun simulationInit()","description":"frc.chargers.framework.ChargerRobotContainer.simulationInit","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/simulation-init.html","searchKeys":["simulationInit","open fun simulationInit()","frc.chargers.framework.ChargerRobotContainer.simulationInit"]},{"name":"open fun simulationPeriodic()","description":"frc.chargers.framework.ChargerRobotContainer.simulationPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/simulation-periodic.html","searchKeys":["simulationPeriodic","open fun simulationPeriodic()","frc.chargers.framework.ChargerRobotContainer.simulationPeriodic"]},{"name":"open fun stop()","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.stop","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-drivetrain/stop.html","searchKeys":["stop","open fun stop()","frc.chargers.hardware.subsystems.differentialdrive.DifferentialDrivetrain.stop"]},{"name":"open fun takeSnapshot(tableName: String, snapshotName: String): CompletableFuture<Boolean>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.takeSnapshot","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/take-snapshot.html","searchKeys":["takeSnapshot","open fun takeSnapshot(tableName: String, snapshotName: String): CompletableFuture<Boolean>","frc.chargerlibexternal.limelight.LimelightHelpers.takeSnapshot"]},{"name":"open fun teleopInit()","description":"frc.chargers.framework.ChargerRobotContainer.teleopInit","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/teleop-init.html","searchKeys":["teleopInit","open fun teleopInit()","frc.chargers.framework.ChargerRobotContainer.teleopInit"]},{"name":"open fun teleopPeriodic()","description":"frc.chargers.framework.ChargerRobotContainer.teleopPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/teleop-periodic.html","searchKeys":["teleopPeriodic","open fun teleopPeriodic()","frc.chargers.framework.ChargerRobotContainer.teleopPeriodic"]},{"name":"open fun testInit()","description":"frc.chargers.framework.ChargerRobotContainer.testInit","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/test-init.html","searchKeys":["testInit","open fun testInit()","frc.chargers.framework.ChargerRobotContainer.testInit"]},{"name":"open fun testPeriodic()","description":"frc.chargers.framework.ChargerRobotContainer.testPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/test-periodic.html","searchKeys":["testPeriodic","open fun testPeriodic()","frc.chargers.framework.ChargerRobotContainer.testPeriodic"]},{"name":"open fun toString(): String","description":"frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.toString","location":"-charger-lib/frc.chargerlibexternal.frc6328.characterization/-polynomial-regression/to-string.html","searchKeys":["toString","open fun toString(): String","frc.chargerlibexternal.frc6328.characterization.PolynomialRegression.toString"]},{"name":"open fun zeroPose()","description":"frc.chargers.hardware.sensors.RobotPoseMonitor.zeroPose","location":"-charger-lib/frc.chargers.hardware.sensors/-robot-pose-monitor/zero-pose.html","searchKeys":["zeroPose","open fun zeroPose()","frc.chargers.hardware.sensors.RobotPoseMonitor.zeroPose"]},{"name":"open inner class MLClassifierPipeline(index: Int, logInputs: LoggableInputsProvider) : Classifier<Int?> ","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-classifier-pipeline/index.html","searchKeys":["MLClassifierPipeline","open inner class MLClassifierPipeline(index: Int, logInputs: LoggableInputsProvider) : Classifier<Int?> ","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"frc.chargers.utils.BasicMeasurement.equals","location":"-charger-lib/frc.chargers.utils/-basic-measurement/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","frc.chargers.utils.BasicMeasurement.equals"]},{"name":"open operator override fun invoke(): TriggerValue","description":"frc.chargers.hardware.inputdevices.InputAxis.invoke","location":"-charger-lib/frc.chargers.hardware.inputdevices/-input-axis/invoke.html","searchKeys":["invoke","open operator override fun invoke(): TriggerValue","frc.chargers.hardware.inputdevices.InputAxis.invoke"]},{"name":"open operator override fun invoke(x: Double): Double","description":"frc.chargers.utils.math.equations.Polynomial.invoke","location":"-charger-lib/frc.chargers.utils.math.equations/-polynomial/invoke.html","searchKeys":["invoke","open operator override fun invoke(x: Double): Double","frc.chargers.utils.math.equations.Polynomial.invoke"]},{"name":"open operator override fun invoke(x: Quantity<I>): Quantity<O>","description":"frc.chargers.utils.math.equations.UnitPolynomial.invoke","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/invoke.html","searchKeys":["invoke","open operator override fun invoke(x: Quantity<I>): Quantity<O>","frc.chargers.utils.math.equations.UnitPolynomial.invoke"]},{"name":"open override fun addPoseSuppliers(vararg visionSystems: VisionPoseSupplier)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.addPoseSuppliers","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/add-pose-suppliers.html","searchKeys":["addPoseSuppliers","open override fun addPoseSuppliers(vararg visionSystems: VisionPoseSupplier)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.addPoseSuppliers"]},{"name":"open override fun addPoseSuppliers(vararg visionSystems: VisionPoseSupplier)","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.addPoseSuppliers","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/add-pose-suppliers.html","searchKeys":["addPoseSuppliers","open override fun addPoseSuppliers(vararg visionSystems: VisionPoseSupplier)","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.addPoseSuppliers"]},{"name":"open override fun arcadeDrive(power: Double, rotation: Double)","description":"frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.arcadeDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-basic-differential-drivetrain/arcade-drive.html","searchKeys":["arcadeDrive","open override fun arcadeDrive(power: Double, rotation: Double)","frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.arcadeDrive"]},{"name":"open override fun autonomousInit()","description":"frc.chargers.framework.ChargerRobot.autonomousInit","location":"-charger-lib/frc.chargers.framework/-charger-robot/autonomous-init.html","searchKeys":["autonomousInit","open override fun autonomousInit()","frc.chargers.framework.ChargerRobot.autonomousInit"]},{"name":"open override fun autonomousPeriodic()","description":"frc.chargers.framework.ChargerRobot.autonomousPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot/autonomous-periodic.html","searchKeys":["autonomousPeriodic","open override fun autonomousPeriodic()","frc.chargers.framework.ChargerRobot.autonomousPeriodic"]},{"name":"open override fun calculateOutput(): Quantity<O>","description":"frc.chargers.controls.pid.SuperPIDController.calculateOutput","location":"-charger-lib/frc.chargers.controls.pid/-super-p-i-d-controller/calculate-output.html","searchKeys":["calculateOutput","open override fun calculateOutput(): Quantity<O>","frc.chargers.controls.pid.SuperPIDController.calculateOutput"]},{"name":"open override fun calculateSetpoint(target: Angle): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Angle): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Angle): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Angle): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Angle, continuousInputRange: ClosedRange<Angle>, measurement: Angle): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Angle, continuousInputRange: ClosedRange<Angle>, measurement: Angle): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Angle, continuousInputRange: ClosedRange<Angle>, measurement: Angle): Setpoint<AngleDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Angle, continuousInputRange: ClosedRange<Angle>, measurement: Angle): Setpoint<AngleDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Distance): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Distance): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Distance): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Distance): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Distance, continuousInputRange: ClosedRange<Distance>, measurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Distance, continuousInputRange: ClosedRange<Distance>, measurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Distance, continuousInputRange: ClosedRange<Distance>, measurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Distance, continuousInputRange: ClosedRange<Distance>, measurement: Distance): Setpoint<DistanceDimension, VoltageDimension>","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.calculateSetpoint"]},{"name":"open override fun calculateSetpoint(target: Quantity<I>): Setpoint<I, O>","description":"frc.chargers.controls.SetpointSupplier.Default.calculateSetpoint","location":"-charger-lib/frc.chargers.controls/-setpoint-supplier/-default/calculate-setpoint.html","searchKeys":["calculateSetpoint","open override fun calculateSetpoint(target: Quantity<I>): Setpoint<I, O>","frc.chargers.controls.SetpointSupplier.Default.calculateSetpoint"]},{"name":"open override fun configure(configuration: CANcoderConfiguration)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.configure","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/configure.html","searchKeys":["configure","open override fun configure(configuration: CANcoderConfiguration)","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.configure"]},{"name":"open override fun configure(configuration: ChargerSparkFlexConfiguration)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/configure.html","searchKeys":["configure","open override fun configure(configuration: ChargerSparkFlexConfiguration)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.configure"]},{"name":"open override fun configure(configuration: ChargerSparkMaxConfiguration)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/configure.html","searchKeys":["configure","open override fun configure(configuration: ChargerSparkMaxConfiguration)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.configure"]},{"name":"open override fun configure(configuration: DutyCycleEncoderConfiguration)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.configure","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder/configure.html","searchKeys":["configure","open override fun configure(configuration: DutyCycleEncoderConfiguration)","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.configure"]},{"name":"open override fun configure(configuration: Pigeon2Configuration)","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.configure","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/configure.html","searchKeys":["configure","open override fun configure(configuration: Pigeon2Configuration)","frc.chargers.hardware.sensors.imu.ChargerPigeon2.configure"]},{"name":"open override fun configure(configuration: QuadEncoderConfiguration)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.configure","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/configure.html","searchKeys":["configure","open override fun configure(configuration: QuadEncoderConfiguration)","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.configure"]},{"name":"open override fun curvatureDrive(power: Double, steering: Double)","description":"frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.curvatureDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-basic-differential-drivetrain/curvature-drive.html","searchKeys":["curvatureDrive","open override fun curvatureDrive(power: Double, steering: Double)","frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.curvatureDrive"]},{"name":"open override fun disable()","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.disable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/disable.html","searchKeys":["disable","open override fun disable()","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.disable"]},{"name":"open override fun disable()","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.disable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/disable.html","searchKeys":["disable","open override fun disable()","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.disable"]},{"name":"open override fun disable()","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.disable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/disable.html","searchKeys":["disable","open override fun disable()","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.disable"]},{"name":"open override fun disable()","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.disable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/disable.html","searchKeys":["disable","open override fun disable()","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.disable"]},{"name":"open override fun disabledInit()","description":"frc.chargers.framework.ChargerRobot.disabledInit","location":"-charger-lib/frc.chargers.framework/-charger-robot/disabled-init.html","searchKeys":["disabledInit","open override fun disabledInit()","frc.chargers.framework.ChargerRobot.disabledInit"]},{"name":"open override fun disabledPeriodic()","description":"frc.chargers.framework.ChargerRobot.disabledPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot/disabled-periodic.html","searchKeys":["disabledPeriodic","open override fun disabledPeriodic()","frc.chargers.framework.ChargerRobot.disabledPeriodic"]},{"name":"open override fun getFromLog(table: LogTable, category: String): DoubleMeasurement","description":"frc.chargers.utils.DoubleMeasurement.getFromLog","location":"-charger-lib/frc.chargers.utils/-double-measurement/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): DoubleMeasurement","frc.chargers.utils.DoubleMeasurement.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): Measurement<T>","description":"frc.chargers.utils.Measurement.getFromLog","location":"-charger-lib/frc.chargers.utils/-measurement/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): Measurement<T>","frc.chargers.utils.Measurement.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): QuantityMeasurement<D>","description":"frc.chargers.utils.QuantityMeasurement.getFromLog","location":"-charger-lib/frc.chargers.utils/-quantity-measurement/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): QuantityMeasurement<D>","frc.chargers.utils.QuantityMeasurement.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): UnitPose2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.getFromLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): UnitPose2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.getFromLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): UnitPose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.getFromLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): UnitTransform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): UnitTransform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.getFromLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): UnitTransform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.getFromLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.getFromLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): VisionData<R>","description":"frc.chargers.hardware.sensors.vision.VisionData.getFromLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-data/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): VisionData<R>","frc.chargers.hardware.sensors.vision.VisionData.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): VisionTarget.AprilTag","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.getFromLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): VisionTarget.AprilTag","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): VisionTarget.Generic","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic.getFromLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): VisionTarget.Generic","frc.chargers.hardware.sensors.vision.VisionTarget.Generic.getFromLog"]},{"name":"open override fun getFromLog(table: LogTable, category: String): VisionTarget.ML","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.getFromLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/get-from-log.html","searchKeys":["getFromLog","open override fun getFromLog(table: LogTable, category: String): VisionTarget.ML","frc.chargers.hardware.sensors.vision.VisionTarget.ML.getFromLog"]},{"name":"open override fun getModulePosition(wheelRadius: Length): SwerveModulePosition","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.getModulePosition","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/get-module-position.html","searchKeys":["getModulePosition","open override fun getModulePosition(wheelRadius: Length): SwerveModulePosition","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.getModulePosition"]},{"name":"open override fun getModulePosition(wheelRadius: Length): SwerveModulePosition","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.getModulePosition","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/get-module-position.html","searchKeys":["getModulePosition","open override fun getModulePosition(wheelRadius: Length): SwerveModulePosition","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.getModulePosition"]},{"name":"open override fun getModuleState(wheelRadius: Length): SwerveModuleState","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.getModuleState","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/get-module-state.html","searchKeys":["getModuleState","open override fun getModuleState(wheelRadius: Length): SwerveModuleState","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.getModuleState"]},{"name":"open override fun getModuleState(wheelRadius: Length): SwerveModuleState","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.getModuleState","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/get-module-state.html","searchKeys":["getModuleState","open override fun getModuleState(wheelRadius: Length): SwerveModuleState","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.getModuleState"]},{"name":"open override fun halt()","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.halt","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/halt.html","searchKeys":["halt","open override fun halt()","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.halt"]},{"name":"open override fun halt()","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.halt","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/halt.html","searchKeys":["halt","open override fun halt()","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.halt"]},{"name":"open override fun hashCode(): Int","description":"frc.chargers.utils.BasicMeasurement.hashCode","location":"-charger-lib/frc.chargers.utils/-basic-measurement/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","frc.chargers.utils.BasicMeasurement.hashCode"]},{"name":"open override fun interpolate(endValue: UnitTranslation3d, t: Double): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.interpolate","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/interpolate.html","searchKeys":["interpolate","open override fun interpolate(endValue: UnitTranslation3d, t: Double): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.interpolate"]},{"name":"open override fun interpolate(other: UnitTranslation2d, t: Double): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.interpolate","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/interpolate.html","searchKeys":["interpolate","open override fun interpolate(other: UnitTranslation2d, t: Double): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.interpolate"]},{"name":"open override fun periodic()","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.periodic","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/periodic.html","searchKeys":["periodic","open override fun periodic()","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.periodic"]},{"name":"open override fun periodic()","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.periodic","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/periodic.html","searchKeys":["periodic","open override fun periodic()","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.periodic"]},{"name":"open override fun periodic()","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.periodic","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/periodic.html","searchKeys":["periodic","open override fun periodic()","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.periodic"]},{"name":"open override fun periodic()","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.periodic","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/periodic.html","searchKeys":["periodic","open override fun periodic()","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.periodic"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.hardware.sensors.vision.VisionData.pushToLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-data/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.hardware.sensors.vision.VisionData.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.pushToLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic.pushToLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.hardware.sensors.vision.VisionTarget.Generic.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.pushToLog","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.hardware.sensors.vision.VisionTarget.ML.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.utils.DoubleMeasurement.pushToLog","location":"-charger-lib/frc.chargers.utils/-double-measurement/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.utils.DoubleMeasurement.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.utils.Measurement.pushToLog","location":"-charger-lib/frc.chargers.utils/-measurement/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.utils.Measurement.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.utils.QuantityMeasurement.pushToLog","location":"-charger-lib/frc.chargers.utils/-quantity-measurement/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.utils.QuantityMeasurement.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.pushToLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.pushToLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.pushToLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.pushToLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.pushToLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.pushToLog"]},{"name":"open override fun pushToLog(table: LogTable, category: String)","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.pushToLog","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/push-to-log.html","searchKeys":["pushToLog","open override fun pushToLog(table: LogTable, category: String)","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.pushToLog"]},{"name":"open override fun removeRequirement()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.removeRequirement","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/remove-requirement.html","searchKeys":["removeRequirement","open override fun removeRequirement()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.removeRequirement"]},{"name":"open override fun removeRequirement()","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.removeRequirement","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/remove-requirement.html","searchKeys":["removeRequirement","open override fun removeRequirement()","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.removeRequirement"]},{"name":"open override fun removeRequirement()","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.removeRequirement","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/remove-requirement.html","searchKeys":["removeRequirement","open override fun removeRequirement()","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.removeRequirement"]},{"name":"open override fun require()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.require","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/require.html","searchKeys":["require","open override fun require()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.require"]},{"name":"open override fun require()","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.require","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/require.html","searchKeys":["require","open override fun require()","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.require"]},{"name":"open override fun require()","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.require","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/require.html","searchKeys":["require","open override fun require()","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.require"]},{"name":"open override fun reset()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.reset","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/reset.html","searchKeys":["reset","open override fun reset()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.reset"]},{"name":"open override fun reset()","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.reset","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/reset.html","searchKeys":["reset","open override fun reset()","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.reset"]},{"name":"open override fun reset()","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.reset","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/reset.html","searchKeys":["reset","open override fun reset()","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.reset"]},{"name":"open override fun resetPose(pose: UnitPose2d)","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.resetPose","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/reset-pose.html","searchKeys":["resetPose","open override fun resetPose(pose: UnitPose2d)","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.resetPose"]},{"name":"open override fun resetPose(pose: UnitPose2d)","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.resetPose","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/reset-pose.html","searchKeys":["resetPose","open override fun resetPose(pose: UnitPose2d)","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.resetPose"]},{"name":"open override fun robotInit()","description":"frc.chargers.framework.ChargerRobot.robotInit","location":"-charger-lib/frc.chargers.framework/-charger-robot/robot-init.html","searchKeys":["robotInit","open override fun robotInit()","frc.chargers.framework.ChargerRobot.robotInit"]},{"name":"open override fun robotPeriodic()","description":"frc.chargers.framework.ChargerRobot.robotPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot/robot-periodic.html","searchKeys":["robotPeriodic","open override fun robotPeriodic()","frc.chargers.framework.ChargerRobot.robotPeriodic"]},{"name":"open override fun set(speed: Double)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.set","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/set.html","searchKeys":["set","open override fun set(speed: Double)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.set"]},{"name":"open override fun set(speed: Double)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.set","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/set.html","searchKeys":["set","open override fun set(speed: Double)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.set"]},{"name":"open override fun set(speed: Double)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.set","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/set.html","searchKeys":["set","open override fun set(speed: Double)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.set"]},{"name":"open override fun set(speed: Double)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.set","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/set.html","searchKeys":["set","open override fun set(speed: Double)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.set"]},{"name":"open override fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean, extraVoltage: Voltage)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.setAngularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/set-angular-position.html","searchKeys":["setAngularPosition","open override fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean, extraVoltage: Voltage)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.setAngularPosition"]},{"name":"open override fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean, extraVoltage: Voltage)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.setAngularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/set-angular-position.html","searchKeys":["setAngularPosition","open override fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean, extraVoltage: Voltage)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.setAngularPosition"]},{"name":"open override fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean, extraVoltage: Voltage)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.setAngularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/set-angular-position.html","searchKeys":["setAngularPosition","open override fun setAngularPosition(target: Angle, pidConstants: PIDConstants, continuousWrap: Boolean, extraVoltage: Voltage)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.setAngularPosition"]},{"name":"open override fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.setAngularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/set-angular-velocity.html","searchKeys":["setAngularVelocity","open override fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.setAngularVelocity"]},{"name":"open override fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.setAngularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/set-angular-velocity.html","searchKeys":["setAngularVelocity","open override fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.setAngularVelocity"]},{"name":"open override fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.setAngularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/set-angular-velocity.html","searchKeys":["setAngularVelocity","open override fun setAngularVelocity(target: AngularVelocity, pidConstants: PIDConstants, feedforwardConstants: AngularMotorFFConstants)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.setAngularVelocity"]},{"name":"open override fun setDirection(direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.setDirection","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/set-direction.html","searchKeys":["setDirection","open override fun setDirection(direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.setDirection"]},{"name":"open override fun setDirection(direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.setDirection","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/set-direction.html","searchKeys":["setDirection","open override fun setDirection(direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.setDirection"]},{"name":"open override fun setDirectionalPower(power: Double, direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.setDirectionalPower","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/set-directional-power.html","searchKeys":["setDirectionalPower","open override fun setDirectionalPower(power: Double, direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.setDirectionalPower"]},{"name":"open override fun setDirectionalPower(power: Double, direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.setDirectionalPower","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/set-directional-power.html","searchKeys":["setDirectionalPower","open override fun setDirectionalPower(power: Double, direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.setDirectionalPower"]},{"name":"open override fun setDirectionalVelocity(angularVelocity: AngularVelocity, direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.setDirectionalVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-onboard-p-i-d-swerve-module/set-directional-velocity.html","searchKeys":["setDirectionalVelocity","open override fun setDirectionalVelocity(angularVelocity: AngularVelocity, direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.OnboardPIDSwerveModule.setDirectionalVelocity"]},{"name":"open override fun setDirectionalVelocity(angularVelocity: AngularVelocity, direction: Angle)","description":"frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.setDirectionalVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module/-rio-p-i-d-swerve-module/set-directional-velocity.html","searchKeys":["setDirectionalVelocity","open override fun setDirectionalVelocity(angularVelocity: AngularVelocity, direction: Angle)","frc.chargers.hardware.subsystems.swervedrive.module.RioPIDSwerveModule.setDirectionalVelocity"]},{"name":"open override fun setInverted(isInverted: Boolean)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.setInverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/set-inverted.html","searchKeys":["setInverted","open override fun setInverted(isInverted: Boolean)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.setInverted"]},{"name":"open override fun setInverted(isInverted: Boolean)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.setInverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/set-inverted.html","searchKeys":["setInverted","open override fun setInverted(isInverted: Boolean)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.setInverted"]},{"name":"open override fun setInverted(isInverted: Boolean)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.setInverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/set-inverted.html","searchKeys":["setInverted","open override fun setInverted(isInverted: Boolean)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.setInverted"]},{"name":"open override fun setInverted(isInverted: Boolean)","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.setInverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/set-inverted.html","searchKeys":["setInverted","open override fun setInverted(isInverted: Boolean)","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.setInverted"]},{"name":"open override fun setVoltages(left: Voltage, right: Voltage)","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.setVoltages","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/set-voltages.html","searchKeys":["setVoltages","open override fun setVoltages(left: Voltage, right: Voltage)","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.setVoltages"]},{"name":"open override fun setVoltages(left: Voltage, right: Voltage)","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.setVoltages","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/set-voltages.html","searchKeys":["setVoltages","open override fun setVoltages(left: Voltage, right: Voltage)","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.setVoltages"]},{"name":"open override fun setZero(newZero: Angle)","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.setZero","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-encoder-adapter/set-zero.html","searchKeys":["setZero","open override fun setZero(newZero: Angle)","frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.setZero"]},{"name":"open override fun setZero(newZero: Angle)","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.setZero","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/set-zero.html","searchKeys":["setZero","open override fun setZero(newZero: Angle)","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.setZero"]},{"name":"open override fun setZero(newZero: Angle)","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.setZero","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-encoder-adaptor/set-zero.html","searchKeys":["setZero","open override fun setZero(newZero: Angle)","frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.setZero"]},{"name":"open override fun setZero(newZero: Angle)","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.setZero","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/set-zero.html","searchKeys":["setZero","open override fun setZero(newZero: Angle)","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.setZero"]},{"name":"open override fun simulationInit()","description":"frc.chargers.framework.ChargerRobot.simulationInit","location":"-charger-lib/frc.chargers.framework/-charger-robot/simulation-init.html","searchKeys":["simulationInit","open override fun simulationInit()","frc.chargers.framework.ChargerRobot.simulationInit"]},{"name":"open override fun simulationPeriodic()","description":"frc.chargers.framework.ChargerRobot.simulationPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot/simulation-periodic.html","searchKeys":["simulationPeriodic","open override fun simulationPeriodic()","frc.chargers.framework.ChargerRobot.simulationPeriodic"]},{"name":"open override fun stop()","description":"frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.stop","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-basic-differential-drivetrain/stop.html","searchKeys":["stop","open override fun stop()","frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.stop"]},{"name":"open override fun stop()","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stop","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/stop.html","searchKeys":["stop","open override fun stop()","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.stop"]},{"name":"open override fun stopMotor()","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.stopMotor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/stop-motor.html","searchKeys":["stopMotor","open override fun stopMotor()","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.stopMotor"]},{"name":"open override fun stopMotor()","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.stopMotor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/stop-motor.html","searchKeys":["stopMotor","open override fun stopMotor()","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.stopMotor"]},{"name":"open override fun stopMotor()","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.stopMotor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/stop-motor.html","searchKeys":["stopMotor","open override fun stopMotor()","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.stopMotor"]},{"name":"open override fun stopMotor()","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.stopMotor","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/stop-motor.html","searchKeys":["stopMotor","open override fun stopMotor()","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.stopMotor"]},{"name":"open override fun tankDrive(leftPower: Double, rightPower: Double)","description":"frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.tankDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-basic-differential-drivetrain/tank-drive.html","searchKeys":["tankDrive","open override fun tankDrive(leftPower: Double, rightPower: Double)","frc.chargers.hardware.subsystems.differentialdrive.BasicDifferentialDrivetrain.tankDrive"]},{"name":"open override fun tankDrive(leftPower: Double, rightPower: Double)","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.tankDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/tank-drive.html","searchKeys":["tankDrive","open override fun tankDrive(leftPower: Double, rightPower: Double)","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.tankDrive"]},{"name":"open override fun tankDrive(leftPower: Double, rightPower: Double)","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.tankDrive","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/tank-drive.html","searchKeys":["tankDrive","open override fun tankDrive(leftPower: Double, rightPower: Double)","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.tankDrive"]},{"name":"open override fun teleopInit()","description":"frc.chargers.framework.ChargerRobot.teleopInit","location":"-charger-lib/frc.chargers.framework/-charger-robot/teleop-init.html","searchKeys":["teleopInit","open override fun teleopInit()","frc.chargers.framework.ChargerRobot.teleopInit"]},{"name":"open override fun teleopPeriodic()","description":"frc.chargers.framework.ChargerRobot.teleopPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot/teleop-periodic.html","searchKeys":["teleopPeriodic","open override fun teleopPeriodic()","frc.chargers.framework.ChargerRobot.teleopPeriodic"]},{"name":"open override fun testInit()","description":"frc.chargers.framework.ChargerRobot.testInit","location":"-charger-lib/frc.chargers.framework/-charger-robot/test-init.html","searchKeys":["testInit","open override fun testInit()","frc.chargers.framework.ChargerRobot.testInit"]},{"name":"open override fun testPeriodic()","description":"frc.chargers.framework.ChargerRobot.testPeriodic","location":"-charger-lib/frc.chargers.framework/-charger-robot/test-periodic.html","searchKeys":["testPeriodic","open override fun testPeriodic()","frc.chargers.framework.ChargerRobot.testPeriodic"]},{"name":"open override fun zeroHeading()","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.zeroHeading","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/zero-heading.html","searchKeys":["zeroHeading","open override fun zeroHeading()","frc.chargers.hardware.sensors.imu.ChargerNavX.zeroHeading"]},{"name":"open override fun zeroHeading()","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.zeroHeading","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/zero-heading.html","searchKeys":["zeroHeading","open override fun zeroHeading()","frc.chargers.hardware.sensors.imu.ChargerPigeon2.zeroHeading"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.angularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-encoder-adapter/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.angularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.angularPosition","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-encoder-adaptor/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.AverageEncoder.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-analog-potentiometer-encoder/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.absolute.AnalogPotentiometerEncoder.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-duty-cycle-encoder/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.absolute.ChargerDutyCycleEncoder.angularPosition"]},{"name":"open override val angularPosition: Angle","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.angularPosition","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/angular-position.html","searchKeys":["angularPosition","open override val angularPosition: Angle","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.angularPosition"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.angularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-f-x-encoder-adapter/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.motorcontrol.ctre.TalonFXEncoderAdapter.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.angularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-talon-s-r-x-encoder-adapter/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.motorcontrol.ctre.TalonSRXEncoderAdapter.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.angularVelocity","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-encoder-adaptor/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.motorcontrol.rev.util.SparkEncoderAdaptor.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.AverageEncoder.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders/-average-encoder/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.AverageEncoder.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.angularVelocity"]},{"name":"open override val angularVelocity: AngularVelocity","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.angularVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-quad-encoder/angular-velocity.html","searchKeys":["angularVelocity","open override val angularVelocity: AngularVelocity","frc.chargers.hardware.sensors.encoders.absolute.ChargerQuadEncoder.angularVelocity"]},{"name":"open override val appliedCurrent: Current","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.appliedCurrent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/applied-current.html","searchKeys":["appliedCurrent","open override val appliedCurrent: Current","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.appliedCurrent"]},{"name":"open override val appliedCurrent: Current","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.appliedCurrent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/applied-current.html","searchKeys":["appliedCurrent","open override val appliedCurrent: Current","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.appliedCurrent"]},{"name":"open override val appliedCurrent: Current","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.appliedCurrent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/applied-current.html","searchKeys":["appliedCurrent","open override val appliedCurrent: Current","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.appliedCurrent"]},{"name":"open override val appliedVoltage: Voltage","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.appliedVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/applied-voltage.html","searchKeys":["appliedVoltage","open override val appliedVoltage: Voltage","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.appliedVoltage"]},{"name":"open override val appliedVoltage: Voltage","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.appliedVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/applied-voltage.html","searchKeys":["appliedVoltage","open override val appliedVoltage: Voltage","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.appliedVoltage"]},{"name":"open override val appliedVoltage: Voltage","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.appliedVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/applied-voltage.html","searchKeys":["appliedVoltage","open override val appliedVoltage: Voltage","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.appliedVoltage"]},{"name":"open override val areaPercent: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.areaPercent","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/area-percent.html","searchKeys":["areaPercent","open override val areaPercent: Double","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.areaPercent"]},{"name":"open override val areaPercent: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic.areaPercent","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/area-percent.html","searchKeys":["areaPercent","open override val areaPercent: Double","frc.chargers.hardware.sensors.vision.VisionTarget.Generic.areaPercent"]},{"name":"open override val areaPercent: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.areaPercent","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/area-percent.html","searchKeys":["areaPercent","open override val areaPercent: Double","frc.chargers.hardware.sensors.vision.VisionTarget.ML.areaPercent"]},{"name":"open override val cameraYaw: Angle","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator.cameraYaw","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/-pose-estimator/camera-yaw.html","searchKeys":["cameraYaw","open override val cameraYaw: Angle","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator.cameraYaw"]},{"name":"open override val cameraYaw: Angle","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator.cameraYaw","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/-pose-estimator/camera-yaw.html","searchKeys":["cameraYaw","open override val cameraYaw: Angle","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator.cameraYaw"]},{"name":"open override val direction: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.direction","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/direction.html","searchKeys":["direction","open override val direction: Angle","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.direction"]},{"name":"open override val direction: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.direction","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/direction.html","searchKeys":["direction","open override val direction: Angle","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.direction"]},{"name":"open override val driveCurrent: Current","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.driveCurrent","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/drive-current.html","searchKeys":["driveCurrent","open override val driveCurrent: Current","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.driveCurrent"]},{"name":"open override val driveCurrent: Current","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.driveCurrent","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/drive-current.html","searchKeys":["driveCurrent","open override val driveCurrent: Current","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.driveCurrent"]},{"name":"open override val driveTempCelsius: Double","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.driveTempCelsius","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/drive-temp-celsius.html","searchKeys":["driveTempCelsius","open override val driveTempCelsius: Double","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.driveTempCelsius"]},{"name":"open override val driveTempCelsius: Double","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.driveTempCelsius","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/drive-temp-celsius.html","searchKeys":["driveTempCelsius","open override val driveTempCelsius: Double","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.driveTempCelsius"]},{"name":"open override val error: Quantity<I>","description":"frc.chargers.controls.pid.SuperPIDController.error","location":"-charger-lib/frc.chargers.controls.pid/-super-p-i-d-controller/error.html","searchKeys":["error","open override val error: Quantity<I>","frc.chargers.controls.pid.SuperPIDController.error"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.sensors.RobotPoseMonitor.heading","location":"-charger-lib/frc.chargers.hardware.sensors/-robot-pose-monitor/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.sensors.RobotPoseMonitor.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.heading","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-gyroscope/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.heading","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.sensors.imu.ChargerNavX.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.heading","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.sensors.imu.ChargerPigeon2.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.heading","location":"-charger-lib/frc.chargers.hardware.sensors.imu.gyroscopes/-three-axis-gyroscope/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.sensors.imu.gyroscopes.ThreeAxisGyroscope.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.heading","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.heading"]},{"name":"open override val heading: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.heading","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/heading.html","searchKeys":["heading","open override val heading: Angle","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.heading"]},{"name":"open override val index: Int","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.index","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/--index--.html","searchKeys":["index","open override val index: Int","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.index"]},{"name":"open override val index: Int","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.index","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-detector-pipeline/--index--.html","searchKeys":["index","open override val index: Int","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.index"]},{"name":"open override val index: Int","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.index","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/--index--.html","searchKeys":["index","open override val index: Int","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.index"]},{"name":"open override val index: Int","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.index","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/--index--.html","searchKeys":["index","open override val index: Int","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.index"]},{"name":"open override val leftVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.leftVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/left-velocity.html","searchKeys":["leftVelocity","open override val leftVelocity: AngularVelocity","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.leftVelocity"]},{"name":"open override val leftVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.leftVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/left-velocity.html","searchKeys":["leftVelocity","open override val leftVelocity: AngularVelocity","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.leftVelocity"]},{"name":"open override val leftVoltage: Voltage","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.leftVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/left-voltage.html","searchKeys":["leftVoltage","open override val leftVoltage: Voltage","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.leftVoltage"]},{"name":"open override val leftVoltage: Voltage","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.leftVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/left-voltage.html","searchKeys":["leftVoltage","open override val leftVoltage: Voltage","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.leftVoltage"]},{"name":"open override val leftWheelTravel: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.leftWheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/left-wheel-travel.html","searchKeys":["leftWheelTravel","open override val leftWheelTravel: Angle","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.leftWheelTravel"]},{"name":"open override val leftWheelTravel: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.leftWheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/left-wheel-travel.html","searchKeys":["leftWheelTravel","open override val leftWheelTravel: Angle","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.leftWheelTravel"]},{"name":"open override val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/lens-height.html","searchKeys":["lensHeight","open override val lensHeight: Distance","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.lensHeight"]},{"name":"open override val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-detector-pipeline/lens-height.html","searchKeys":["lensHeight","open override val lensHeight: Distance","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.lensHeight"]},{"name":"open override val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/lens-height.html","searchKeys":["lensHeight","open override val lensHeight: Distance","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.lensHeight"]},{"name":"open override val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/lens-height.html","searchKeys":["lensHeight","open override val lensHeight: Distance","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.lensHeight"]},{"name":"open override val logTab: String","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.logTab","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/log-tab.html","searchKeys":["logTab","open override val logTab: String","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.logTab"]},{"name":"open override val logTab: String","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.logTab","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/log-tab.html","searchKeys":["logTab","open override val logTab: String","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.logTab"]},{"name":"open override val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/mount-angle.html","searchKeys":["mountAngle","open override val mountAngle: Angle","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.mountAngle"]},{"name":"open override val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-detector-pipeline/mount-angle.html","searchKeys":["mountAngle","open override val mountAngle: Angle","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.mountAngle"]},{"name":"open override val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/mount-angle.html","searchKeys":["mountAngle","open override val mountAngle: Angle","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.mountAngle"]},{"name":"open override val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/mount-angle.html","searchKeys":["mountAngle","open override val mountAngle: Angle","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.mountAngle"]},{"name":"open override val pitch: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.pitch","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-gyroscope/pitch.html","searchKeys":["pitch","open override val pitch: Angle","frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.pitch"]},{"name":"open override val pitch: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.pitch","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/pitch.html","searchKeys":["pitch","open override val pitch: Angle","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.pitch"]},{"name":"open override val rightVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.rightVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/right-velocity.html","searchKeys":["rightVelocity","open override val rightVelocity: AngularVelocity","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.rightVelocity"]},{"name":"open override val rightVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.rightVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/right-velocity.html","searchKeys":["rightVelocity","open override val rightVelocity: AngularVelocity","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.rightVelocity"]},{"name":"open override val rightVoltage: Voltage","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.rightVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/right-voltage.html","searchKeys":["rightVoltage","open override val rightVoltage: Voltage","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.rightVoltage"]},{"name":"open override val rightVoltage: Voltage","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.rightVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/right-voltage.html","searchKeys":["rightVoltage","open override val rightVoltage: Voltage","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.rightVoltage"]},{"name":"open override val rightWheelTravel: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.rightWheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/right-wheel-travel.html","searchKeys":["rightWheelTravel","open override val rightWheelTravel: Angle","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.rightWheelTravel"]},{"name":"open override val rightWheelTravel: Angle","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.rightWheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/right-wheel-travel.html","searchKeys":["rightWheelTravel","open override val rightWheelTravel: Angle","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.rightWheelTravel"]},{"name":"open override val robotPose: UnitPose2d","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.robotPose","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/robot-pose.html","searchKeys":["robotPose","open override val robotPose: UnitPose2d","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.robotPose"]},{"name":"open override val robotPose: UnitPose2d","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.robotPose","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/robot-pose.html","searchKeys":["robotPose","open override val robotPose: UnitPose2d","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.robotPose"]},{"name":"open override val robotPoseEstimate: Measurement<UnitPose2d>?","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator.robotPoseEstimate","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/-pose-estimator/robot-pose-estimate.html","searchKeys":["robotPoseEstimate","open override val robotPoseEstimate: Measurement<UnitPose2d>?","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.PoseEstimator.robotPoseEstimate"]},{"name":"open override val robotPoseEstimate: Measurement<UnitPose2d>?","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator.robotPoseEstimate","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/-pose-estimator/robot-pose-estimate.html","searchKeys":["robotPoseEstimate","open override val robotPoseEstimate: Measurement<UnitPose2d>?","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.PoseEstimator.robotPoseEstimate"]},{"name":"open override val roll: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.roll","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-gyroscope/roll.html","searchKeys":["roll","open override val roll: Angle","frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.roll"]},{"name":"open override val roll: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.roll","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/roll.html","searchKeys":["roll","open override val roll: Angle","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.roll"]},{"name":"open override val speed: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.speed","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/speed.html","searchKeys":["speed","open override val speed: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.speed"]},{"name":"open override val speed: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.speed","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/speed.html","searchKeys":["speed","open override val speed: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.speed"]},{"name":"open override val tempCelsius: Double","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.tempCelsius","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/temp-celsius.html","searchKeys":["tempCelsius","open override val tempCelsius: Double","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.tempCelsius"]},{"name":"open override val tempCelsius: Double","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.tempCelsius","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/temp-celsius.html","searchKeys":["tempCelsius","open override val tempCelsius: Double","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.tempCelsius"]},{"name":"open override val tempCelsius: Double","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.tempCelsius","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/temp-celsius.html","searchKeys":["tempCelsius","open override val tempCelsius: Double","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.tempCelsius"]},{"name":"open override val timestamp: Time","description":"frc.chargers.utils.Measurement.timestamp","location":"-charger-lib/frc.chargers.utils/-measurement/timestamp.html","searchKeys":["timestamp","open override val timestamp: Time","frc.chargers.utils.Measurement.timestamp"]},{"name":"open override val turnCurrent: Current","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnCurrent","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/turn-current.html","searchKeys":["turnCurrent","open override val turnCurrent: Current","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnCurrent"]},{"name":"open override val turnCurrent: Current","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnCurrent","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/turn-current.html","searchKeys":["turnCurrent","open override val turnCurrent: Current","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnCurrent"]},{"name":"open override val turnSpeed: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnSpeed","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/turn-speed.html","searchKeys":["turnSpeed","open override val turnSpeed: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnSpeed"]},{"name":"open override val turnSpeed: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnSpeed","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/turn-speed.html","searchKeys":["turnSpeed","open override val turnSpeed: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnSpeed"]},{"name":"open override val turnTempCelsius: Double","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnTempCelsius","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/turn-temp-celsius.html","searchKeys":["turnTempCelsius","open override val turnTempCelsius: Double","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnTempCelsius"]},{"name":"open override val turnTempCelsius: Double","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnTempCelsius","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/turn-temp-celsius.html","searchKeys":["turnTempCelsius","open override val turnTempCelsius: Double","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnTempCelsius"]},{"name":"open override val tx: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.tx","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/tx.html","searchKeys":["tx","open override val tx: Double","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.tx"]},{"name":"open override val tx: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic.tx","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/tx.html","searchKeys":["tx","open override val tx: Double","frc.chargers.hardware.sensors.vision.VisionTarget.Generic.tx"]},{"name":"open override val tx: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.tx","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/tx.html","searchKeys":["tx","open override val tx: Double","frc.chargers.hardware.sensors.vision.VisionTarget.ML.tx"]},{"name":"open override val ty: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.ty","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/ty.html","searchKeys":["ty","open override val ty: Double","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.ty"]},{"name":"open override val ty: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.Generic.ty","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-generic/ty.html","searchKeys":["ty","open override val ty: Double","frc.chargers.hardware.sensors.vision.VisionTarget.Generic.ty"]},{"name":"open override val ty: Double","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.ty","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/ty.html","searchKeys":["ty","open override val ty: Double","frc.chargers.hardware.sensors.vision.VisionTarget.ML.ty"]},{"name":"open override val value: T","description":"frc.chargers.utils.Measurement.value","location":"-charger-lib/frc.chargers.utils/-measurement/value.html","searchKeys":["value","open override val value: T","frc.chargers.utils.Measurement.value"]},{"name":"open override val visionData: VisionData<VisionTarget.AprilTag>?","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.visionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-apriltag-pipeline/vision-data.html","searchKeys":["visionData","open override val visionData: VisionData<VisionTarget.AprilTag>?","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.ApriltagPipeline.visionData"]},{"name":"open override val visionData: VisionData<VisionTarget.AprilTag>?","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.visionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-apriltag-pipeline/vision-data.html","searchKeys":["visionData","open override val visionData: VisionData<VisionTarget.AprilTag>?","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ApriltagPipeline.visionData"]},{"name":"open override val visionData: VisionData<VisionTarget.Generic>?","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.visionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/-color-pipeline/vision-data.html","searchKeys":["visionData","open override val visionData: VisionData<VisionTarget.Generic>?","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.ColorPipeline.visionData"]},{"name":"open override val visionData: VisionData<VisionTarget.ML>?","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.visionData","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-detector-pipeline/vision-data.html","searchKeys":["visionData","open override val visionData: VisionData<VisionTarget.ML>?","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLDetectorPipeline.visionData"]},{"name":"open override val wheelTravel: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.wheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/wheel-travel.html","searchKeys":["wheelTravel","open override val wheelTravel: Angle","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.wheelTravel"]},{"name":"open override val wheelTravel: Angle","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.wheelTravel","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/wheel-travel.html","searchKeys":["wheelTravel","open override val wheelTravel: Angle","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.wheelTravel"]},{"name":"open override val xAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer.xAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-accelerometer/x-acceleration.html","searchKeys":["xAcceleration","open override val xAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer.xAcceleration"]},{"name":"open override val xAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer.xAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-accelerometer/x-acceleration.html","searchKeys":["xAcceleration","open override val xAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer.xAcceleration"]},{"name":"open override val xVelocity: Velocity","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer.xVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-speedometer/x-velocity.html","searchKeys":["xVelocity","open override val xVelocity: Velocity","frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer.xVelocity"]},{"name":"open override val yAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer.yAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-accelerometer/y-acceleration.html","searchKeys":["yAcceleration","open override val yAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer.yAcceleration"]},{"name":"open override val yAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer.yAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-accelerometer/y-acceleration.html","searchKeys":["yAcceleration","open override val yAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer.yAcceleration"]},{"name":"open override val yVelocity: Velocity","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer.yVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-speedometer/y-velocity.html","searchKeys":["yVelocity","open override val yVelocity: Velocity","frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer.yVelocity"]},{"name":"open override val yaw: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.yaw","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-gyroscope/yaw.html","searchKeys":["yaw","open override val yaw: Angle","frc.chargers.hardware.sensors.imu.ChargerNavX.Gyroscope.yaw"]},{"name":"open override val yaw: Angle","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.yaw","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/yaw.html","searchKeys":["yaw","open override val yaw: Angle","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.yaw"]},{"name":"open override val zAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer.zAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-accelerometer/z-acceleration.html","searchKeys":["zAcceleration","open override val zAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ChargerNavX.Accelerometer.zAcceleration"]},{"name":"open override val zAcceleration: Acceleration","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer.zAcceleration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-accelerometer/z-acceleration.html","searchKeys":["zAcceleration","open override val zAcceleration: Acceleration","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Accelerometer.zAcceleration"]},{"name":"open override val zVelocity: Velocity","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer.zVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/-speedometer/z-velocity.html","searchKeys":["zVelocity","open override val zVelocity: Velocity","frc.chargers.hardware.sensors.imu.ChargerNavX.Speedometer.zVelocity"]},{"name":"open override var driveVoltage: Voltage","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.driveVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/drive-voltage.html","searchKeys":["driveVoltage","open override var driveVoltage: Voltage","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.driveVoltage"]},{"name":"open override var driveVoltage: Voltage","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.driveVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/drive-voltage.html","searchKeys":["driveVoltage","open override var driveVoltage: Voltage","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.driveVoltage"]},{"name":"open override var encoder: SparkEncoderAdaptor","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex/encoder.html","searchKeys":["encoder","open override var encoder: SparkEncoderAdaptor","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlex.encoder"]},{"name":"open override var encoder: SparkEncoderAdaptor","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max/encoder.html","searchKeys":["encoder","open override var encoder: SparkEncoderAdaptor","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMax.encoder"]},{"name":"open override var inverted: Boolean","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.inverted","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-real/inverted.html","searchKeys":["inverted","open override var inverted: Boolean","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOReal.inverted"]},{"name":"open override var inverted: Boolean","description":"frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.inverted","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive.lowlevel/-diff-drive-i-o-sim/inverted.html","searchKeys":["inverted","open override var inverted: Boolean","frc.chargers.hardware.subsystems.differentialdrive.lowlevel.DiffDriveIOSim.inverted"]},{"name":"open override var target: Quantity<I>","description":"frc.chargers.controls.pid.SuperPIDController.target","location":"-charger-lib/frc.chargers.controls.pid/-super-p-i-d-controller/target.html","searchKeys":["target","open override var target: Quantity<I>","frc.chargers.controls.pid.SuperPIDController.target"]},{"name":"open override var turnVoltage: Voltage","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-real/turn-voltage.html","searchKeys":["turnVoltage","open override var turnVoltage: Voltage","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOReal.turnVoltage"]},{"name":"open override var turnVoltage: Voltage","description":"frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnVoltage","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive.module.lowlevel/-module-i-o-sim/turn-voltage.html","searchKeys":["turnVoltage","open override var turnVoltage: Voltage","frc.chargers.hardware.subsystems.swervedrive.module.lowlevel.ModuleIOSim.turnVoltage"]},{"name":"open val bestTarget: R?","description":"frc.chargers.hardware.sensors.vision.VisionPipeline.bestTarget","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-pipeline/best-target.html","searchKeys":["bestTarget","open val bestTarget: R?","frc.chargers.hardware.sensors.vision.VisionPipeline.bestTarget"]},{"name":"open val latestPose: Pose2d","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.latestPose","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/latest-pose.html","searchKeys":["latestPose","open val latestPose: Pose2d","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.latestPose"]},{"name":"open val testCommand: Command","description":"frc.chargers.framework.ChargerRobotContainer.testCommand","location":"-charger-lib/frc.chargers.framework/-charger-robot-container/test-command.html","searchKeys":["testCommand","open val testCommand: Command","frc.chargers.framework.ChargerRobotContainer.testCommand"]},{"name":"open val timestamp: Time","description":"frc.chargers.utils.BasicMeasurement.timestamp","location":"-charger-lib/frc.chargers.utils/-basic-measurement/timestamp.html","searchKeys":["timestamp","open val timestamp: Time","frc.chargers.utils.BasicMeasurement.timestamp"]},{"name":"open val value: T","description":"frc.chargers.utils.BasicMeasurement.value","location":"-charger-lib/frc.chargers.utils/-basic-measurement/value.html","searchKeys":["value","open val value: T","frc.chargers.utils.BasicMeasurement.value"]},{"name":"open var botpose: Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.botpose","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/botpose.html","searchKeys":["botpose","open var botpose: Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.botpose"]},{"name":"open var botpose_wpiblue: Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.botpose_wpiblue","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/botpose_wpiblue.html","searchKeys":["botpose_wpiblue","open var botpose_wpiblue: Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.botpose_wpiblue"]},{"name":"open var botpose_wpired: Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.botpose_wpired","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/botpose_wpired.html","searchKeys":["botpose_wpired","open var botpose_wpired: Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.botpose_wpired"]},{"name":"open var camerapose_robotspace: Array<Double>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.camerapose_robotspace","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/camerapose_robotspace.html","searchKeys":["camerapose_robotspace","open var camerapose_robotspace: Array<Double>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.camerapose_robotspace"]},{"name":"open var classID: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.classID","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/class-i-d.html","searchKeys":["classID","open var classID: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.classID"]},{"name":"open var classID: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.classID","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/class-i-d.html","searchKeys":["classID","open var classID: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.classID"]},{"name":"open var className: String","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.className","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/class-name.html","searchKeys":["className","open var className: String","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.className"]},{"name":"open var className: String","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.className","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/class-name.html","searchKeys":["className","open var className: String","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.className"]},{"name":"open var confidence: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.confidence","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/confidence.html","searchKeys":["confidence","open var confidence: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.confidence"]},{"name":"open var confidence: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.confidence","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/confidence.html","searchKeys":["confidence","open var confidence: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.confidence"]},{"name":"open var fiducialFamily: String","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.fiducialFamily","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/fiducial-family.html","searchKeys":["fiducialFamily","open var fiducialFamily: String","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.fiducialFamily"]},{"name":"open var fiducialID: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.fiducialID","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/fiducial-i-d.html","searchKeys":["fiducialID","open var fiducialID: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.fiducialID"]},{"name":"open var latency_capture: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.latency_capture","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/latency_capture.html","searchKeys":["latency_capture","open var latency_capture: Double","frc.chargerlibexternal.limelight.LimelightHelpers.Results.latency_capture"]},{"name":"open var latency_jsonParse: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.latency_jsonParse","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/latency_json-parse.html","searchKeys":["latency_jsonParse","open var latency_jsonParse: Double","frc.chargerlibexternal.limelight.LimelightHelpers.Results.latency_jsonParse"]},{"name":"open var latency_pipeline: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.latency_pipeline","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/latency_pipeline.html","searchKeys":["latency_pipeline","open var latency_pipeline: Double","frc.chargerlibexternal.limelight.LimelightHelpers.Results.latency_pipeline"]},{"name":"open var pipelineID: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.pipelineID","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/pipeline-i-d.html","searchKeys":["pipelineID","open var pipelineID: Double","frc.chargerlibexternal.limelight.LimelightHelpers.Results.pipelineID"]},{"name":"open var ta: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.ta","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/ta.html","searchKeys":["ta","open var ta: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.ta"]},{"name":"open var ta: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ta","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/ta.html","searchKeys":["ta","open var ta: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ta"]},{"name":"open var ta: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ta","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/ta.html","searchKeys":["ta","open var ta: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ta"]},{"name":"open var targetingResults: LimelightHelpers.Results","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightResults.targetingResults","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-results/targeting-results.html","searchKeys":["targetingResults","open var targetingResults: LimelightHelpers.Results","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightResults.targetingResults"]},{"name":"open var targets_Barcode: Array<LimelightHelpers.LimelightTarget_Barcode>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Barcode","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/targets_-barcode.html","searchKeys":["targets_Barcode","open var targets_Barcode: Array<LimelightHelpers.LimelightTarget_Barcode>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Barcode"]},{"name":"open var targets_Classifier: Array<LimelightHelpers.LimelightTarget_Classifier>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Classifier","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/targets_-classifier.html","searchKeys":["targets_Classifier","open var targets_Classifier: Array<LimelightHelpers.LimelightTarget_Classifier>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Classifier"]},{"name":"open var targets_Detector: Array<LimelightHelpers.LimelightTarget_Detector>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Detector","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/targets_-detector.html","searchKeys":["targets_Detector","open var targets_Detector: Array<LimelightHelpers.LimelightTarget_Detector>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Detector"]},{"name":"open var targets_Fiducials: Array<LimelightHelpers.LimelightTarget_Fiducial>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Fiducials","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/targets_-fiducials.html","searchKeys":["targets_Fiducials","open var targets_Fiducials: Array<LimelightHelpers.LimelightTarget_Fiducial>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Fiducials"]},{"name":"open var targets_Retro: Array<LimelightHelpers.LimelightTarget_Retro>","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Retro","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/targets_-retro.html","searchKeys":["targets_Retro","open var targets_Retro: Array<LimelightHelpers.LimelightTarget_Retro>","frc.chargerlibexternal.limelight.LimelightHelpers.Results.targets_Retro"]},{"name":"open var timestamp_LIMELIGHT_publish: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.timestamp_LIMELIGHT_publish","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/timestamp_-l-i-m-e-l-i-g-h-t_publish.html","searchKeys":["timestamp_LIMELIGHT_publish","open var timestamp_LIMELIGHT_publish: Double","frc.chargerlibexternal.limelight.LimelightHelpers.Results.timestamp_LIMELIGHT_publish"]},{"name":"open var timestamp_RIOFPGA_capture: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.timestamp_RIOFPGA_capture","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/timestamp_-r-i-o-f-p-g-a_capture.html","searchKeys":["timestamp_RIOFPGA_capture","open var timestamp_RIOFPGA_capture: Double","frc.chargerlibexternal.limelight.LimelightHelpers.Results.timestamp_RIOFPGA_capture"]},{"name":"open var ts: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ts","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/ts.html","searchKeys":["ts","open var ts: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ts"]},{"name":"open var ts: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ts","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/ts.html","searchKeys":["ts","open var ts: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ts"]},{"name":"open var tx: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.tx","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/tx.html","searchKeys":["tx","open var tx: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.tx"]},{"name":"open var tx: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.tx","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/tx.html","searchKeys":["tx","open var tx: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.tx"]},{"name":"open var tx: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.tx","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/tx.html","searchKeys":["tx","open var tx: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.tx"]},{"name":"open var tx: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.tx","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/tx.html","searchKeys":["tx","open var tx: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.tx"]},{"name":"open var tx_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.tx_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/tx_pixels.html","searchKeys":["tx_pixels","open var tx_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.tx_pixels"]},{"name":"open var tx_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.tx_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/tx_pixels.html","searchKeys":["tx_pixels","open var tx_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.tx_pixels"]},{"name":"open var tx_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.tx_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/tx_pixels.html","searchKeys":["tx_pixels","open var tx_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.tx_pixels"]},{"name":"open var tx_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.tx_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/tx_pixels.html","searchKeys":["tx_pixels","open var tx_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.tx_pixels"]},{"name":"open var ty: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.ty","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/ty.html","searchKeys":["ty","open var ty: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.ty"]},{"name":"open var ty: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.ty","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/ty.html","searchKeys":["ty","open var ty: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.ty"]},{"name":"open var ty: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ty","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/ty.html","searchKeys":["ty","open var ty: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ty"]},{"name":"open var ty: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ty","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/ty.html","searchKeys":["ty","open var ty: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ty"]},{"name":"open var ty_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.ty_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/ty_pixels.html","searchKeys":["ty_pixels","open var ty_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.ty_pixels"]},{"name":"open var ty_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.ty_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-detector/ty_pixels.html","searchKeys":["ty_pixels","open var ty_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Detector.ty_pixels"]},{"name":"open var ty_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ty_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-fiducial/ty_pixels.html","searchKeys":["ty_pixels","open var ty_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Fiducial.ty_pixels"]},{"name":"open var ty_pixels: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ty_pixels","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-retro/ty_pixels.html","searchKeys":["ty_pixels","open var ty_pixels: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Retro.ty_pixels"]},{"name":"open var valid: Boolean","description":"frc.chargerlibexternal.limelight.LimelightHelpers.Results.valid","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-results/valid.html","searchKeys":["valid","open var valid: Boolean","frc.chargerlibexternal.limelight.LimelightHelpers.Results.valid"]},{"name":"open var zone: Double","description":"frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.zone","location":"-charger-lib/frc.chargerlibexternal.limelight/-limelight-helpers/-limelight-target_-classifier/zone.html","searchKeys":["zone","open var zone: Double","frc.chargerlibexternal.limelight.LimelightHelpers.LimelightTarget_Classifier.zone"]},{"name":"operator fun <C : Command> C.unaryMinus(): C","description":"frc.chargers.commands.commandbuilder.CommandBuilder.unaryMinus","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/unary-minus.html","searchKeys":["unaryMinus","operator fun <C : Command> C.unaryMinus(): C","frc.chargers.commands.commandbuilder.CommandBuilder.unaryMinus"]},{"name":"operator fun <C : Command> C.unaryPlus(): C","description":"frc.chargers.commands.commandbuilder.CommandBuilder.unaryPlus","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun <C : Command> C.unaryPlus(): C","frc.chargers.commands.commandbuilder.CommandBuilder.unaryPlus"]},{"name":"operator fun Quantity<Dimension<Mass1, Length2, TimeN1, CurrentN1>>.div(other: Angle): VoltagePerAngularAcceleration","description":"frc.chargers.utils.math.units.div","location":"-charger-lib/frc.chargers.utils.math.units/div.html","searchKeys":["div","operator fun Quantity<Dimension<Mass1, Length2, TimeN1, CurrentN1>>.div(other: Angle): VoltagePerAngularAcceleration","frc.chargers.utils.math.units.div"]},{"name":"operator fun Quantity<Dimension<Mass1, Length2, TimeN1, CurrentN1>>.div(other: Distance): VoltagePerAcceleration","description":"frc.chargers.utils.math.units.div","location":"-charger-lib/frc.chargers.utils.math.units/div.html","searchKeys":["div","operator fun Quantity<Dimension<Mass1, Length2, TimeN1, CurrentN1>>.div(other: Distance): VoltagePerAcceleration","frc.chargers.utils.math.units.div"]},{"name":"operator fun VoltagePerAcceleration.times(other: Acceleration): Voltage","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerAcceleration.times(other: Acceleration): Voltage","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerAcceleration.times(other: Distance): VoltagePerAngularAcceleration","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerAcceleration.times(other: Distance): VoltagePerAngularAcceleration","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerAngularAcceleration.times(other: AngularAcceleration): Voltage","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerAngularAcceleration.times(other: AngularAcceleration): Voltage","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerAngularVelocity.times(other: AngularVelocity): Voltage","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerAngularVelocity.times(other: AngularVelocity): Voltage","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerAngularVelocity.times(other: Time): VoltagePerAngularAcceleration","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerAngularVelocity.times(other: Time): VoltagePerAngularAcceleration","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerVelocity.times(other: Distance): VoltagePerAngularVelocity","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerVelocity.times(other: Distance): VoltagePerAngularVelocity","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerVelocity.times(other: Time): VoltagePerAcceleration","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerVelocity.times(other: Time): VoltagePerAcceleration","frc.chargers.utils.math.units.times"]},{"name":"operator fun VoltagePerVelocity.times(other: Velocity): Voltage","description":"frc.chargers.utils.math.units.times","location":"-charger-lib/frc.chargers.utils.math.units/times.html","searchKeys":["times","operator fun VoltagePerVelocity.times(other: Velocity): Voltage","frc.chargers.utils.math.units.times"]},{"name":"operator fun div(scalar: Double): UnitPose2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.div","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/div.html","searchKeys":["div","operator fun div(scalar: Double): UnitPose2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.div"]},{"name":"operator fun div(scalar: Double): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.div","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/div.html","searchKeys":["div","operator fun div(scalar: Double): UnitPose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.div"]},{"name":"operator fun div(scalar: Double): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.div","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/div.html","searchKeys":["div","operator fun div(scalar: Double): UnitTransform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.div"]},{"name":"operator fun div(scalar: Double): UnitTransform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.div","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/div.html","searchKeys":["div","operator fun div(scalar: Double): UnitTransform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.div"]},{"name":"operator fun div(scalar: Double): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.div","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/div.html","searchKeys":["div","operator fun div(scalar: Double): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.div"]},{"name":"operator fun div(scalar: Double): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.div","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/div.html","searchKeys":["div","operator fun div(scalar: Double): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.div"]},{"name":"operator fun get(vararg elements: Byte): ByteArray","description":"frc.chargers.utils.p.get","location":"-charger-lib/frc.chargers.utils/p/get.html","searchKeys":["get","operator fun get(vararg elements: Byte): ByteArray","frc.chargers.utils.p.get"]},{"name":"operator fun get(vararg elements: Char): CharArray","description":"frc.chargers.utils.p.get","location":"-charger-lib/frc.chargers.utils/p/get.html","searchKeys":["get","operator fun get(vararg elements: Char): CharArray","frc.chargers.utils.p.get"]},{"name":"operator fun get(vararg elements: Double): DoubleArray","description":"frc.chargers.utils.p.get","location":"-charger-lib/frc.chargers.utils/p/get.html","searchKeys":["get","operator fun get(vararg elements: Double): DoubleArray","frc.chargers.utils.p.get"]},{"name":"operator fun get(vararg elements: Float): FloatArray","description":"frc.chargers.utils.p.get","location":"-charger-lib/frc.chargers.utils/p/get.html","searchKeys":["get","operator fun get(vararg elements: Float): FloatArray","frc.chargers.utils.p.get"]},{"name":"operator fun get(vararg elements: Int): IntArray","description":"frc.chargers.utils.p.get","location":"-charger-lib/frc.chargers.utils/p/get.html","searchKeys":["get","operator fun get(vararg elements: Int): IntArray","frc.chargers.utils.p.get"]},{"name":"operator fun minus(other: UnitPose2d): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.minus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/minus.html","searchKeys":["minus","operator fun minus(other: UnitPose2d): UnitTransform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.minus"]},{"name":"operator fun minus(other: UnitPose3d): UnitTransform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.minus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/minus.html","searchKeys":["minus","operator fun minus(other: UnitPose3d): UnitTransform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.minus"]},{"name":"operator fun minus(other: UnitTranslation2d): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.minus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/minus.html","searchKeys":["minus","operator fun minus(other: UnitTranslation2d): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.minus"]},{"name":"operator fun minus(other: UnitTranslation3d): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.minus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/minus.html","searchKeys":["minus","operator fun minus(other: UnitTranslation3d): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.minus"]},{"name":"operator fun plus(other: UnitTransform2d): UnitPose2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.plus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/plus.html","searchKeys":["plus","operator fun plus(other: UnitTransform2d): UnitPose2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.plus"]},{"name":"operator fun plus(other: UnitTransform2d): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.plus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/plus.html","searchKeys":["plus","operator fun plus(other: UnitTransform2d): UnitTransform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.plus"]},{"name":"operator fun plus(other: UnitTransform3d): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.plus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/plus.html","searchKeys":["plus","operator fun plus(other: UnitTransform3d): UnitPose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.plus"]},{"name":"operator fun plus(other: UnitTransform3d): UnitTransform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.plus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/plus.html","searchKeys":["plus","operator fun plus(other: UnitTransform3d): UnitTransform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.plus"]},{"name":"operator fun plus(other: UnitTranslation2d): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.plus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/plus.html","searchKeys":["plus","operator fun plus(other: UnitTranslation2d): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.plus"]},{"name":"operator fun plus(other: UnitTranslation3d): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.plus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/plus.html","searchKeys":["plus","operator fun plus(other: UnitTranslation3d): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.plus"]},{"name":"operator fun times(scalar: Double): UnitPose2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.times","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/times.html","searchKeys":["times","operator fun times(scalar: Double): UnitPose2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.times"]},{"name":"operator fun times(scalar: Double): UnitPose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.times","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/times.html","searchKeys":["times","operator fun times(scalar: Double): UnitPose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.times"]},{"name":"operator fun times(scalar: Double): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.times","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/times.html","searchKeys":["times","operator fun times(scalar: Double): UnitTransform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.times"]},{"name":"operator fun times(scalar: Double): UnitTransform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.times","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/times.html","searchKeys":["times","operator fun times(scalar: Double): UnitTransform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.times"]},{"name":"operator fun times(scalar: Double): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.times","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/times.html","searchKeys":["times","operator fun times(scalar: Double): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.times"]},{"name":"operator fun times(scalar: Double): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.times","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/times.html","searchKeys":["times","operator fun times(scalar: Double): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.times"]},{"name":"operator fun unaryMinus(): UnitTransform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.unaryMinus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): UnitTransform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.unaryMinus"]},{"name":"operator fun unaryMinus(): UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.unaryMinus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.unaryMinus"]},{"name":"operator fun unaryMinus(): UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.unaryMinus","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.unaryMinus"]},{"name":"override fun configure(configuration: ChargerTalonFXConfiguration)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/configure.html","searchKeys":["configure","override fun configure(configuration: ChargerTalonFXConfiguration)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.configure"]},{"name":"override fun configure(configuration: ChargerTalonSRXConfiguration)","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.configure","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/configure.html","searchKeys":["configure","override fun configure(configuration: ChargerTalonSRXConfiguration)","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.configure"]},{"name":"override fun removeRequirement()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.removeRequirement","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-classifier-pipeline/remove-requirement.html","searchKeys":["removeRequirement","override fun removeRequirement()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.removeRequirement"]},{"name":"override fun require()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.require","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-classifier-pipeline/require.html","searchKeys":["require","override fun require()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.require"]},{"name":"override fun reset()","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.reset","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-classifier-pipeline/reset.html","searchKeys":["reset","override fun reset()","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.reset"]},{"name":"override val encoder: Encoder","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x/encoder.html","searchKeys":["encoder","override val encoder: Encoder","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRX.encoder"]},{"name":"override val encoder: TalonFXEncoderAdapter","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.encoder","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x/encoder.html","searchKeys":["encoder","override val encoder: TalonFXEncoderAdapter","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFX.encoder"]},{"name":"override val itemType: Int?","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.itemType","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/-m-l-classifier-pipeline/item-type.html","searchKeys":["itemType","override val itemType: Int?","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.MLClassifierPipeline.itemType"]},{"name":"sealed class PeriodicFrameConfig","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/index.html","searchKeys":["PeriodicFrameConfig","sealed class PeriodicFrameConfig","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig"]},{"name":"sealed class Precision<out D : Dimension<*, *, *, *>>","description":"frc.chargers.utils.Precision","location":"-charger-lib/frc.chargers.utils/-precision/index.html","searchKeys":["Precision","sealed class Precision<out D : Dimension<*, *, *, *>>","frc.chargers.utils.Precision"]},{"name":"sealed class SparkFlexEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/index.html","searchKeys":["SparkFlexEncoderType","sealed class SparkFlexEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType"]},{"name":"sealed class SparkMaxEncoderType","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/index.html","searchKeys":["SparkMaxEncoderType","sealed class SparkMaxEncoderType","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType"]},{"name":"val BUILD_DATE: String = \"2024-01-10T22:08:12Z\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.BUILD_DATE","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-b-u-i-l-d_-d-a-t-e.html","searchKeys":["BUILD_DATE","val BUILD_DATE: String = \"2024-01-10T22:08:12Z\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.BUILD_DATE"]},{"name":"val BUILD_UNIX_TIME: Long = 1704942492477","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.BUILD_UNIX_TIME","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-b-u-i-l-d_-u-n-i-x_-t-i-m-e.html","searchKeys":["BUILD_UNIX_TIME","val BUILD_UNIX_TIME: Long = 1704942492477","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.BUILD_UNIX_TIME"]},{"name":"val ChassisSpeeds.rotationSpeed: AngularVelocity","description":"frc.chargers.wpilibextensions.kinematics.rotationSpeed","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/rotation-speed.html","searchKeys":["rotationSpeed","val ChassisSpeeds.rotationSpeed: AngularVelocity","frc.chargers.wpilibextensions.kinematics.rotationSpeed"]},{"name":"val ChassisSpeeds.xVelocity: Velocity","description":"frc.chargers.wpilibextensions.kinematics.xVelocity","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/x-velocity.html","searchKeys":["xVelocity","val ChassisSpeeds.xVelocity: Velocity","frc.chargers.wpilibextensions.kinematics.xVelocity"]},{"name":"val ChassisSpeeds.yVelocity: Velocity","description":"frc.chargers.wpilibextensions.kinematics.yVelocity","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/y-velocity.html","searchKeys":["yVelocity","val ChassisSpeeds.yVelocity: Velocity","frc.chargers.wpilibextensions.kinematics.yVelocity"]},{"name":"val DIRTY: Int = 1","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.DIRTY","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-d-i-r-t-y.html","searchKeys":["DIRTY","val DIRTY: Int = 1","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.DIRTY"]},{"name":"val Double.g: Acceleration","description":"frc.chargers.utils.math.units.g","location":"-charger-lib/frc.chargers.utils.math.units/g.html","searchKeys":["g","val Double.g: Acceleration","frc.chargers.utils.math.units.g"]},{"name":"val GIT_BRANCH: String = \"master\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_BRANCH","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-g-i-t_-b-r-a-n-c-h.html","searchKeys":["GIT_BRANCH","val GIT_BRANCH: String = \"master\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_BRANCH"]},{"name":"val GIT_DATE: String = \"2024-01-10T21:55:23Z\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_DATE","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-g-i-t_-d-a-t-e.html","searchKeys":["GIT_DATE","val GIT_DATE: String = \"2024-01-10T21:55:23Z\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_DATE"]},{"name":"val GIT_REVISION: Int = 264","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_REVISION","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-g-i-t_-r-e-v-i-s-i-o-n.html","searchKeys":["GIT_REVISION","val GIT_REVISION: Int = 264","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_REVISION"]},{"name":"val GIT_SHA: String = \"8e4c95b743ed5868a6845f080b865f9124e386e9\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_SHA","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-g-i-t_-s-h-a.html","searchKeys":["GIT_SHA","val GIT_SHA: String = \"8e4c95b743ed5868a6845f080b865f9124e386e9\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.GIT_SHA"]},{"name":"val Int.g: Acceleration","description":"frc.chargers.utils.math.units.g","location":"-charger-lib/frc.chargers.utils.math.units/g.html","searchKeys":["g","val Int.g: Acceleration","frc.chargers.utils.math.units.g"]},{"name":"val Long.g: Acceleration","description":"frc.chargers.utils.math.units.g","location":"-charger-lib/frc.chargers.utils.math.units/g.html","searchKeys":["g","val Long.g: Acceleration","frc.chargers.utils.math.units.g"]},{"name":"val MAVEN_GROUP: String = \"frc.chargers\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.MAVEN_GROUP","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-m-a-v-e-n_-g-r-o-u-p.html","searchKeys":["MAVEN_GROUP","val MAVEN_GROUP: String = \"frc.chargers\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.MAVEN_GROUP"]},{"name":"val MAVEN_NAME: String = \"ChargerLib\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.MAVEN_NAME","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-m-a-v-e-n_-n-a-m-e.html","searchKeys":["MAVEN_NAME","val MAVEN_NAME: String = \"ChargerLib\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.MAVEN_NAME"]},{"name":"val None: AngularMotorFFConstants","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.Companion.None","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/-companion/-none.html","searchKeys":["None","val None: AngularMotorFFConstants","frc.chargers.controls.feedforward.AngularMotorFFConstants.Companion.None"]},{"name":"val None: ArmFFConstants","description":"frc.chargers.controls.feedforward.ArmFFConstants.Companion.None","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/-companion/-none.html","searchKeys":["None","val None: ArmFFConstants","frc.chargers.controls.feedforward.ArmFFConstants.Companion.None"]},{"name":"val None: ElevatorFFConstants","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.Companion.None","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/-companion/-none.html","searchKeys":["None","val None: ElevatorFFConstants","frc.chargers.controls.feedforward.ElevatorFFConstants.Companion.None"]},{"name":"val None: LinearMotorFFConstants","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.Companion.None","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/-companion/-none.html","searchKeys":["None","val None: LinearMotorFFConstants","frc.chargers.controls.feedforward.LinearMotorFFConstants.Companion.None"]},{"name":"val None: PIDConstants","description":"frc.chargers.controls.pid.PIDConstants.Companion.None","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/-companion/-none.html","searchKeys":["None","val None: PIDConstants","frc.chargers.controls.pid.PIDConstants.Companion.None"]},{"name":"val Rotation3d.xAngle: Angle","description":"frc.chargers.wpilibextensions.geometry.threedimensional.xAngle","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/x-angle.html","searchKeys":["xAngle","val Rotation3d.xAngle: Angle","frc.chargers.wpilibextensions.geometry.threedimensional.xAngle"]},{"name":"val Rotation3d.yAngle: Angle","description":"frc.chargers.wpilibextensions.geometry.threedimensional.yAngle","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/y-angle.html","searchKeys":["yAngle","val Rotation3d.yAngle: Angle","frc.chargers.wpilibextensions.geometry.threedimensional.yAngle"]},{"name":"val Rotation3d.zAngle: Angle","description":"frc.chargers.wpilibextensions.geometry.threedimensional.zAngle","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/z-angle.html","searchKeys":["zAngle","val Rotation3d.zAngle: Angle","frc.chargers.wpilibextensions.geometry.threedimensional.zAngle"]},{"name":"val VERSION: String = \"1.0.0\"","description":"frc.chargerlibexternal.builddata.ChargerLibBuildConstants.VERSION","location":"-charger-lib/frc.chargerlibexternal.builddata/-charger-lib-build-constants/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","val VERSION: String = \"1.0.0\"","frc.chargerlibexternal.builddata.ChargerLibBuildConstants.VERSION"]},{"name":"val absolute: ResettableEncoder","description":"frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.absolute","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-charger-c-a-ncoder/absolute.html","searchKeys":["absolute","val absolute: ResettableEncoder","frc.chargers.hardware.sensors.encoders.absolute.ChargerCANcoder.absolute"]},{"name":"val accelerometer: ChargerNavX.Accelerometer","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.accelerometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/accelerometer.html","searchKeys":["accelerometer","val accelerometer: ChargerNavX.Accelerometer","frc.chargers.hardware.sensors.imu.ChargerNavX.accelerometer"]},{"name":"val accelerometer: ChargerPigeon2.Accelerometer","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.accelerometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/accelerometer.html","searchKeys":["accelerometer","val accelerometer: ChargerPigeon2.Accelerometer","frc.chargers.hardware.sensors.imu.ChargerPigeon2.accelerometer"]},{"name":"val ahrs: AHRS","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.ahrs","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/ahrs.html","searchKeys":["ahrs","val ahrs: AHRS","frc.chargers.hardware.sensors.imu.ChargerNavX.ahrs"]},{"name":"val allTargets: List<R>","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData.allTargets","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/all-targets.html","searchKeys":["allTargets","val allTargets: List<R>","frc.chargers.hardware.sensors.vision.NonLoggableVisionData.allTargets"]},{"name":"val allowableError: ClosedRange<Quantity<D>>","description":"frc.chargers.utils.Precision.Within.allowableError","location":"-charger-lib/frc.chargers.utils/-precision/-within/allowable-error.html","searchKeys":["allowableError","val allowableError: ClosedRange<Quantity<D>>","frc.chargers.utils.Precision.Within.allowableError"]},{"name":"val altitude: Distance?","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.altitude","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/altitude.html","searchKeys":["altitude","val altitude: Distance?","frc.chargers.hardware.sensors.imu.ChargerNavX.altitude"]},{"name":"val anglePID: PIDConstants","description":"frc.chargers.constants.drivetrain.SwerveControlData.anglePID","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/angle-p-i-d.html","searchKeys":["anglePID","val anglePID: PIDConstants","frc.chargers.constants.drivetrain.SwerveControlData.anglePID"]},{"name":"val angleSetpointSupplier: SetpointSupplier<AngleDimension, VoltageDimension>","description":"frc.chargers.constants.drivetrain.SwerveControlData.angleSetpointSupplier","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/angle-setpoint-supplier.html","searchKeys":["angleSetpointSupplier","val angleSetpointSupplier: SetpointSupplier<AngleDimension, VoltageDimension>","frc.chargers.constants.drivetrain.SwerveControlData.angleSetpointSupplier"]},{"name":"val averageDepth: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.averageDepth","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-absolute/average-depth.html","searchKeys":["averageDepth","val averageDepth: Int? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.averageDepth"]},{"name":"val averageDepth: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.averageDepth","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/average-depth.html","searchKeys":["averageDepth","val averageDepth: Int? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.averageDepth"]},{"name":"val averageDepth: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.averageDepth","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-regular/average-depth.html","searchKeys":["averageDepth","val averageDepth: Int? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.averageDepth"]},{"name":"val averageDepth: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.averageDepth","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-absolute/average-depth.html","searchKeys":["averageDepth","val averageDepth: Int? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.averageDepth"]},{"name":"val averageDepth: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.averageDepth","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/average-depth.html","searchKeys":["averageDepth","val averageDepth: Int? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.averageDepth"]},{"name":"val averageDepth: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular.averageDepth","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-regular/average-depth.html","searchKeys":["averageDepth","val averageDepth: Int? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular.averageDepth"]},{"name":"val bestTarget: R","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData.bestTarget","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/best-target.html","searchKeys":["bestTarget","val bestTarget: R","frc.chargers.hardware.sensors.vision.NonLoggableVisionData.bestTarget"]},{"name":"val bottomLeft: E","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.bottomLeft","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/bottom-left.html","searchKeys":["bottomLeft","val bottomLeft: E","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.bottomLeft"]},{"name":"val bottomLeft: M","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.bottomLeft","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/bottom-left.html","searchKeys":["bottomLeft","val bottomLeft: M","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.bottomLeft"]},{"name":"val bottomLeft: SwerveModule","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.bottomLeft","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/bottom-left.html","searchKeys":["bottomLeft","val bottomLeft: SwerveModule","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.bottomLeft"]},{"name":"val bottomLeftPosition: SwerveModulePosition","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomLeftPosition","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/bottom-left-position.html","searchKeys":["bottomLeftPosition","val bottomLeftPosition: SwerveModulePosition","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomLeftPosition"]},{"name":"val bottomLeftState: SwerveModuleState","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomLeftState","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/bottom-left-state.html","searchKeys":["bottomLeftState","val bottomLeftState: SwerveModuleState","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomLeftState"]},{"name":"val bottomRight: E","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.bottomRight","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/bottom-right.html","searchKeys":["bottomRight","val bottomRight: E","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.bottomRight"]},{"name":"val bottomRight: M","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.bottomRight","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/bottom-right.html","searchKeys":["bottomRight","val bottomRight: M","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.bottomRight"]},{"name":"val bottomRight: SwerveModule","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.bottomRight","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/bottom-right.html","searchKeys":["bottomRight","val bottomRight: SwerveModule","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.bottomRight"]},{"name":"val bottomRightPosition: SwerveModulePosition","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomRightPosition","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/bottom-right-position.html","searchKeys":["bottomRightPosition","val bottomRightPosition: SwerveModulePosition","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomRightPosition"]},{"name":"val bottomRightState: SwerveModuleState","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomRightState","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/bottom-right-state.html","searchKeys":["bottomRightState","val bottomRightState: SwerveModuleState","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomRightState"]},{"name":"val branch: String","description":"frc.chargers.framework.GitData.branch","location":"-charger-lib/frc.chargers.framework/-git-data/branch.html","searchKeys":["branch","val branch: String","frc.chargers.framework.GitData.branch"]},{"name":"val buildDate: String","description":"frc.chargers.framework.GitData.buildDate","location":"-charger-lib/frc.chargers.framework/-git-data/build-date.html","searchKeys":["buildDate","val buildDate: String","frc.chargers.framework.GitData.buildDate"]},{"name":"val category: SparkAbsoluteEncoder.Type","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.category","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-absolute/category.html","searchKeys":["category","val category: SparkAbsoluteEncoder.Type","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.category"]},{"name":"val category: SparkAbsoluteEncoder.Type","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.category","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-absolute/category.html","searchKeys":["category","val category: SparkAbsoluteEncoder.Type","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.category"]},{"name":"val category: SparkFlexExternalEncoder.Type","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.category","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/category.html","searchKeys":["category","val category: SparkFlexExternalEncoder.Type","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.category"]},{"name":"val category: SparkMaxAlternateEncoder.Type","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.category","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/category.html","searchKeys":["category","val category: SparkMaxAlternateEncoder.Type","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.category"]},{"name":"val category: SparkRelativeEncoder.Type","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.category","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-regular/category.html","searchKeys":["category","val category: SparkRelativeEncoder.Type","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.category"]},{"name":"val chopCycles: Int? = null","description":"frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit.chopCycles","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-secondary-current-limit/chop-cycles.html","searchKeys":["chopCycles","val chopCycles: Int? = null","frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit.chopCycles"]},{"name":"val closedLoopDiscretizationRate: Double = 1.0","description":"frc.chargers.constants.drivetrain.SwerveControlData.closedLoopDiscretizationRate","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/closed-loop-discretization-rate.html","searchKeys":["closedLoopDiscretizationRate","val closedLoopDiscretizationRate: Double = 1.0","frc.chargers.constants.drivetrain.SwerveControlData.closedLoopDiscretizationRate"]},{"name":"val coefficients: List<Double>","description":"frc.chargers.utils.math.equations.Polynomial.coefficients","location":"-charger-lib/frc.chargers.utils.math.equations/-polynomial/coefficients.html","searchKeys":["coefficients","val coefficients: List<Double>","frc.chargers.utils.math.equations.Polynomial.coefficients"]},{"name":"val coefficients: List<Double>","description":"frc.chargers.utils.math.equations.UnitPolynomial.coefficients","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/coefficients.html","searchKeys":["coefficients","val coefficients: List<Double>","frc.chargers.utils.math.equations.UnitPolynomial.coefficients"]},{"name":"val compareDescStdDev: Comparator<MechanicalAdvantagePoseEstimator.VisionUpdate>","description":"frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.VisionUpdate.compareDescStdDev","location":"-charger-lib/frc.chargerlibexternal.frc6328/-mechanical-advantage-pose-estimator/-vision-update/compare-desc-std-dev.html","searchKeys":["compareDescStdDev","val compareDescStdDev: Comparator<MechanicalAdvantagePoseEstimator.VisionUpdate>","frc.chargerlibexternal.frc6328.MechanicalAdvantagePoseEstimator.VisionUpdate.compareDescStdDev"]},{"name":"val controlData: DiffDriveControlData","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.controlData","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/control-data.html","searchKeys":["controlData","val controlData: DiffDriveControlData","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.controlData"]},{"name":"val controlData: SwerveControlData","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.controlData","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/control-data.html","searchKeys":["controlData","val controlData: SwerveControlData","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.controlData"]},{"name":"val controlFramePeriods: MutableMap<ControlFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.controlFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/control-frame-periods.html","searchKeys":["controlFramePeriods","val controlFramePeriods: MutableMap<ControlFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.controlFramePeriods"]},{"name":"val countsPerRev: Int","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.countsPerRev","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/counts-per-rev.html","searchKeys":["countsPerRev","val countsPerRev: Int","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.countsPerRev"]},{"name":"val countsPerRev: Int","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.countsPerRev","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/counts-per-rev.html","searchKeys":["countsPerRev","val countsPerRev: Int","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.countsPerRev"]},{"name":"val currentModulePositions: ModulePositionGroup","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.currentModulePositions","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/current-module-positions.html","searchKeys":["currentModulePositions","val currentModulePositions: ModulePositionGroup","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.currentModulePositions"]},{"name":"val currentSpeeds: ChassisSpeeds","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.currentSpeeds","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/current-speeds.html","searchKeys":["currentSpeeds","val currentSpeeds: ChassisSpeeds","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.currentSpeeds"]},{"name":"val currentSpeeds: ChassisSpeeds","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.currentSpeeds","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/current-speeds.html","searchKeys":["currentSpeeds","val currentSpeeds: ChassisSpeeds","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.currentSpeeds"]},{"name":"val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.customParameters","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/custom-parameters.html","searchKeys":["customParameters","val customParameters: MutableMap<CustomParameterIndex, CustomParameterValue>","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.customParameters"]},{"name":"val defaultDriverStationIfUnavailable: DriverStation.Alliance","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.defaultDriverStationIfUnavailable","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/default-driver-station-if-unavailable.html","searchKeys":["defaultDriverStationIfUnavailable","val defaultDriverStationIfUnavailable: DriverStation.Alliance","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.defaultDriverStationIfUnavailable"]},{"name":"val deviceId: Int","description":"frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.deviceId","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-limit-switch-config/device-id.html","searchKeys":["deviceId","val deviceId: Int","frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.deviceId"]},{"name":"val dirty: Int","description":"frc.chargers.framework.GitData.dirty","location":"-charger-lib/frc.chargers.framework/-git-data/dirty.html","searchKeys":["dirty","val dirty: Int","frc.chargers.framework.GitData.dirty"]},{"name":"val distanceTraveled: Distance","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.distanceTraveled","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/distance-traveled.html","searchKeys":["distanceTraveled","val distanceTraveled: Distance","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.distanceTraveled"]},{"name":"val distanceTraveled: Distance","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.distanceTraveled","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/distance-traveled.html","searchKeys":["distanceTraveled","val distanceTraveled: Distance","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.distanceTraveled"]},{"name":"val driveGearRatio: Double","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.driveGearRatio","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/drive-gear-ratio.html","searchKeys":["driveGearRatio","val driveGearRatio: Double","frc.chargers.constants.drivetrain.SwerveHardwareData.driveGearRatio"]},{"name":"val driveInertiaMoment: MomentOfInertia","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.driveInertiaMoment","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/drive-inertia-moment.html","searchKeys":["driveInertiaMoment","val driveInertiaMoment: MomentOfInertia","frc.chargers.constants.drivetrain.SwerveHardwareData.driveInertiaMoment"]},{"name":"val encoderMeasurementPeriod: Time? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.encoderMeasurementPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/encoder-measurement-period.html","searchKeys":["encoderMeasurementPeriod","val encoderMeasurementPeriod: Time? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.encoderMeasurementPeriod"]},{"name":"val encoderMeasurementPeriod: Time? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.encoderMeasurementPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/encoder-measurement-period.html","searchKeys":["encoderMeasurementPeriod","val encoderMeasurementPeriod: Time? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.encoderMeasurementPeriod"]},{"name":"val extraLoggerConfig: () -> Unit","description":"frc.chargers.framework.RobotConfig.extraLoggerConfig","location":"-charger-lib/frc.chargers.framework/-robot-config/extra-logger-config.html","searchKeys":["extraLoggerConfig","val extraLoggerConfig: () -> Unit","frc.chargers.framework.RobotConfig.extraLoggerConfig"]},{"name":"val feedforwardOutput: Quantity<O>","description":"frc.chargers.controls.Setpoint.feedforwardOutput","location":"-charger-lib/frc.chargers.controls/-setpoint/feedforward-output.html","searchKeys":["feedforwardOutput","val feedforwardOutput: Quantity<O>","frc.chargers.controls.Setpoint.feedforwardOutput"]},{"name":"val field: Field2d","description":"frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.field","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-differential-pose-monitor/field.html","searchKeys":["field","val field: Field2d","frc.chargers.hardware.subsystems.differentialdrive.DifferentialPoseMonitor.field"]},{"name":"val field: Field2d","description":"frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.field","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-pose-monitor/field.html","searchKeys":["field","val field: Field2d","frc.chargers.hardware.subsystems.swervedrive.SwervePoseMonitor.field"]},{"name":"val firmwareVersion: String","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.firmwareVersion","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/firmware-version.html","searchKeys":["firmwareVersion","val firmwareVersion: String","frc.chargers.hardware.sensors.imu.ChargerNavX.firmwareVersion"]},{"name":"val frames: MutableMap<CANSparkLowLevel.PeriodicFrame, Int>","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom.frames","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-custom/frames.html","searchKeys":["frames","val frames: MutableMap<CANSparkLowLevel.PeriodicFrame, Int>","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Custom.frames"]},{"name":"val freeLimit: Current? = null","description":"frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.freeLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-smart-current-limit/free-limit.html","searchKeys":["freeLimit","val freeLimit: Current? = null","frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.freeLimit"]},{"name":"val g: Acceleration","description":"frc.chargers.utils.math.units.g","location":"-charger-lib/frc.chargers.utils.math.units/g.html","searchKeys":["g","val g: Acceleration","frc.chargers.utils.math.units.g"]},{"name":"val gearRatio: Double","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.gearRatio","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/gear-ratio.html","searchKeys":["gearRatio","val gearRatio: Double","frc.chargers.constants.drivetrain.DiffDriveHardwareData.gearRatio"]},{"name":"val gyro: HeadingProvider? = null","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.gyro","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/gyro.html","searchKeys":["gyro","val gyro: HeadingProvider? = null","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.gyro"]},{"name":"val gyro: HeadingProvider? = null","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.gyro","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/gyro.html","searchKeys":["gyro","val gyro: HeadingProvider? = null","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.gyro"]},{"name":"val gyroscope: ChargerNavX.Gyroscope","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.gyroscope","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/gyroscope.html","searchKeys":["gyroscope","val gyroscope: ChargerNavX.Gyroscope","frc.chargers.hardware.sensors.imu.ChargerNavX.gyroscope"]},{"name":"val gyroscope: ChargerPigeon2.Gyroscope","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.gyroscope","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/gyroscope.html","searchKeys":["gyroscope","val gyroscope: ChargerPigeon2.Gyroscope","frc.chargers.hardware.sensors.imu.ChargerPigeon2.gyroscope"]},{"name":"val hardwareConfigRetryLimit: Int = 3","description":"frc.chargers.framework.RobotConfig.hardwareConfigRetryLimit","location":"-charger-lib/frc.chargers.framework/-robot-config/hardware-config-retry-limit.html","searchKeys":["hardwareConfigRetryLimit","val hardwareConfigRetryLimit: Int = 3","frc.chargers.framework.RobotConfig.hardwareConfigRetryLimit"]},{"name":"val hardwareData: DiffDriveHardwareData","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.hardwareData","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/hardware-data.html","searchKeys":["hardwareData","val hardwareData: DiffDriveHardwareData","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.hardwareData"]},{"name":"val hardwareData: SwerveHardwareData","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.hardwareData","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/hardware-data.html","searchKeys":["hardwareData","val hardwareData: SwerveHardwareData","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.hardwareData"]},{"name":"val id: Int","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.id","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/id.html","searchKeys":["id","val id: Int","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.id"]},{"name":"val id: Int","description":"frc.chargers.hardware.sensors.vision.VisionTarget.ML.id","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-m-l/id.html","searchKeys":["id","val id: Int","frc.chargers.hardware.sensors.vision.VisionTarget.ML.id"]},{"name":"val invertMotors: Boolean = false","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.invertMotors","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/invert-motors.html","searchKeys":["invertMotors","val invertMotors: Boolean = false","frc.chargers.constants.drivetrain.DiffDriveHardwareData.invertMotors"]},{"name":"val invertTurnMotors: Boolean = false","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.invertTurnMotors","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/invert-turn-motors.html","searchKeys":["invertTurnMotors","val invertTurnMotors: Boolean = false","frc.chargers.constants.drivetrain.SwerveHardwareData.invertTurnMotors"]},{"name":"val inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-absolute/inverted.html","searchKeys":["inverted","val inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Absolute.inverted"]},{"name":"val inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-external/inverted.html","searchKeys":["inverted","val inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.External.inverted"]},{"name":"val inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-regular/inverted.html","searchKeys":["inverted","val inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.inverted"]},{"name":"val inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-absolute/inverted.html","searchKeys":["inverted","val inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Absolute.inverted"]},{"name":"val inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-alternate/inverted.html","searchKeys":["inverted","val inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Alternate.inverted"]},{"name":"val inverted: Boolean? = null","description":"frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-max-encoder-type/-regular/inverted.html","searchKeys":["inverted","val inverted: Boolean? = null","frc.chargers.hardware.motorcontrol.rev.SparkMaxEncoderType.Regular.inverted"]},{"name":"val isConnected: Boolean","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.isConnected","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/is-connected.html","searchKeys":["isConnected","val isConnected: Boolean","frc.chargers.hardware.sensors.imu.ChargerNavX.isConnected"]},{"name":"val isReplay: Boolean","description":"frc.chargers.framework.RobotConfig.isReplay","location":"-charger-lib/frc.chargers.framework/-robot-config/is-replay.html","searchKeys":["isReplay","val isReplay: Boolean","frc.chargers.framework.RobotConfig.isReplay"]},{"name":"val kA: VoltagePerAcceleration","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.kA","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/k-a.html","searchKeys":["kA","val kA: VoltagePerAcceleration","frc.chargers.controls.feedforward.ElevatorFFConstants.kA"]},{"name":"val kA: VoltagePerAcceleration","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.kA","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/k-a.html","searchKeys":["kA","val kA: VoltagePerAcceleration","frc.chargers.controls.feedforward.LinearMotorFFConstants.kA"]},{"name":"val kA: VoltagePerAngularAcceleration","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.kA","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/k-a.html","searchKeys":["kA","val kA: VoltagePerAngularAcceleration","frc.chargers.controls.feedforward.AngularMotorFFConstants.kA"]},{"name":"val kA: VoltagePerAngularAcceleration","description":"frc.chargers.controls.feedforward.ArmFFConstants.kA","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/k-a.html","searchKeys":["kA","val kA: VoltagePerAngularAcceleration","frc.chargers.controls.feedforward.ArmFFConstants.kA"]},{"name":"val kG: Voltage","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.kG","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/k-g.html","searchKeys":["kG","val kG: Voltage","frc.chargers.controls.feedforward.ElevatorFFConstants.kG"]},{"name":"val kG: VoltagePerAngle","description":"frc.chargers.controls.feedforward.ArmFFConstants.kG","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/k-g.html","searchKeys":["kG","val kG: VoltagePerAngle","frc.chargers.controls.feedforward.ArmFFConstants.kG"]},{"name":"val kS: Voltage","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.kS","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/k-s.html","searchKeys":["kS","val kS: Voltage","frc.chargers.controls.feedforward.AngularMotorFFConstants.kS"]},{"name":"val kS: Voltage","description":"frc.chargers.controls.feedforward.ArmFFConstants.kS","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/k-s.html","searchKeys":["kS","val kS: Voltage","frc.chargers.controls.feedforward.ArmFFConstants.kS"]},{"name":"val kS: Voltage","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.kS","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/k-s.html","searchKeys":["kS","val kS: Voltage","frc.chargers.controls.feedforward.ElevatorFFConstants.kS"]},{"name":"val kS: Voltage","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.kS","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/k-s.html","searchKeys":["kS","val kS: Voltage","frc.chargers.controls.feedforward.LinearMotorFFConstants.kS"]},{"name":"val kV: VoltagePerAngularVelocity","description":"frc.chargers.controls.feedforward.AngularMotorFFConstants.kV","location":"-charger-lib/frc.chargers.controls.feedforward/-angular-motor-f-f-constants/k-v.html","searchKeys":["kV","val kV: VoltagePerAngularVelocity","frc.chargers.controls.feedforward.AngularMotorFFConstants.kV"]},{"name":"val kV: VoltagePerAngularVelocity","description":"frc.chargers.controls.feedforward.ArmFFConstants.kV","location":"-charger-lib/frc.chargers.controls.feedforward/-arm-f-f-constants/k-v.html","searchKeys":["kV","val kV: VoltagePerAngularVelocity","frc.chargers.controls.feedforward.ArmFFConstants.kV"]},{"name":"val kV: VoltagePerVelocity","description":"frc.chargers.controls.feedforward.ElevatorFFConstants.kV","location":"-charger-lib/frc.chargers.controls.feedforward/-elevator-f-f-constants/k-v.html","searchKeys":["kV","val kV: VoltagePerVelocity","frc.chargers.controls.feedforward.ElevatorFFConstants.kV"]},{"name":"val kV: VoltagePerVelocity","description":"frc.chargers.controls.feedforward.LinearMotorFFConstants.kV","location":"-charger-lib/frc.chargers.controls.feedforward/-linear-motor-f-f-constants/k-v.html","searchKeys":["kV","val kV: VoltagePerVelocity","frc.chargers.controls.feedforward.LinearMotorFFConstants.kV"]},{"name":"val kinematics: DifferentialDriveKinematics","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.kinematics","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/kinematics.html","searchKeys":["kinematics","val kinematics: DifferentialDriveKinematics","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.kinematics"]},{"name":"val kinematics: SwerveDriveKinematics","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.kinematics","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/kinematics.html","searchKeys":["kinematics","val kinematics: SwerveDriveKinematics","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.kinematics"]},{"name":"val leftFF: AngularMotorFFConstants","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.leftFF","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/left-f-f.html","searchKeys":["leftFF","val leftFF: AngularMotorFFConstants","frc.chargers.constants.drivetrain.DiffDriveControlData.leftFF"]},{"name":"val leftVelocityPID: PIDConstants","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.leftVelocityPID","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/left-velocity-p-i-d.html","searchKeys":["leftVelocityPID","val leftVelocityPID: PIDConstants","frc.chargers.constants.drivetrain.DiffDriveControlData.leftVelocityPID"]},{"name":"val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/lens-height.html","searchKeys":["lensHeight","val lensHeight: Distance","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.lensHeight"]},{"name":"val lensHeight: Distance","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.lensHeight","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/lens-height.html","searchKeys":["lensHeight","val lensHeight: Distance","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.lensHeight"]},{"name":"val limit: Current","description":"frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit.limit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-secondary-current-limit/limit.html","searchKeys":["limit","val limit: Current","frc.chargers.hardware.motorcontrol.rev.util.SecondaryCurrentLimit.limit"]},{"name":"val limitSpeed: AngularVelocity? = null","description":"frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.limitSpeed","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-smart-current-limit/limit-speed.html","searchKeys":["limitSpeed","val limitSpeed: AngularVelocity? = null","frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.limitSpeed"]},{"name":"val logToNetworkTables: Boolean = true","description":"frc.chargers.framework.RobotConfig.logToNetworkTables","location":"-charger-lib/frc.chargers.framework/-robot-config/log-to-network-tables.html","searchKeys":["logToNetworkTables","val logToNetworkTables: Boolean = true","frc.chargers.framework.RobotConfig.logToNetworkTables"]},{"name":"val loopPeriod: Time","description":"frc.chargers.framework.RobotConfig.loopPeriod","location":"-charger-lib/frc.chargers.framework/-robot-config/loop-period.html","searchKeys":["loopPeriod","val loopPeriod: Time","frc.chargers.framework.RobotConfig.loopPeriod"]},{"name":"val maxAcceleration: Acceleration","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.maxAcceleration","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/max-acceleration.html","searchKeys":["maxAcceleration","val maxAcceleration: Acceleration","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.maxAcceleration"]},{"name":"val maxAcceleration: AngularAcceleration","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.maxAcceleration","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/max-acceleration.html","searchKeys":["maxAcceleration","val maxAcceleration: AngularAcceleration","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.maxAcceleration"]},{"name":"val maxLinearVelocity: Velocity","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.maxLinearVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/max-linear-velocity.html","searchKeys":["maxLinearVelocity","val maxLinearVelocity: Velocity","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.maxLinearVelocity"]},{"name":"val maxModuleSpeed: Velocity","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.maxModuleSpeed","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/max-module-speed.html","searchKeys":["maxModuleSpeed","val maxModuleSpeed: Velocity","frc.chargers.constants.drivetrain.SwerveHardwareData.maxModuleSpeed"]},{"name":"val maxRotationalVelocity: AngularVelocity","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.maxRotationalVelocity","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/max-rotational-velocity.html","searchKeys":["maxRotationalVelocity","val maxRotationalVelocity: AngularVelocity","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.maxRotationalVelocity"]},{"name":"val maxVelocity: AngularVelocity","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.maxVelocity","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/max-velocity.html","searchKeys":["maxVelocity","val maxVelocity: AngularVelocity","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.maxVelocity"]},{"name":"val maxVelocity: Velocity","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.maxVelocity","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/max-velocity.html","searchKeys":["maxVelocity","val maxVelocity: Velocity","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.maxVelocity"]},{"name":"val modulePrecision: Precision<AngleDimension>","description":"frc.chargers.constants.drivetrain.SwerveControlData.modulePrecision","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/module-precision.html","searchKeys":["modulePrecision","val modulePrecision: Precision<AngleDimension>","frc.chargers.constants.drivetrain.SwerveControlData.modulePrecision"]},{"name":"val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/mount-angle.html","searchKeys":["mountAngle","val mountAngle: Angle","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.mountAngle"]},{"name":"val mountAngle: Angle","description":"frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.mountAngle","location":"-charger-lib/frc.chargers.hardware.sensors.vision.photonvision/-charger-photon-cam/mount-angle.html","searchKeys":["mountAngle","val mountAngle: Angle","frc.chargers.hardware.sensors.vision.photonvision.ChargerPhotonCam.mountAngle"]},{"name":"val name: String","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.name","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/name.html","searchKeys":["name","val name: String","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.name"]},{"name":"val namespace: String","description":"frc.chargers.advantagekitextensions.LoggableInputsProvider.namespace","location":"-charger-lib/frc.chargers.advantagekitextensions/-loggable-inputs-provider/namespace.html","searchKeys":["namespace","val namespace: String","frc.chargers.advantagekitextensions.LoggableInputsProvider.namespace"]},{"name":"val norm: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.norm","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/norm.html","searchKeys":["norm","val norm: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.norm"]},{"name":"val norm: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.norm","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/norm.html","searchKeys":["norm","val norm: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.norm"]},{"name":"val normalOpenOrClose: LimitSwitchNormal","description":"frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.normalOpenOrClose","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-limit-switch-config/normal-open-or-close.html","searchKeys":["normalOpenOrClose","val normalOpenOrClose: LimitSwitchNormal","frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.normalOpenOrClose"]},{"name":"val onError: (Throwable) -> Unit","description":"frc.chargers.framework.RobotConfig.onError","location":"-charger-lib/frc.chargers.framework/-robot-config/on-error.html","searchKeys":["onError","val onError: (Throwable) -> Unit","frc.chargers.framework.RobotConfig.onError"]},{"name":"val openLoopDiscretizationRate: Double = 2.0","description":"frc.chargers.constants.drivetrain.SwerveControlData.openLoopDiscretizationRate","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/open-loop-discretization-rate.html","searchKeys":["openLoopDiscretizationRate","val openLoopDiscretizationRate: Double = 2.0","frc.chargers.constants.drivetrain.SwerveControlData.openLoopDiscretizationRate"]},{"name":"val optimizeEncoderFrames: Boolean = true","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized.optimizeEncoderFrames","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-optimized/optimize-encoder-frames.html","searchKeys":["optimizeEncoderFrames","val optimizeEncoderFrames: Boolean = true","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized.optimizeEncoderFrames"]},{"name":"val optimizeStatusFrames: Boolean = true","description":"frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.optimizeStatusFrames","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-spark-flex-encoder-type/-regular/optimize-status-frames.html","searchKeys":["optimizeStatusFrames","val optimizeStatusFrames: Boolean = true","frc.chargers.hardware.motorcontrol.rev.SparkFlexEncoderType.Regular.optimizeStatusFrames"]},{"name":"val otherTargets: List<R>","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData.otherTargets","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/other-targets.html","searchKeys":["otherTargets","val otherTargets: List<R>","frc.chargers.hardware.sensors.vision.NonLoggableVisionData.otherTargets"]},{"name":"val pathAlgorithm: DiffDriveControlData.PathAlgorithm","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.pathAlgorithm","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/path-algorithm.html","searchKeys":["pathAlgorithm","val pathAlgorithm: DiffDriveControlData.PathAlgorithm","frc.chargers.constants.drivetrain.DiffDriveControlData.pathAlgorithm"]},{"name":"val pathReplanConfig: ReplanningConfig","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.pathReplanConfig","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/path-replan-config.html","searchKeys":["pathReplanConfig","val pathReplanConfig: ReplanningConfig","frc.chargers.constants.drivetrain.DiffDriveControlData.pathReplanConfig"]},{"name":"val pathReplanConfig: ReplanningConfig","description":"frc.chargers.constants.drivetrain.SwerveControlData.pathReplanConfig","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/path-replan-config.html","searchKeys":["pathReplanConfig","val pathReplanConfig: ReplanningConfig","frc.chargers.constants.drivetrain.SwerveControlData.pathReplanConfig"]},{"name":"val pitchRate: AngularVelocity","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.pitchRate","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/pitch-rate.html","searchKeys":["pitchRate","val pitchRate: AngularVelocity","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.pitchRate"]},{"name":"val projectName: String","description":"frc.chargers.framework.GitData.projectName","location":"-charger-lib/frc.chargers.framework/-git-data/project-name.html","searchKeys":["projectName","val projectName: String","frc.chargers.framework.GitData.projectName"]},{"name":"val requirements: MutableList<Subsystem>","description":"frc.chargers.commands.commandbuilder.CommandBuilder.requirements","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/requirements.html","searchKeys":["requirements","val requirements: MutableList<Subsystem>","frc.chargers.commands.commandbuilder.CommandBuilder.requirements"]},{"name":"val rightFF: AngularMotorFFConstants","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.rightFF","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/right-f-f.html","searchKeys":["rightFF","val rightFF: AngularMotorFFConstants","frc.chargers.constants.drivetrain.DiffDriveControlData.rightFF"]},{"name":"val rightVelocityPID: PIDConstants","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.rightVelocityPID","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/right-velocity-p-i-d.html","searchKeys":["rightVelocityPID","val rightVelocityPID: PIDConstants","frc.chargers.constants.drivetrain.DiffDriveControlData.rightVelocityPID"]},{"name":"val robotRotationPID: PIDConstants","description":"frc.chargers.constants.drivetrain.DiffDriveControlData.robotRotationPID","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-control-data/robot-rotation-p-i-d.html","searchKeys":["robotRotationPID","val robotRotationPID: PIDConstants","frc.chargers.constants.drivetrain.DiffDriveControlData.robotRotationPID"]},{"name":"val robotRotationPID: PIDConstants","description":"frc.chargers.constants.drivetrain.SwerveControlData.robotRotationPID","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/robot-rotation-p-i-d.html","searchKeys":["robotRotationPID","val robotRotationPID: PIDConstants","frc.chargers.constants.drivetrain.SwerveControlData.robotRotationPID"]},{"name":"val robotTranslationPID: PIDConstants","description":"frc.chargers.constants.drivetrain.SwerveControlData.robotTranslationPID","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/robot-translation-p-i-d.html","searchKeys":["robotTranslationPID","val robotTranslationPID: PIDConstants","frc.chargers.constants.drivetrain.SwerveControlData.robotTranslationPID"]},{"name":"val rollRate: AngularVelocity","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.rollRate","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/roll-rate.html","searchKeys":["rollRate","val rollRate: AngularVelocity","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.rollRate"]},{"name":"val rotation: Angle","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.rotation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/rotation.html","searchKeys":["rotation","val rotation: Angle","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.rotation"]},{"name":"val rotation: Angle","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.rotation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/rotation.html","searchKeys":["rotation","val rotation: Angle","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.rotation"]},{"name":"val rotation: Rotation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.rotation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/rotation.html","searchKeys":["rotation","val rotation: Rotation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.rotation"]},{"name":"val rotation: Rotation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.rotation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/rotation.html","searchKeys":["rotation","val rotation: Rotation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.rotation"]},{"name":"val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.selectedFeedbackCoefficients","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/selected-feedback-coefficients.html","searchKeys":["selectedFeedbackCoefficients","val selectedFeedbackCoefficients: MutableMap<PIDIndex, Double>","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.selectedFeedbackCoefficients"]},{"name":"val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.selectedFeedbackSensors","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/selected-feedback-sensors.html","searchKeys":["selectedFeedbackSensors","val selectedFeedbackSensors: MutableMap<PIDIndex, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.selectedFeedbackSensors"]},{"name":"val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.sensorTermFeedbackDevices","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/sensor-term-feedback-devices.html","searchKeys":["sensorTermFeedbackDevices","val sensorTermFeedbackDevices: MutableMap<SensorTerm, FeedbackDevice>","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.sensorTermFeedbackDevices"]},{"name":"val setpointPosition: Angle","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.setpointPosition","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/setpoint-position.html","searchKeys":["setpointPosition","val setpointPosition: Angle","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.setpointPosition"]},{"name":"val setpointPosition: Angle","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.setpointPosition","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/setpoint-position.html","searchKeys":["setpointPosition","val setpointPosition: Angle","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.setpointPosition"]},{"name":"val setpointPosition: Distance","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.setpointPosition","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/setpoint-position.html","searchKeys":["setpointPosition","val setpointPosition: Distance","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.setpointPosition"]},{"name":"val setpointPosition: Distance","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.setpointPosition","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/setpoint-position.html","searchKeys":["setpointPosition","val setpointPosition: Distance","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.setpointPosition"]},{"name":"val setpointVelocity: AngularVelocity","description":"frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.setpointVelocity","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-exponential-setpoint-supplier/setpoint-velocity.html","searchKeys":["setpointVelocity","val setpointVelocity: AngularVelocity","frc.chargers.controls.motionprofiling.AngularExponentialSetpointSupplier.setpointVelocity"]},{"name":"val setpointVelocity: AngularVelocity","description":"frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.setpointVelocity","location":"-charger-lib/frc.chargers.controls.motionprofiling/-angular-trapezoidal-setpoint-supplier/setpoint-velocity.html","searchKeys":["setpointVelocity","val setpointVelocity: AngularVelocity","frc.chargers.controls.motionprofiling.AngularTrapezoidalSetpointSupplier.setpointVelocity"]},{"name":"val setpointVelocity: Velocity","description":"frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.setpointVelocity","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-exponential-setpoint-supplier/setpoint-velocity.html","searchKeys":["setpointVelocity","val setpointVelocity: Velocity","frc.chargers.controls.motionprofiling.LinearExponentialSetpointSupplier.setpointVelocity"]},{"name":"val setpointVelocity: Velocity","description":"frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.setpointVelocity","location":"-charger-lib/frc.chargers.controls.motionprofiling/-linear-trapezoidal-setpoint-supplier/setpoint-velocity.html","searchKeys":["setpointVelocity","val setpointVelocity: Velocity","frc.chargers.controls.motionprofiling.LinearTrapezoidalSetpointSupplier.setpointVelocity"]},{"name":"val sha: String","description":"frc.chargers.framework.GitData.sha","location":"-charger-lib/frc.chargers.framework/-git-data/sha.html","searchKeys":["sha","val sha: String","frc.chargers.framework.GitData.sha"]},{"name":"val siValue: Pose2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/si-value.html","searchKeys":["siValue","val siValue: Pose2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.siValue"]},{"name":"val siValue: Pose3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/si-value.html","searchKeys":["siValue","val siValue: Pose3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.siValue"]},{"name":"val siValue: Transform2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/si-value.html","searchKeys":["siValue","val siValue: Transform2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.siValue"]},{"name":"val siValue: Transform3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/si-value.html","searchKeys":["siValue","val siValue: Transform3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.siValue"]},{"name":"val siValue: Translation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/si-value.html","searchKeys":["siValue","val siValue: Translation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.siValue"]},{"name":"val siValue: Translation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/si-value.html","searchKeys":["siValue","val siValue: Translation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.siValue"]},{"name":"val siValue: TrapezoidProfile.Constraints","description":"frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-angular-motion-constraints/si-value.html","searchKeys":["siValue","val siValue: TrapezoidProfile.Constraints","frc.chargers.wpilibextensions.geometry.motion.AngularMotionConstraints.siValue"]},{"name":"val siValue: TrapezoidProfile.Constraints","description":"frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.siValue","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.motion/-linear-motion-constraints/si-value.html","searchKeys":["siValue","val siValue: TrapezoidProfile.Constraints","frc.chargers.wpilibextensions.geometry.motion.LinearMotionConstraints.siValue"]},{"name":"val speedometer: ChargerNavX.Speedometer","description":"frc.chargers.hardware.sensors.imu.ChargerNavX.speedometer","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-nav-x/speedometer.html","searchKeys":["speedometer","val speedometer: ChargerNavX.Speedometer","frc.chargers.hardware.sensors.imu.ChargerNavX.speedometer"]},{"name":"val stallLimit: Current","description":"frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.stallLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-smart-current-limit/stall-limit.html","searchKeys":["stallLimit","val stallLimit: Current","frc.chargers.hardware.motorcontrol.rev.util.SmartCurrentLimit.stallLimit"]},{"name":"val statusFramePeriods: MutableMap<StatusFrame, Time>","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.statusFramePeriods","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/status-frame-periods.html","searchKeys":["statusFramePeriods","val statusFramePeriods: MutableMap<StatusFrame, Time>","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.statusFramePeriods"]},{"name":"val targetTransformFromCam: UnitTransform3d","description":"frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.targetTransformFromCam","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-vision-target/-april-tag/target-transform-from-cam.html","searchKeys":["targetTransformFromCam","val targetTransformFromCam: UnitTransform3d","frc.chargers.hardware.sensors.vision.VisionTarget.AprilTag.targetTransformFromCam"]},{"name":"val timestamp: Time","description":"frc.chargers.hardware.sensors.vision.NonLoggableVisionData.timestamp","location":"-charger-lib/frc.chargers.hardware.sensors.vision/-non-loggable-vision-data/timestamp.html","searchKeys":["timestamp","val timestamp: Time","frc.chargers.hardware.sensors.vision.NonLoggableVisionData.timestamp"]},{"name":"val timestamp: Time","description":"frc.chargers.utils.DoubleMeasurement.timestamp","location":"-charger-lib/frc.chargers.utils/-double-measurement/timestamp.html","searchKeys":["timestamp","val timestamp: Time","frc.chargers.utils.DoubleMeasurement.timestamp"]},{"name":"val timestamp: Time","description":"frc.chargers.utils.QuantityMeasurement.timestamp","location":"-charger-lib/frc.chargers.utils/-quantity-measurement/timestamp.html","searchKeys":["timestamp","val timestamp: Time","frc.chargers.utils.QuantityMeasurement.timestamp"]},{"name":"val topLeft: E","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.topLeft","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/top-left.html","searchKeys":["topLeft","val topLeft: E","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.topLeft"]},{"name":"val topLeft: M","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.topLeft","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/top-left.html","searchKeys":["topLeft","val topLeft: M","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.topLeft"]},{"name":"val topLeft: SwerveModule","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.topLeft","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/top-left.html","searchKeys":["topLeft","val topLeft: SwerveModule","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.topLeft"]},{"name":"val topLeftPosition: SwerveModulePosition","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topLeftPosition","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/top-left-position.html","searchKeys":["topLeftPosition","val topLeftPosition: SwerveModulePosition","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topLeftPosition"]},{"name":"val topLeftState: SwerveModuleState","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topLeftState","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/top-left-state.html","searchKeys":["topLeftState","val topLeftState: SwerveModuleState","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topLeftState"]},{"name":"val topRight: E","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.topRight","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-encoders/top-right.html","searchKeys":["topRight","val topRight: E","frc.chargers.hardware.subsystems.swervedrive.SwerveEncoders.topRight"]},{"name":"val topRight: M","description":"frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.topRight","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-swerve-motors/top-right.html","searchKeys":["topRight","val topRight: M","frc.chargers.hardware.subsystems.swervedrive.SwerveMotors.topRight"]},{"name":"val topRight: SwerveModule","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.topRight","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/top-right.html","searchKeys":["topRight","val topRight: SwerveModule","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.topRight"]},{"name":"val topRightPosition: SwerveModulePosition","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topRightPosition","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/top-right-position.html","searchKeys":["topRightPosition","val topRightPosition: SwerveModulePosition","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topRightPosition"]},{"name":"val topRightState: SwerveModuleState","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topRightState","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/top-right-state.html","searchKeys":["topRightState","val topRightState: SwerveModuleState","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topRightState"]},{"name":"val trackWidth: Distance","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.trackWidth","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/track-width.html","searchKeys":["trackWidth","val trackWidth: Distance","frc.chargers.constants.drivetrain.SwerveHardwareData.trackWidth"]},{"name":"val translation: UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.translation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/translation.html","searchKeys":["translation","val translation: UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.translation"]},{"name":"val translation: UnitTranslation2d","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.translation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/translation.html","searchKeys":["translation","val translation: UnitTranslation2d","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.translation"]},{"name":"val translation: UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.translation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/translation.html","searchKeys":["translation","val translation: UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.translation"]},{"name":"val translation: UnitTranslation3d","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.translation","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/translation.html","searchKeys":["translation","val translation: UnitTranslation3d","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.translation"]},{"name":"val tuningMode: Boolean","description":"frc.chargers.framework.RobotConfig.tuningMode","location":"-charger-lib/frc.chargers.framework/-robot-config/tuning-mode.html","searchKeys":["tuningMode","val tuningMode: Boolean","frc.chargers.framework.RobotConfig.tuningMode"]},{"name":"val turnGearRatio: Double","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.turnGearRatio","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/turn-gear-ratio.html","searchKeys":["turnGearRatio","val turnGearRatio: Double","frc.chargers.constants.drivetrain.SwerveHardwareData.turnGearRatio"]},{"name":"val turnInertiaMoment: MomentOfInertia","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.turnInertiaMoment","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/turn-inertia-moment.html","searchKeys":["turnInertiaMoment","val turnInertiaMoment: MomentOfInertia","frc.chargers.constants.drivetrain.SwerveHardwareData.turnInertiaMoment"]},{"name":"val type: RemoteLimitSwitchSource","description":"frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.type","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-limit-switch-config/type.html","searchKeys":["type","val type: RemoteLimitSwitchSource","frc.chargers.hardware.motorcontrol.ctre.LimitSwitchConfig.type"]},{"name":"val units: Pair<KmeasureUnit<I>, KmeasureUnit<O>>","description":"frc.chargers.utils.math.equations.UnitPolynomial.units","location":"-charger-lib/frc.chargers.utils.math.equations/-unit-polynomial/units.html","searchKeys":["units","val units: Pair<KmeasureUnit<I>, KmeasureUnit<O>>","frc.chargers.utils.math.equations.UnitPolynomial.units"]},{"name":"val utilizedData: List<MotorData>","description":"frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized.utilizedData","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-periodic-frame-config/-optimized/utilized-data.html","searchKeys":["utilizedData","val utilizedData: List<MotorData>","frc.chargers.hardware.motorcontrol.rev.util.PeriodicFrameConfig.Optimized.utilizedData"]},{"name":"val value: Double","description":"frc.chargers.utils.DoubleMeasurement.value","location":"-charger-lib/frc.chargers.utils/-double-measurement/value.html","searchKeys":["value","val value: Double","frc.chargers.utils.DoubleMeasurement.value"]},{"name":"val value: Quantity<D>","description":"frc.chargers.utils.QuantityMeasurement.value","location":"-charger-lib/frc.chargers.utils/-quantity-measurement/value.html","searchKeys":["value","val value: Quantity<D>","frc.chargers.utils.QuantityMeasurement.value"]},{"name":"val value: Quantity<S>","description":"frc.chargers.controls.Setpoint.value","location":"-charger-lib/frc.chargers.controls/-setpoint/value.html","searchKeys":["value","val value: Quantity<S>","frc.chargers.controls.Setpoint.value"]},{"name":"val velocity: Velocity","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocity","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/velocity.html","searchKeys":["velocity","val velocity: Velocity","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.velocity"]},{"name":"val velocity: Velocity","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.velocity","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/velocity.html","searchKeys":["velocity","val velocity: Velocity","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.velocity"]},{"name":"val velocityFF: AngularMotorFFConstants","description":"frc.chargers.constants.drivetrain.SwerveControlData.velocityFF","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/velocity-f-f.html","searchKeys":["velocityFF","val velocityFF: AngularMotorFFConstants","frc.chargers.constants.drivetrain.SwerveControlData.velocityFF"]},{"name":"val velocityPID: PIDConstants","description":"frc.chargers.constants.drivetrain.SwerveControlData.velocityPID","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-control-data/velocity-p-i-d.html","searchKeys":["velocityPID","val velocityPID: PIDConstants","frc.chargers.constants.drivetrain.SwerveControlData.velocityPID"]},{"name":"val wheelBase: Distance","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.wheelBase","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/wheel-base.html","searchKeys":["wheelBase","val wheelBase: Distance","frc.chargers.constants.drivetrain.SwerveHardwareData.wheelBase"]},{"name":"val wheelDiameter: Length","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.wheelDiameter","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/wheel-diameter.html","searchKeys":["wheelDiameter","val wheelDiameter: Length","frc.chargers.constants.drivetrain.DiffDriveHardwareData.wheelDiameter"]},{"name":"val wheelDiameter: Length","description":"frc.chargers.constants.drivetrain.SwerveHardwareData.wheelDiameter","location":"-charger-lib/frc.chargers.constants.drivetrain/-swerve-hardware-data/wheel-diameter.html","searchKeys":["wheelDiameter","val wheelDiameter: Length","frc.chargers.constants.drivetrain.SwerveHardwareData.wheelDiameter"]},{"name":"val width: Distance","description":"frc.chargers.constants.drivetrain.DiffDriveHardwareData.width","location":"-charger-lib/frc.chargers.constants.drivetrain/-diff-drive-hardware-data/width.html","searchKeys":["width","val width: Distance","frc.chargers.constants.drivetrain.DiffDriveHardwareData.width"]},{"name":"val x: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.x","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/x.html","searchKeys":["x","val x: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.x"]},{"name":"val x: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.x","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/x.html","searchKeys":["x","val x: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.x"]},{"name":"val x: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.x","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/x.html","searchKeys":["x","val x: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.x"]},{"name":"val x: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.x","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/x.html","searchKeys":["x","val x: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.x"]},{"name":"val x: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.x","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/x.html","searchKeys":["x","val x: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.x"]},{"name":"val x: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.x","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/x.html","searchKeys":["x","val x: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.x"]},{"name":"val y: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.y","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/y.html","searchKeys":["y","val y: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.y"]},{"name":"val y: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.y","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/y.html","searchKeys":["y","val y: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.y"]},{"name":"val y: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.y","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/y.html","searchKeys":["y","val y: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.y"]},{"name":"val y: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.y","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-pose2d/y.html","searchKeys":["y","val y: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitPose2d.y"]},{"name":"val y: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.y","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-transform2d/y.html","searchKeys":["y","val y: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTransform2d.y"]},{"name":"val y: Distance","description":"frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.y","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.twodimensional/-unit-translation2d/y.html","searchKeys":["y","val y: Distance","frc.chargers.wpilibextensions.geometry.twodimensional.UnitTranslation2d.y"]},{"name":"val yawRate: AngularVelocity","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.yawRate","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/-gyroscope/yaw-rate.html","searchKeys":["yawRate","val yawRate: AngularVelocity","frc.chargers.hardware.sensors.imu.ChargerPigeon2.Gyroscope.yawRate"]},{"name":"val z: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.z","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-pose3d/z.html","searchKeys":["z","val z: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitPose3d.z"]},{"name":"val z: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.z","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-transform3d/z.html","searchKeys":["z","val z: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTransform3d.z"]},{"name":"val z: Distance","description":"frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.z","location":"-charger-lib/frc.chargers.wpilibextensions.geometry.threedimensional/-unit-translation3d/z.html","searchKeys":["z","val z: Distance","frc.chargers.wpilibextensions.geometry.threedimensional.UnitTranslation3d.z"]},{"name":"var LOOP_PERIOD: Time","description":"frc.chargers.framework.ChargerRobot.Companion.LOOP_PERIOD","location":"-charger-lib/frc.chargers.framework/-charger-robot/-companion/-l-o-o-p_-p-e-r-i-o-d.html","searchKeys":["LOOP_PERIOD","var LOOP_PERIOD: Time","frc.chargers.framework.ChargerRobot.Companion.LOOP_PERIOD"]},{"name":"var MotorController.speed: Double","description":"frc.chargers.hardware.motorcontrol.speed","location":"-charger-lib/frc.chargers.hardware.motorcontrol/speed.html","searchKeys":["speed","var MotorController.speed: Double","frc.chargers.hardware.motorcontrol.speed"]},{"name":"var absoluteSensorRange: AbsoluteSensorRangeValue?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.absoluteSensorRange","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/absolute-sensor-range.html","searchKeys":["absoluteSensorRange","var absoluteSensorRange: AbsoluteSensorRangeValue?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.absoluteSensorRange"]},{"name":"var active: Boolean","description":"frc.chargers.wpilibextensions.Alert.active","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/active.html","searchKeys":["active","var active: Boolean","frc.chargers.wpilibextensions.Alert.active"]},{"name":"var addingCommandsLocked: Boolean","description":"frc.chargers.commands.commandbuilder.CommandBuilder.addingCommandsLocked","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/adding-commands-locked.html","searchKeys":["addingCommandsLocked","var addingCommandsLocked: Boolean","frc.chargers.commands.commandbuilder.CommandBuilder.addingCommandsLocked"]},{"name":"var beepOnBoot: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.beepOnBoot","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/beep-on-boot.html","searchKeys":["beepOnBoot","var beepOnBoot: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.beepOnBoot"]},{"name":"var bottomLeftAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomLeftAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/bottom-left-angle.html","searchKeys":["bottomLeftAngle","var bottomLeftAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomLeftAngle"]},{"name":"var bottomLeftAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomLeftAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/bottom-left-angle.html","searchKeys":["bottomLeftAngle","var bottomLeftAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomLeftAngle"]},{"name":"var bottomLeftDistance: Distance","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomLeftDistance","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/bottom-left-distance.html","searchKeys":["bottomLeftDistance","var bottomLeftDistance: Distance","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomLeftDistance"]},{"name":"var bottomLeftSpeed: Velocity","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomLeftSpeed","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/bottom-left-speed.html","searchKeys":["bottomLeftSpeed","var bottomLeftSpeed: Velocity","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomLeftSpeed"]},{"name":"var bottomRightAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomRightAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/bottom-right-angle.html","searchKeys":["bottomRightAngle","var bottomRightAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomRightAngle"]},{"name":"var bottomRightAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomRightAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/bottom-right-angle.html","searchKeys":["bottomRightAngle","var bottomRightAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomRightAngle"]},{"name":"var bottomRightDistance: Distance","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomRightDistance","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/bottom-right-distance.html","searchKeys":["bottomRightDistance","var bottomRightDistance: Distance","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.bottomRightDistance"]},{"name":"var bottomRightSpeed: Velocity","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomRightSpeed","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/bottom-right-speed.html","searchKeys":["bottomRightSpeed","var bottomRightSpeed: Velocity","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.bottomRightSpeed"]},{"name":"var canTimeout: Time?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.canTimeout","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/can-timeout.html","searchKeys":["canTimeout","var canTimeout: Time?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.canTimeout"]},{"name":"var closedLoopRampRate: Double?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.closedLoopRampRate","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/closed-loop-ramp-rate.html","searchKeys":["closedLoopRampRate","var closedLoopRampRate: Double?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.closedLoopRampRate"]},{"name":"var closedLoopRampTimeFromNeutralToFull: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.closedLoopRampTimeFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/closed-loop-ramp-time-from-neutral-to-full.html","searchKeys":["closedLoopRampTimeFromNeutralToFull","var closedLoopRampTimeFromNeutralToFull: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.closedLoopRampTimeFromNeutralToFull"]},{"name":"var commands: LinkedHashSet<Command>","description":"frc.chargers.commands.commandbuilder.CommandBuilder.commands","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/commands.html","searchKeys":["commands","var commands: LinkedHashSet<Command>","frc.chargers.commands.commandbuilder.CommandBuilder.commands"]},{"name":"var connectedFrequencyThreshold: Int?","description":"frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.connectedFrequencyThreshold","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-duty-cycle-encoder-configuration/connected-frequency-threshold.html","searchKeys":["connectedFrequencyThreshold","var connectedFrequencyThreshold: Int?","frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.connectedFrequencyThreshold"]},{"name":"var constants: PIDConstants","description":"frc.chargers.controls.pid.SuperPIDController.constants","location":"-charger-lib/frc.chargers.controls.pid/-super-p-i-d-controller/constants.html","searchKeys":["constants","var constants: PIDConstants","frc.chargers.controls.pid.SuperPIDController.constants"]},{"name":"var controlFramePeriod: Time?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.controlFramePeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/control-frame-period.html","searchKeys":["controlFramePeriod","var controlFramePeriod: Time?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.controlFramePeriod"]},{"name":"var currentModuleStates: ModuleStateGroup","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.currentModuleStates","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/current-module-states.html","searchKeys":["currentModuleStates","var currentModuleStates: ModuleStateGroup","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.currentModuleStates"]},{"name":"var currentUpdateFrequency: Frequency?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.currentUpdateFrequency","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/current-update-frequency.html","searchKeys":["currentUpdateFrequency","var currentUpdateFrequency: Frequency?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.currentUpdateFrequency"]},{"name":"var disableNoMotionCalibration: Boolean?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.disableNoMotionCalibration","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/disable-no-motion-calibration.html","searchKeys":["disableNoMotionCalibration","var disableNoMotionCalibration: Boolean?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.disableNoMotionCalibration"]},{"name":"var disableTemperatureCompensation: Boolean?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.disableTemperatureCompensation","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/disable-temperature-compensation.html","searchKeys":["disableTemperatureCompensation","var disableTemperatureCompensation: Boolean?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.disableTemperatureCompensation"]},{"name":"var dutyCycleClosedLoopRampPeriod: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.dutyCycleClosedLoopRampPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/duty-cycle-closed-loop-ramp-period.html","searchKeys":["dutyCycleClosedLoopRampPeriod","var dutyCycleClosedLoopRampPeriod: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.dutyCycleClosedLoopRampPeriod"]},{"name":"var dutyCycleNeutralDeadband: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.dutyCycleNeutralDeadband","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/duty-cycle-neutral-deadband.html","searchKeys":["dutyCycleNeutralDeadband","var dutyCycleNeutralDeadband: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.dutyCycleNeutralDeadband"]},{"name":"var dutyCycleOpenLoopRampPeriod: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.dutyCycleOpenLoopRampPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/duty-cycle-open-loop-ramp-period.html","searchKeys":["dutyCycleOpenLoopRampPeriod","var dutyCycleOpenLoopRampPeriod: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.dutyCycleOpenLoopRampPeriod"]},{"name":"var dutyCycleRange: ClosedRange<Double>?","description":"frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.dutyCycleRange","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-duty-cycle-encoder-configuration/duty-cycle-range.html","searchKeys":["dutyCycleRange","var dutyCycleRange: ClosedRange<Double>?","frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.dutyCycleRange"]},{"name":"var enableCompass: Boolean?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.enableCompass","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/enable-compass.html","searchKeys":["enableCompass","var enableCompass: Boolean?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.enableCompass"]},{"name":"var encoderType: SparkFlexEncoderType?","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlexConfiguration.encoderType","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-flex-configuration/encoder-type.html","searchKeys":["encoderType","var encoderType: SparkFlexEncoderType?","frc.chargers.hardware.motorcontrol.rev.ChargerSparkFlexConfiguration.encoderType"]},{"name":"var encoderType: SparkMaxEncoderType?","description":"frc.chargers.hardware.motorcontrol.rev.ChargerSparkMaxConfiguration.encoderType","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev/-charger-spark-max-configuration/encoder-type.html","searchKeys":["encoderType","var encoderType: SparkMaxEncoderType?","frc.chargers.hardware.motorcontrol.rev.ChargerSparkMaxConfiguration.encoderType"]},{"name":"var endBehavior: (Boolean) -> Unit","description":"frc.chargers.commands.commandbuilder.CommandBuilder.endBehavior","location":"-charger-lib/frc.chargers.commands.commandbuilder/-command-builder/end-behavior.html","searchKeys":["endBehavior","var endBehavior: (Boolean) -> Unit","frc.chargers.commands.commandbuilder.CommandBuilder.endBehavior"]},{"name":"var expiration: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.expiration","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/expiration.html","searchKeys":["expiration","var expiration: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.expiration"]},{"name":"var feedbackRemoteSensorID: Int?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.feedbackRemoteSensorID","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/feedback-remote-sensor-i-d.html","searchKeys":["feedbackRemoteSensorID","var feedbackRemoteSensorID: Int?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.feedbackRemoteSensorID"]},{"name":"var feedbackRotorOffset: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.feedbackRotorOffset","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/feedback-rotor-offset.html","searchKeys":["feedbackRotorOffset","var feedbackRotorOffset: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.feedbackRotorOffset"]},{"name":"var feedbackSensorSource: FeedbackSensorSourceValue?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.feedbackSensorSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/feedback-sensor-source.html","searchKeys":["feedbackSensorSource","var feedbackSensorSource: FeedbackSensorSourceValue?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.feedbackSensorSource"]},{"name":"var filterVelocity: Boolean?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.filterVelocity","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/filter-velocity.html","searchKeys":["filterVelocity","var filterVelocity: Boolean?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.filterVelocity"]},{"name":"var forwardLimitAutosetPositionEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitAutosetPositionEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-limit-autoset-position-enable.html","searchKeys":["forwardLimitAutosetPositionEnable","var forwardLimitAutosetPositionEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitAutosetPositionEnable"]},{"name":"var forwardLimitAutosetPositionValue: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitAutosetPositionValue","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-limit-autoset-position-value.html","searchKeys":["forwardLimitAutosetPositionValue","var forwardLimitAutosetPositionValue: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitAutosetPositionValue"]},{"name":"var forwardLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-limit-enable.html","searchKeys":["forwardLimitEnable","var forwardLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitEnable"]},{"name":"var forwardLimitRemoteSensorID: Int?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitRemoteSensorID","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-limit-remote-sensor-i-d.html","searchKeys":["forwardLimitRemoteSensorID","var forwardLimitRemoteSensorID: Int?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitRemoteSensorID"]},{"name":"var forwardLimitSource: ForwardLimitSourceValue?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-limit-source.html","searchKeys":["forwardLimitSource","var forwardLimitSource: ForwardLimitSourceValue?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitSource"]},{"name":"var forwardLimitSwitchSource: LimitSwitchConfig?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.forwardLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/forward-limit-switch-source.html","searchKeys":["forwardLimitSwitchSource","var forwardLimitSwitchSource: LimitSwitchConfig?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.forwardLimitSwitchSource"]},{"name":"var forwardLimitType: ForwardLimitTypeValue?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitType","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-limit-type.html","searchKeys":["forwardLimitType","var forwardLimitType: ForwardLimitTypeValue?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardLimitType"]},{"name":"var forwardSoftLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-soft-limit-enable.html","searchKeys":["forwardSoftLimitEnable","var forwardSoftLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardSoftLimitEnable"]},{"name":"var forwardSoftLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.forwardSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/forward-soft-limit-enable.html","searchKeys":["forwardSoftLimitEnable","var forwardSoftLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.forwardSoftLimitEnable"]},{"name":"var forwardSoftLimitThreshold: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/forward-soft-limit-threshold.html","searchKeys":["forwardSoftLimitThreshold","var forwardSoftLimitThreshold: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.forwardSoftLimitThreshold"]},{"name":"var forwardSoftLimitThreshold: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.forwardSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/forward-soft-limit-threshold.html","searchKeys":["forwardSoftLimitThreshold","var forwardSoftLimitThreshold: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.forwardSoftLimitThreshold"]},{"name":"var futureProofConfigs: Boolean?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.futureProofConfigs","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/future-proof-configs.html","searchKeys":["futureProofConfigs","var futureProofConfigs: Boolean?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.futureProofConfigs"]},{"name":"var futureProofConfigs: Boolean?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.futureProofConfigs","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/future-proof-configs.html","searchKeys":["futureProofConfigs","var futureProofConfigs: Boolean?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.futureProofConfigs"]},{"name":"var gyroScalarX: Angle?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.gyroScalarX","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/gyro-scalar-x.html","searchKeys":["gyroScalarX","var gyroScalarX: Angle?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.gyroScalarX"]},{"name":"var gyroScalarY: Angle?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.gyroScalarY","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/gyro-scalar-y.html","searchKeys":["gyroScalarY","var gyroScalarY: Angle?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.gyroScalarY"]},{"name":"var gyroScalarZ: Angle?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.gyroScalarZ","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/gyro-scalar-z.html","searchKeys":["gyroScalarZ","var gyroScalarZ: Angle?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.gyroScalarZ"]},{"name":"var idleMode: CANSparkBase.IdleMode?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.idleMode","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/idle-mode.html","searchKeys":["idleMode","var idleMode: CANSparkBase.IdleMode?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.idleMode"]},{"name":"var invertSensorPhase: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.invertSensorPhase","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/invert-sensor-phase.html","searchKeys":["invertSensorPhase","var invertSensorPhase: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.invertSensorPhase"]},{"name":"var inverted: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/inverted.html","searchKeys":["inverted","var inverted: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.inverted"]},{"name":"var inverted: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/inverted.html","searchKeys":["inverted","var inverted: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.inverted"]},{"name":"var inverted: Boolean?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.inverted","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/inverted.html","searchKeys":["inverted","var inverted: Boolean?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.inverted"]},{"name":"var isConnected: Boolean","description":"frc.chargers.hardware.sensors.imu.ChargerPigeon2.isConnected","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-charger-pigeon2/is-connected.html","searchKeys":["isConnected","var isConnected: Boolean","frc.chargers.hardware.sensors.imu.ChargerPigeon2.isConnected"]},{"name":"var kD: Double","description":"frc.chargers.controls.pid.PIDConstants.kD","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/k-d.html","searchKeys":["kD","var kD: Double","frc.chargers.controls.pid.PIDConstants.kD"]},{"name":"var kI: Double","description":"frc.chargers.controls.pid.PIDConstants.kI","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/k-i.html","searchKeys":["kI","var kI: Double","frc.chargers.controls.pid.PIDConstants.kI"]},{"name":"var kP: Double","description":"frc.chargers.controls.pid.PIDConstants.kP","location":"-charger-lib/frc.chargers.controls.pid/-p-i-d-constants/k-p.html","searchKeys":["kP","var kP: Double","frc.chargers.controls.pid.PIDConstants.kP"]},{"name":"var magnetOffset: Angle?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.magnetOffset","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/magnet-offset.html","searchKeys":["magnetOffset","var magnetOffset: Angle?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.magnetOffset"]},{"name":"var map: MutableMap<K, V>","description":"frc.chargers.utils.MappableContext.map","location":"-charger-lib/frc.chargers.utils/-mappable-context/map.html","searchKeys":["map","var map: MutableMap<K, V>","frc.chargers.utils.MappableContext.map"]},{"name":"var motorOutputUpdateFrequency: Frequency?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.motorOutputUpdateFrequency","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/motor-output-update-frequency.html","searchKeys":["motorOutputUpdateFrequency","var motorOutputUpdateFrequency: Frequency?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.motorOutputUpdateFrequency"]},{"name":"var mountPosePitch: Angle?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.mountPosePitch","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/mount-pose-pitch.html","searchKeys":["mountPosePitch","var mountPosePitch: Angle?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.mountPosePitch"]},{"name":"var mountPoseRoll: Angle?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.mountPoseRoll","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/mount-pose-roll.html","searchKeys":["mountPoseRoll","var mountPoseRoll: Angle?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.mountPoseRoll"]},{"name":"var mountPoseYaw: Angle?","description":"frc.chargers.hardware.sensors.imu.Pigeon2Configuration.mountPoseYaw","location":"-charger-lib/frc.chargers.hardware.sensors.imu/-pigeon2-configuration/mount-pose-yaw.html","searchKeys":["mountPoseYaw","var mountPoseYaw: Angle?","frc.chargers.hardware.sensors.imu.Pigeon2Configuration.mountPoseYaw"]},{"name":"var neutralDeadbandPercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.neutralDeadbandPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/neutral-deadband-percent.html","searchKeys":["neutralDeadbandPercent","var neutralDeadbandPercent: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.neutralDeadbandPercent"]},{"name":"var neutralMode: NeutralModeValue?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.neutralMode","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/neutral-mode.html","searchKeys":["neutralMode","var neutralMode: NeutralModeValue?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.neutralMode"]},{"name":"var nominalOutputForwardPercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.nominalOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/nominal-output-forward-percent.html","searchKeys":["nominalOutputForwardPercent","var nominalOutputForwardPercent: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.nominalOutputForwardPercent"]},{"name":"var nominalOutputReversePercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.nominalOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/nominal-output-reverse-percent.html","searchKeys":["nominalOutputReversePercent","var nominalOutputReversePercent: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.nominalOutputReversePercent"]},{"name":"var openLoopRampRate: Double?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.openLoopRampRate","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/open-loop-ramp-rate.html","searchKeys":["openLoopRampRate","var openLoopRampRate: Double?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.openLoopRampRate"]},{"name":"var openLoopRampTimeFromNeutralToFull: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.openLoopRampTimeFromNeutralToFull","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/open-loop-ramp-time-from-neutral-to-full.html","searchKeys":["openLoopRampTimeFromNeutralToFull","var openLoopRampTimeFromNeutralToFull: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.openLoopRampTimeFromNeutralToFull"]},{"name":"var peakForwardDutyCycle: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakForwardDutyCycle","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/peak-forward-duty-cycle.html","searchKeys":["peakForwardDutyCycle","var peakForwardDutyCycle: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakForwardDutyCycle"]},{"name":"var peakForwardTorqueCurrent: Current?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakForwardTorqueCurrent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/peak-forward-torque-current.html","searchKeys":["peakForwardTorqueCurrent","var peakForwardTorqueCurrent: Current?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakForwardTorqueCurrent"]},{"name":"var peakForwardVoltage: Voltage?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakForwardVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/peak-forward-voltage.html","searchKeys":["peakForwardVoltage","var peakForwardVoltage: Voltage?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakForwardVoltage"]},{"name":"var peakOutputForwardPercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.peakOutputForwardPercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/peak-output-forward-percent.html","searchKeys":["peakOutputForwardPercent","var peakOutputForwardPercent: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.peakOutputForwardPercent"]},{"name":"var peakOutputReversePercent: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.peakOutputReversePercent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/peak-output-reverse-percent.html","searchKeys":["peakOutputReversePercent","var peakOutputReversePercent: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.peakOutputReversePercent"]},{"name":"var peakReverseDutyCycle: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakReverseDutyCycle","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/peak-reverse-duty-cycle.html","searchKeys":["peakReverseDutyCycle","var peakReverseDutyCycle: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakReverseDutyCycle"]},{"name":"var peakReverseTorqueCurrent: Current?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakReverseTorqueCurrent","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/peak-reverse-torque-current.html","searchKeys":["peakReverseTorqueCurrent","var peakReverseTorqueCurrent: Current?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakReverseTorqueCurrent"]},{"name":"var peakReverseVoltage: Voltage?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakReverseVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/peak-reverse-voltage.html","searchKeys":["peakReverseVoltage","var peakReverseVoltage: Voltage?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.peakReverseVoltage"]},{"name":"var periodicFrameConfig: PeriodicFrameConfig?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.periodicFrameConfig","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/periodic-frame-config.html","searchKeys":["periodicFrameConfig","var periodicFrameConfig: PeriodicFrameConfig?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.periodicFrameConfig"]},{"name":"var poseEstimator: RobotPoseMonitor","description":"frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.poseEstimator","location":"-charger-lib/frc.chargers.hardware.subsystems.differentialdrive/-encoder-differential-drivetrain/pose-estimator.html","searchKeys":["poseEstimator","var poseEstimator: RobotPoseMonitor","frc.chargers.hardware.subsystems.differentialdrive.EncoderDifferentialDrivetrain.poseEstimator"]},{"name":"var poseEstimator: RobotPoseMonitor","description":"frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.poseEstimator","location":"-charger-lib/frc.chargers.hardware.subsystems.swervedrive/-encoder-holonomic-drivetrain/pose-estimator.html","searchKeys":["poseEstimator","var poseEstimator: RobotPoseMonitor","frc.chargers.hardware.subsystems.swervedrive.EncoderHolonomicDrivetrain.poseEstimator"]},{"name":"var positionOffset: Double?","description":"frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.positionOffset","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-duty-cycle-encoder-configuration/position-offset.html","searchKeys":["positionOffset","var positionOffset: Double?","frc.chargers.hardware.sensors.encoders.absolute.DutyCycleEncoderConfiguration.positionOffset"]},{"name":"var positionUpdateFrequency: Frequency?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.positionUpdateFrequency","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/position-update-frequency.html","searchKeys":["positionUpdateFrequency","var positionUpdateFrequency: Frequency?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.positionUpdateFrequency"]},{"name":"var positionUpdateFrequency: Frequency?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.positionUpdateFrequency","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/position-update-frequency.html","searchKeys":["positionUpdateFrequency","var positionUpdateFrequency: Frequency?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.positionUpdateFrequency"]},{"name":"var reverseDirection: Boolean?","description":"frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.reverseDirection","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-quad-encoder-configuration/reverse-direction.html","searchKeys":["reverseDirection","var reverseDirection: Boolean?","frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.reverseDirection"]},{"name":"var reverseLimitAutosetPositionEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitAutosetPositionEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-limit-autoset-position-enable.html","searchKeys":["reverseLimitAutosetPositionEnable","var reverseLimitAutosetPositionEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitAutosetPositionEnable"]},{"name":"var reverseLimitAutosetPositionValue: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitAutosetPositionValue","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-limit-autoset-position-value.html","searchKeys":["reverseLimitAutosetPositionValue","var reverseLimitAutosetPositionValue: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitAutosetPositionValue"]},{"name":"var reverseLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-limit-enable.html","searchKeys":["reverseLimitEnable","var reverseLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitEnable"]},{"name":"var reverseLimitRemoteSensorID: Int?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitRemoteSensorID","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-limit-remote-sensor-i-d.html","searchKeys":["reverseLimitRemoteSensorID","var reverseLimitRemoteSensorID: Int?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitRemoteSensorID"]},{"name":"var reverseLimitSource: ReverseLimitSourceValue?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-limit-source.html","searchKeys":["reverseLimitSource","var reverseLimitSource: ReverseLimitSourceValue?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitSource"]},{"name":"var reverseLimitSwitchSource: LimitSwitchConfig?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.reverseLimitSwitchSource","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/reverse-limit-switch-source.html","searchKeys":["reverseLimitSwitchSource","var reverseLimitSwitchSource: LimitSwitchConfig?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.reverseLimitSwitchSource"]},{"name":"var reverseLimitType: ReverseLimitTypeValue?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitType","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-limit-type.html","searchKeys":["reverseLimitType","var reverseLimitType: ReverseLimitTypeValue?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseLimitType"]},{"name":"var reverseSoftLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-soft-limit-enable.html","searchKeys":["reverseSoftLimitEnable","var reverseSoftLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseSoftLimitEnable"]},{"name":"var reverseSoftLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.reverseSoftLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/reverse-soft-limit-enable.html","searchKeys":["reverseSoftLimitEnable","var reverseSoftLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.reverseSoftLimitEnable"]},{"name":"var reverseSoftLimitThreshold: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/reverse-soft-limit-threshold.html","searchKeys":["reverseSoftLimitThreshold","var reverseSoftLimitThreshold: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.reverseSoftLimitThreshold"]},{"name":"var reverseSoftLimitThreshold: Angle?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.reverseSoftLimitThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/reverse-soft-limit-threshold.html","searchKeys":["reverseSoftLimitThreshold","var reverseSoftLimitThreshold: Angle?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.reverseSoftLimitThreshold"]},{"name":"var rotationPower: Double","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers.rotationPower","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/rotation-power.html","searchKeys":["rotationPower","var rotationPower: Double","frc.chargers.wpilibextensions.kinematics.ChassisPowers.rotationPower"]},{"name":"var rotorToSensorRatio: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.rotorToSensorRatio","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/rotor-to-sensor-ratio.html","searchKeys":["rotorToSensorRatio","var rotorToSensorRatio: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.rotorToSensorRatio"]},{"name":"var safetyEnabled: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.safetyEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/safety-enabled.html","searchKeys":["safetyEnabled","var safetyEnabled: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.safetyEnabled"]},{"name":"var samplesPerAverage: Int?","description":"frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.samplesPerAverage","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-quad-encoder-configuration/samples-per-average.html","searchKeys":["samplesPerAverage","var samplesPerAverage: Int?","frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.samplesPerAverage"]},{"name":"var secondaryCurrentLimit: SecondaryCurrentLimit?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.secondaryCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/secondary-current-limit.html","searchKeys":["secondaryCurrentLimit","var secondaryCurrentLimit: SecondaryCurrentLimit?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.secondaryCurrentLimit"]},{"name":"var sensorDirection: SensorDirectionValue?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.sensorDirection","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/sensor-direction.html","searchKeys":["sensorDirection","var sensorDirection: SensorDirectionValue?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.sensorDirection"]},{"name":"var sensorToMechanismRatio: Double?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.sensorToMechanismRatio","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/sensor-to-mechanism-ratio.html","searchKeys":["sensorToMechanismRatio","var sensorToMechanismRatio: Double?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.sensorToMechanismRatio"]},{"name":"var simDevice: SimDevice?","description":"frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.simDevice","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-quad-encoder-configuration/sim-device.html","searchKeys":["simDevice","var simDevice: SimDevice?","frc.chargers.hardware.sensors.encoders.absolute.QuadEncoderConfiguration.simDevice"]},{"name":"var smartCurrentLimit: SmartCurrentLimit?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.smartCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/smart-current-limit.html","searchKeys":["smartCurrentLimit","var smartCurrentLimit: SmartCurrentLimit?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.smartCurrentLimit"]},{"name":"var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle>","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.softLimits","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/soft-limits.html","searchKeys":["softLimits","var softLimits: MutableMap<CANSparkBase.SoftLimitDirection, Angle>","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.softLimits"]},{"name":"var statorCurrentLimit: Current?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.statorCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/stator-current-limit.html","searchKeys":["statorCurrentLimit","var statorCurrentLimit: Current?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.statorCurrentLimit"]},{"name":"var statorCurrentLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.statorCurrentLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/stator-current-limit-enable.html","searchKeys":["statorCurrentLimitEnable","var statorCurrentLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.statorCurrentLimitEnable"]},{"name":"var supplyCurrentLimit: Current?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyCurrentLimit","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/supply-current-limit.html","searchKeys":["supplyCurrentLimit","var supplyCurrentLimit: Current?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyCurrentLimit"]},{"name":"var supplyCurrentLimitEnable: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyCurrentLimitEnable","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/supply-current-limit-enable.html","searchKeys":["supplyCurrentLimitEnable","var supplyCurrentLimitEnable: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyCurrentLimitEnable"]},{"name":"var supplyCurrentThreshold: Current?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyCurrentThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/supply-current-threshold.html","searchKeys":["supplyCurrentThreshold","var supplyCurrentThreshold: Current?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyCurrentThreshold"]},{"name":"var supplyTimeThreshold: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyTimeThreshold","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/supply-time-threshold.html","searchKeys":["supplyTimeThreshold","var supplyTimeThreshold: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyTimeThreshold"]},{"name":"var supplyVoltageTimeConstant: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyVoltageTimeConstant","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/supply-voltage-time-constant.html","searchKeys":["supplyVoltageTimeConstant","var supplyVoltageTimeConstant: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.supplyVoltageTimeConstant"]},{"name":"var text: String","description":"frc.chargers.wpilibextensions.Alert.text","location":"-charger-lib/frc.chargers.wpilibextensions/-alert/text.html","searchKeys":["text","var text: String","frc.chargers.wpilibextensions.Alert.text"]},{"name":"var topLeftAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topLeftAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/top-left-angle.html","searchKeys":["topLeftAngle","var topLeftAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topLeftAngle"]},{"name":"var topLeftAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topLeftAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/top-left-angle.html","searchKeys":["topLeftAngle","var topLeftAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topLeftAngle"]},{"name":"var topLeftDistance: Distance","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topLeftDistance","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/top-left-distance.html","searchKeys":["topLeftDistance","var topLeftDistance: Distance","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topLeftDistance"]},{"name":"var topLeftSpeed: Velocity","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topLeftSpeed","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/top-left-speed.html","searchKeys":["topLeftSpeed","var topLeftSpeed: Velocity","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topLeftSpeed"]},{"name":"var topRightAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topRightAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/top-right-angle.html","searchKeys":["topRightAngle","var topRightAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topRightAngle"]},{"name":"var topRightAngle: Angle","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topRightAngle","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/top-right-angle.html","searchKeys":["topRightAngle","var topRightAngle: Angle","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topRightAngle"]},{"name":"var topRightDistance: Distance","description":"frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topRightDistance","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-position-group/top-right-distance.html","searchKeys":["topRightDistance","var topRightDistance: Distance","frc.chargers.wpilibextensions.kinematics.ModulePositionGroup.topRightDistance"]},{"name":"var topRightSpeed: Velocity","description":"frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topRightSpeed","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-module-state-group/top-right-speed.html","searchKeys":["topRightSpeed","var topRightSpeed: Velocity","frc.chargers.wpilibextensions.kinematics.ModuleStateGroup.topRightSpeed"]},{"name":"var torqueClosedLoopRampPeriod: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.torqueClosedLoopRampPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/torque-closed-loop-ramp-period.html","searchKeys":["torqueClosedLoopRampPeriod","var torqueClosedLoopRampPeriod: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.torqueClosedLoopRampPeriod"]},{"name":"var torqueNeutralDeadband: Current?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.torqueNeutralDeadband","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/torque-neutral-deadband.html","searchKeys":["torqueNeutralDeadband","var torqueNeutralDeadband: Current?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.torqueNeutralDeadband"]},{"name":"var torqueOpenLoopRampPeriod: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.torqueOpenLoopRampPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/torque-open-loop-ramp-period.html","searchKeys":["torqueOpenLoopRampPeriod","var torqueOpenLoopRampPeriod: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.torqueOpenLoopRampPeriod"]},{"name":"var tuningMode: Boolean","description":"frc.chargers.constants.tuning.DashboardTuner.Companion.tuningMode","location":"-charger-lib/frc.chargers.constants.tuning/-dashboard-tuner/-companion/tuning-mode.html","searchKeys":["tuningMode","var tuningMode: Boolean","frc.chargers.constants.tuning.DashboardTuner.Companion.tuningMode"]},{"name":"var useJsonDump: Boolean","description":"frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.useJsonDump","location":"-charger-lib/frc.chargers.hardware.sensors.vision.limelight/-charger-limelight/use-json-dump.html","searchKeys":["useJsonDump","var useJsonDump: Boolean","frc.chargers.hardware.sensors.vision.limelight.ChargerLimelight.useJsonDump"]},{"name":"var velocityUpdateFrequency: Frequency?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.velocityUpdateFrequency","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/velocity-update-frequency.html","searchKeys":["velocityUpdateFrequency","var velocityUpdateFrequency: Frequency?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.velocityUpdateFrequency"]},{"name":"var velocityUpdateFrequency: Frequency?","description":"frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.velocityUpdateFrequency","location":"-charger-lib/frc.chargers.hardware.sensors.encoders.absolute/-c-a-ncoder-configuration/velocity-update-frequency.html","searchKeys":["velocityUpdateFrequency","var velocityUpdateFrequency: Frequency?","frc.chargers.hardware.sensors.encoders.absolute.CANcoderConfiguration.velocityUpdateFrequency"]},{"name":"var voltageClosedLoopRampPeriod: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.voltageClosedLoopRampPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/voltage-closed-loop-ramp-period.html","searchKeys":["voltageClosedLoopRampPeriod","var voltageClosedLoopRampPeriod: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.voltageClosedLoopRampPeriod"]},{"name":"var voltageCompensationEnabled: Boolean?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.voltageCompensationEnabled","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/voltage-compensation-enabled.html","searchKeys":["voltageCompensationEnabled","var voltageCompensationEnabled: Boolean?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.voltageCompensationEnabled"]},{"name":"var voltageCompensationNominalVoltage: Voltage?","description":"frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.voltageCompensationNominalVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.rev.util/-spark-configuration-base/voltage-compensation-nominal-voltage.html","searchKeys":["voltageCompensationNominalVoltage","var voltageCompensationNominalVoltage: Voltage?","frc.chargers.hardware.motorcontrol.rev.util.SparkConfigurationBase.voltageCompensationNominalVoltage"]},{"name":"var voltageCompensationSaturationVoltage: Voltage?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.voltageCompensationSaturationVoltage","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/voltage-compensation-saturation-voltage.html","searchKeys":["voltageCompensationSaturationVoltage","var voltageCompensationSaturationVoltage: Voltage?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.voltageCompensationSaturationVoltage"]},{"name":"var voltageMeasurementFilterSamples: Int?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.voltageMeasurementFilterSamples","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-s-r-x-configuration/voltage-measurement-filter-samples.html","searchKeys":["voltageMeasurementFilterSamples","var voltageMeasurementFilterSamples: Int?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonSRXConfiguration.voltageMeasurementFilterSamples"]},{"name":"var voltageOpenLoopRampPeriod: Time?","description":"frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.voltageOpenLoopRampPeriod","location":"-charger-lib/frc.chargers.hardware.motorcontrol.ctre/-charger-talon-f-x-configuration/voltage-open-loop-ramp-period.html","searchKeys":["voltageOpenLoopRampPeriod","var voltageOpenLoopRampPeriod: Time?","frc.chargers.hardware.motorcontrol.ctre.ChargerTalonFXConfiguration.voltageOpenLoopRampPeriod"]},{"name":"var xPower: Double","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers.xPower","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/x-power.html","searchKeys":["xPower","var xPower: Double","frc.chargers.wpilibextensions.kinematics.ChassisPowers.xPower"]},{"name":"var yPower: Double","description":"frc.chargers.wpilibextensions.kinematics.ChassisPowers.yPower","location":"-charger-lib/frc.chargers.wpilibextensions.kinematics/-chassis-powers/y-power.html","searchKeys":["yPower","var yPower: Double","frc.chargers.wpilibextensions.kinematics.ChassisPowers.yPower"]}]
